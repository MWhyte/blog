{"meta":{"exported_on":1599568314211,"version":"3.32.1"},"data":{"migrations_lock":[{"lock_key":"km01","locked":1,"acquired_at":"2020-09-08 12:31:54","released_at":"2020-07-23 22:44:28"}],"migrations":[{"id":1,"name":"1-create-tables.js","version":"init","currentVersion":"3.25"},{"id":2,"name":"2-create-fixtures.js","version":"init","currentVersion":"3.25"},{"id":3,"name":"1-post-excerpt.js","version":"1.3","currentVersion":"3.25"},{"id":4,"name":"1-codeinjection-post.js","version":"1.4","currentVersion":"3.25"},{"id":5,"name":"1-og-twitter-post.js","version":"1.5","currentVersion":"3.25"},{"id":6,"name":"1-add-backup-client.js","version":"1.7","currentVersion":"3.25"},{"id":7,"name":"1-add-permissions-redirect.js","version":"1.9","currentVersion":"3.25"},{"id":8,"name":"1-custom-template-post.js","version":"1.13","currentVersion":"3.25"},{"id":9,"name":"2-theme-permissions.js","version":"1.13","currentVersion":"3.25"},{"id":10,"name":"1-add-webhooks-table.js","version":"1.18","currentVersion":"3.25"},{"id":11,"name":"1-webhook-permissions.js","version":"1.19","currentVersion":"3.25"},{"id":12,"name":"1-remove-settings-keys.js","version":"1.20","currentVersion":"3.25"},{"id":13,"name":"1-add-contributor-role.js","version":"1.21","currentVersion":"3.25"},{"id":14,"name":"1-multiple-authors-DDL.js","version":"1.22","currentVersion":"3.25"},{"id":15,"name":"1-multiple-authors-DML.js","version":"1.22","currentVersion":"3.25"},{"id":16,"name":"1-update-koenig-beta-html.js","version":"1.25","currentVersion":"3.25"},{"id":17,"name":"2-demo-post.js","version":"1.25","currentVersion":"3.25"},{"id":18,"name":"1-rename-amp-column.js","version":"2.0","currentVersion":"3.25"},{"id":19,"name":"2-update-posts.js","version":"2.0","currentVersion":"3.25"},{"id":20,"name":"3-remove-koenig-labs.js","version":"2.0","currentVersion":"3.25"},{"id":21,"name":"4-permalink-setting.js","version":"2.0","currentVersion":"3.25"},{"id":22,"name":"5-remove-demo-post.js","version":"2.0","currentVersion":"3.25"},{"id":23,"name":"6-replace-fixture-posts.js","version":"2.0","currentVersion":"3.25"},{"id":24,"name":"1-add-sessions-table.js","version":"2.2","currentVersion":"3.25"},{"id":25,"name":"2-add-integrations-and-api-key-tables.js","version":"2.2","currentVersion":"3.25"},{"id":26,"name":"3-insert-admin-integration-role.js","version":"2.2","currentVersion":"3.25"},{"id":27,"name":"4-insert-integration-and-api-key-permissions.js","version":"2.2","currentVersion":"3.25"},{"id":28,"name":"5-add-mobiledoc-revisions-table.js","version":"2.2","currentVersion":"3.25"},{"id":29,"name":"1-add-webhook-columns.js","version":"2.3","currentVersion":"3.25"},{"id":30,"name":"2-add-webhook-edit-permission.js","version":"2.3","currentVersion":"3.25"},{"id":31,"name":"1-add-webhook-permission-roles.js","version":"2.6","currentVersion":"3.25"},{"id":32,"name":"1-add-members-table.js","version":"2.8","currentVersion":"3.25"},{"id":33,"name":"1-remove-empty-strings.js","version":"2.13","currentVersion":"3.25"},{"id":34,"name":"1-add-actions-table.js","version":"2.14","currentVersion":"3.25"},{"id":35,"name":"2-add-actions-permissions.js","version":"2.14","currentVersion":"3.25"},{"id":36,"name":"1-add-type-column-to-integrations.js","version":"2.15","currentVersion":"3.25"},{"id":37,"name":"2-insert-zapier-integration.js","version":"2.15","currentVersion":"3.25"},{"id":38,"name":"1-add-members-perrmissions.js","version":"2.16","currentVersion":"3.25"},{"id":39,"name":"1-normalize-settings.js","version":"2.17","currentVersion":"3.25"},{"id":40,"name":"2-posts-add-canonical-url.js","version":"2.17","currentVersion":"3.25"},{"id":41,"name":"1-restore-settings-from-backup.js","version":"2.18","currentVersion":"3.25"},{"id":42,"name":"1-update-editor-permissions.js","version":"2.21","currentVersion":"3.25"},{"id":43,"name":"1-add-member-permissions-to-roles.js","version":"2.22","currentVersion":"3.25"},{"id":44,"name":"1-insert-ghost-db-backup-role.js","version":"2.27","currentVersion":"3.25"},{"id":45,"name":"2-insert-db-backup-integration.js","version":"2.27","currentVersion":"3.25"},{"id":46,"name":"3-add-subdirectory-to-relative-canonical-urls.js","version":"2.27","currentVersion":"3.25"},{"id":47,"name":"1-add-db-backup-content-permission.js","version":"2.28","currentVersion":"3.25"},{"id":48,"name":"2-add-db-backup-content-permission-to-roles.js","version":"2.28","currentVersion":"3.25"},{"id":49,"name":"3-insert-ghost-scheduler-role.js","version":"2.28","currentVersion":"3.25"},{"id":50,"name":"4-insert-scheduler-integration.js","version":"2.28","currentVersion":"3.25"},{"id":51,"name":"5-add-scheduler-permission-to-roles.js","version":"2.28","currentVersion":"3.25"},{"id":52,"name":"6-add-type-column.js","version":"2.28","currentVersion":"3.25"},{"id":53,"name":"7-populate-type-column.js","version":"2.28","currentVersion":"3.25"},{"id":54,"name":"8-remove-page-column.js","version":"2.28","currentVersion":"3.25"},{"id":55,"name":"1-add-post-page-column.js","version":"2.29","currentVersion":"3.25"},{"id":56,"name":"2-populate-post-page-column.js","version":"2.29","currentVersion":"3.25"},{"id":57,"name":"3-remove-page-type-column.js","version":"2.29","currentVersion":"3.25"},{"id":58,"name":"1-remove-name-and-password-from-members-table.js","version":"2.31","currentVersion":"3.25"},{"id":59,"name":"01-add-members-stripe-customers-table.js","version":"2.32","currentVersion":"3.25"},{"id":60,"name":"02-add-name-to-members-table.js","version":"2.32","currentVersion":"3.25"},{"id":61,"name":"01-correct-members-stripe-customers-table.js","version":"2.33","currentVersion":"3.25"},{"id":62,"name":"01-add-stripe-customers-subscriptions-table.js","version":"2.34","currentVersion":"3.25"},{"id":63,"name":"02-add-email-to-members-stripe-customers-table.js","version":"2.34","currentVersion":"3.25"},{"id":64,"name":"03-add-name-to-members-stripe-customers-table.js","version":"2.34","currentVersion":"3.25"},{"id":65,"name":"01-add-note-to-members-table.js","version":"2.35","currentVersion":"3.25"},{"id":66,"name":"01-add-self-signup-and-from address-to-members-settings.js","version":"2.37","currentVersion":"3.25"},{"id":67,"name":"01-remove-user-ghost-auth-columns.js","version":"3.0","currentVersion":"3.25"},{"id":68,"name":"02-drop-token-auth-tables.js","version":"3.0","currentVersion":"3.25"},{"id":69,"name":"03-drop-client-auth-tables.js","version":"3.0","currentVersion":"3.25"},{"id":70,"name":"04-add-posts-meta-table.js","version":"3.0","currentVersion":"3.25"},{"id":71,"name":"05-populate-posts-meta-table.js","version":"3.0","currentVersion":"3.25"},{"id":72,"name":"06-remove-posts-meta-columns.js","version":"3.0","currentVersion":"3.25"},{"id":73,"name":"07-add-posts-type-column.js","version":"3.0","currentVersion":"3.25"},{"id":74,"name":"08-populate-posts-type-column.js","version":"3.0","currentVersion":"3.25"},{"id":75,"name":"09-remove-posts-page-column.js","version":"3.0","currentVersion":"3.25"},{"id":76,"name":"10-remove-empty-strings.js","version":"3.0","currentVersion":"3.25"},{"id":77,"name":"11-update-posts-html.js","version":"3.0","currentVersion":"3.25"},{"id":78,"name":"12-populate-members-table-from-subscribers.js","version":"3.0","currentVersion":"3.25"},{"id":79,"name":"13-drop-subscribers-table.js","version":"3.0","currentVersion":"3.25"},{"id":80,"name":"14-remove-subscribers-flag.js","version":"3.0","currentVersion":"3.25"},{"id":81,"name":"01-add-send-email-when-published-to-posts.js","version":"3.1","currentVersion":"3.25"},{"id":82,"name":"02-add-email-subject-to-posts-meta.js","version":"3.1","currentVersion":"3.25"},{"id":83,"name":"03-add-email-preview-permissions.js","version":"3.1","currentVersion":"3.25"},{"id":84,"name":"04-add-subscribed-flag-to-members.js","version":"3.1","currentVersion":"3.25"},{"id":85,"name":"05-add-emails-table.js","version":"3.1","currentVersion":"3.25"},{"id":86,"name":"06-add-email-permissions.js","version":"3.1","currentVersion":"3.25"},{"id":87,"name":"07-add-uuid-field-to-members.js","version":"3.1","currentVersion":"3.25"},{"id":88,"name":"08-add-uuid-values-to-members.js","version":"3.1","currentVersion":"3.25"},{"id":89,"name":"09-add-further-email-permissions.js","version":"3.1","currentVersion":"3.25"},{"id":90,"name":"10-add-email-error-data-column.js","version":"3.1","currentVersion":"3.25"},{"id":91,"name":"01-add-cancel-at-period-end-to-subscriptions.js","version":"3.2","currentVersion":"3.25"},{"id":92,"name":"1-add-labels-table.js","version":"3.6","currentVersion":"3.25"},{"id":93,"name":"2-add-members-labels-table.js","version":"3.6","currentVersion":"3.25"},{"id":94,"name":"3-add-labels-permissions.js","version":"3.6","currentVersion":"3.25"},{"id":95,"name":"01-fix-incorrect-member-labels-foreign-keys.js","version":"3.7","currentVersion":"3.25"},{"id":96,"name":"01-add-geolocation-to-members.js","version":"3.8","currentVersion":"3.25"},{"id":97,"name":"01-add-member-sigin-url-permissions.js","version":"3.9","currentVersion":"3.25"},{"id":98,"name":"01-remove-broken-complimentary-plan-from-members-settings.js","version":"3.11","currentVersion":"3.25"},{"id":99,"name":"01-add-identity-permission.js","version":"3.12","currentVersion":"3.25"},{"id":100,"name":"02-remove-legacy-is-paid-flag-from-settings.js","version":"3.12","currentVersion":"3.25"},{"id":101,"name":"01-add-email-preview-permissions-to-roles.js","version":"3.18","currentVersion":"3.25"},{"id":102,"name":"02-add-members_stripe_connect-auth-permissions.js","version":"3.18","currentVersion":"3.25"},{"id":103,"name":"01-update-member-from-email-address.js","version":"3.19","currentVersion":"3.25"},{"id":104,"name":"01-removed-legacy-values-from-settings-table.js","version":"3.22","currentVersion":"3.25"},{"id":105,"name":"02-settings-key-renames.js","version":"3.22","currentVersion":"3.25"},{"id":106,"name":"03-add-group-and-flags-to-settings.js","version":"3.22","currentVersion":"3.25"},{"id":107,"name":"04-populate-settings-groups-and-flags.js","version":"3.22","currentVersion":"3.25"},{"id":108,"name":"05-migrate-members-subscription-settings.js","version":"3.22","currentVersion":"3.25"},{"id":109,"name":"06-migrate-stripe-connect-settings.js","version":"3.22","currentVersion":"3.25"},{"id":110,"name":"07-update-type-for-settings.js","version":"3.22","currentVersion":"3.25"},{"id":111,"name":"01-migrate-bulk-email-settings.js","version":"3.23","currentVersion":"3.25"},{"id":112,"name":"02-remove-bulk-email-settings.js","version":"3.23","currentVersion":"3.25"},{"id":113,"name":"03-update-portal-button-setting.js","version":"3.23","currentVersion":"3.25"},{"id":114,"name":"04-add-meta-columns-to-tags-table.js","version":"3.23","currentVersion":"3.25"},{"id":115,"name":"01-populate-group-for-new-portal-settings.js","version":"3.24","currentVersion":"3.25"},{"id":116,"name":"01-add-members-stripe-webhook-settings.js","version":"3.25","currentVersion":"3.25"},{"id":117,"name":"01-add-amp-gtag-id-setting.js","version":"3.26","currentVersion":"3.26"}],"posts":[{"id":"5f1203ad07a62a995513aec9","uuid":"5822bb9c-37c0-4f60-9979-0d73ec354831","title":"OCJA: Tips on passing the Exam","slug":"passing-the-ocja-exam","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][us_message type=&#8221;attention&#8221;]This post is intended for readers that wish to pass the OCJA Exam. It is for people with some experience in java. Whilst it is entirely possible to approach the test as a beginner I would strongly advise at least some previous experience and a good grasp of the basics first. See the <a title=\\\"Beginner Java\\\" href=\\\"https://www.codenerve.com/beginner-java/\\\">beginner java course</a> and be 100% comfortable with the basics first.</p>\\n[/us_message][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h3>Overview</h3>\\n<h6>Why bother?</h6>\\n<p>Whilst studying for the OCJA exam I often wondered what exactly I was getting myself into and was all the work worth it? Well, the answer depends on what you are hoping to get out of it. Sure its a &#8216;nice to have&#8217; on your CV. But that alone was not really a big driver for me. Having 6 odd years experience in java I didn&#8217;t really need it on my CV so for me, it was all about going back to basics and testing myself to see just how well I knew my trade.</p>\\n<p>The answer to that was not as well as I thought I did!</p>\\n<p>Having a plethora of tools and IDE&#8217;s that provide constant feedback and auto-completion I realised that I was leaning quite heavily on these to do most of the &#8216;work&#8217; for me. Only when I sat down and started to study for the exam did I realise that I was rusty. For me refreshing my memory was the biggest gain. I feel that I now have a better understanding of the language than I ever did.</p>\\n<p><span style=\\\"text-decoration: underline;\\\">You will really improve your java programming skills and foundational knowledge.</span></p>\\n<h6>Preparation Time</h6>\\n<p>For me, it was one solid week of studying and taking practice tests. I would say it would be closer to 4-6 weeks for someone relatively new. I would suggest taking some diagnostic tests if you are experienced. That way you will better understand your weaknesses and you can plan to target these areas during your studying.</p>\\n<h6>When to book your test?</h6>\\n<p>I would recommend booking your test once you can consistently pass practice exams and feel confident that you have covered all sections thoroughly. Test centres are booked through <a href=\\\"http://www.pearsonvue.com/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">PearsonVue</a> and generally speaking, there are tests available in a short timeframe.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner width=&#8221;1/4&#8243;][us_image image=&#8221;879&#8243; size=&#8221;full&#8221; onclick=&#8221;custom_link&#8221; link=&#8221;url:http%3A%2F%2Fwww.amazon.co.uk%2Fgp%2Fproduct%2F0071772006%2Fref%3Das_li_tl%3Fie%3DUTF8%26amp%3Bcamp%3D1634%26amp%3Bcreative%3D6738%26amp%3BcreativeASIN%3D0071772006%26amp%3BlinkCode%3Das2%26amp%3Btag%3Dcodenervecom-21&#8243;][/vc_column_inner][vc_column_inner width=&#8221;3/4&#8243;][vc_column_text]\\n<h3>Recommended Book</h3>\\n<p>In preparation for the OCJA exam, I used <span class=\\\"author notFaded\\\" data-width=\\\"\\\"><span class=\\\"a-declarative\\\" data-action=\\\"a-popover\\\" data-a-popover=\\\"{&quot;position&quot;:&quot;triggerBottom&quot;,&quot;name&quot;:&quot;contributor-info-B001H6U55G&quot;,&quot;allowLinkDefault&quot;:&quot;true&quot;}\\\">Kathy Sierra and </span></span><span class=\\\"author notFaded\\\" data-width=\\\"\\\">Bert Bates&#8217; study guide: <a href=\\\"http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0071772006&amp;linkCode=as2&amp;tag=codenervecom-21\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><span style=\\\"text-decoration: underline;\\\">OCA/OCP Java SE 7 Programmer I &amp; II Study Guide</span></a>. This is a late 2014 edition and covers all the concepts on the OCJA and OCJP exams. This was an excellent book with lots of examples and sample questions. The authors have been writing Oracle exam study guides for many years now and these books are tried and tested.</span>[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h3>My Study technique</h3>\\n<p>For me, I had a fairly standard studying technique.</p>\\n<p>First I took a diagnostic test to understand my weakest parts of the syllabus.</p>\\n<p>After this, I would read through all sections of the <a href=\\\"http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0071772006&amp;linkCode=as2&amp;tag=codenervecom-21\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">official study guide</a>. Take one section in turn, read it, take notes and write <span style=\\\"text-decoration: underline;\\\">LOTS of example programs</span>. Once the section is complete, take the section test and study all the incorrect answers in depth.</p>\\n<p>This repeated until the end of the book. After this, I took my second diagnostic test.</p>\\n<p>From then on, I continued to learn all incorrect answers from tests taken and focus on weak topics. In the last few days, I repeated this frantically until I was happy and finally got to the stage where I was consistently passing the exams.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h3>Test Providers</h3>\\n<h6>Whizlabs</h6>\\n<p>Whizlabs describes itself as a learning hub which contains dozens of various courses and practice exams. The practice papers and reporting were very good. However, it frustrated me that each question renders a new webpage. This made it a bit slow and relies on a internet connection.</p>\\n<p>Overall though there was a good number of questions and good reporting.</p>\\n<p>Price: £39.95[/vc_column_text][us_image_slider ids=&#8221;1019,1020,1021,1022,1024,1023,1031,1032&#8243; type=&#8221;1&#8243;][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h6>Enthuware</h6>\\n<p><a href=\\\"http://enthuware.com/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Enthuware</a> has an advantage in that it is downloaded and installed locally. This includes a question bank and some basic reporting. The ui is ugly however not requiring a network connection and having no wait time between questions made this tool a lot more user friendly.</p>\\n<p>The questions on average are also much more difficult than Whizlabs and also the real exam so I felt this really prepared me well.</p>\\n<p>Price: $9.95[/vc_column_text][us_image_slider ids=&#8221;1035,1036,1037,1038,1039&#8243; type=&#8221;1&#8243;][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h3>Writing Sample code</h3>\\n<p>Yes, I&#8217;m repeating myself but this bit is important!</p>\\n<p>Whilst studying I wrote a lot of code! I would highly recommend you do the same. Reading the book and answering the quizzes at the end of each chapter will only get you so far. Don&#8217;t get me wrong its a great start but if you truly want to understand the concepts in great detail then I think taking the time during each section to write out the examples and experiment with them is an absolute must. Don&#8217;t ignore this aspect of your learning.</p>\\n<p>Perhaps reluctantly I have put my examples up on <a href=\\\"https://github.com/MWhyte/OCJA\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Github which you can check out here</a>. Have a look to get an idea of how I went about things but DO NOT use this as an excuse to not write out your own code snippets. The process of experimenting is much more important than the end product.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\\n<h6>The Exam</h6>\\n<p>The exam itself can be booked on <a href=\\\"http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-803&amp;p_org_id=&amp;lang=\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">oracles</a> website (this will redirect you to the Pearson Vue site). It consists of 70 questions which you have 2 hours to complete.</p>\\n<p>The pass mark is fairly high at 63% so I&#8217;d make sure you are achieving this if you are using the Enthuware exams or higher if you are using Whizlabs, the book or any other practice exams.</p>\\n<p>You are required to book in advance but there is very little waiting time. On the day you must bring I.D with you. You are also not allowed to bring any books, bags etc into the exam so check with your test centre if you need to bring anything to the centre.</p>\\n<p>Test centres are located globally in every major city.</p>\\n<h6>Other resources</h6>\\n<ul>\\n<li><a href=\\\"http://www.coderanch.com/forums/f-24/java-programmer-SCJP\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Coderanch</a> &#8211; Excellent forum to answer questions or ask for help</li>\\n<li><a href=\\\"http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-803&amp;p_org_id=&amp;lang=\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Oracles Education Website</a> &#8211; for more info on the test</li>\\n<li><a href=\\\"http://www.pearsonvue.com\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Pearson Vue</a> &#8211; for booking your test</li>\\n</ul>\\n<p>For me, this was an excellent experience and well worth the effort. Be aware that it will take time and effort to complete. But your knowledge of the Java language will be rock solid once you have achieved the certification.</p>\\n<p>So, get studying and good luck with your exam![/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][us_message type=&#8221;attention&#8221;]This post is intended for readers that wish to pass the OCJA Exam. It is for people with some experience in java. Whilst it is entirely possible to approach the test as a beginner I would strongly advise at least some previous experience and a good grasp of the basics first. See the <a title=\"Beginner Java\" href=\"https://www.codenerve.com/beginner-java/\">beginner java course</a> and be 100% comfortable with the basics first.</p>\n[/us_message][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h3>Overview</h3>\n<h6>Why bother?</h6>\n<p>Whilst studying for the OCJA exam I often wondered what exactly I was getting myself into and was all the work worth it? Well, the answer depends on what you are hoping to get out of it. Sure its a &#8216;nice to have&#8217; on your CV. But that alone was not really a big driver for me. Having 6 odd years experience in java I didn&#8217;t really need it on my CV so for me, it was all about going back to basics and testing myself to see just how well I knew my trade.</p>\n<p>The answer to that was not as well as I thought I did!</p>\n<p>Having a plethora of tools and IDE&#8217;s that provide constant feedback and auto-completion I realised that I was leaning quite heavily on these to do most of the &#8216;work&#8217; for me. Only when I sat down and started to study for the exam did I realise that I was rusty. For me refreshing my memory was the biggest gain. I feel that I now have a better understanding of the language than I ever did.</p>\n<p><span style=\"text-decoration: underline;\">You will really improve your java programming skills and foundational knowledge.</span></p>\n<h6>Preparation Time</h6>\n<p>For me, it was one solid week of studying and taking practice tests. I would say it would be closer to 4-6 weeks for someone relatively new. I would suggest taking some diagnostic tests if you are experienced. That way you will better understand your weaknesses and you can plan to target these areas during your studying.</p>\n<h6>When to book your test?</h6>\n<p>I would recommend booking your test once you can consistently pass practice exams and feel confident that you have covered all sections thoroughly. Test centres are booked through <a href=\"http://www.pearsonvue.com/\" target=\"_blank\" rel=\"noopener noreferrer\">PearsonVue</a> and generally speaking, there are tests available in a short timeframe.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner width=&#8221;1/4&#8243;][us_image image=&#8221;879&#8243; size=&#8221;full&#8221; onclick=&#8221;custom_link&#8221; link=&#8221;url:http%3A%2F%2Fwww.amazon.co.uk%2Fgp%2Fproduct%2F0071772006%2Fref%3Das_li_tl%3Fie%3DUTF8%26amp%3Bcamp%3D1634%26amp%3Bcreative%3D6738%26amp%3BcreativeASIN%3D0071772006%26amp%3BlinkCode%3Das2%26amp%3Btag%3Dcodenervecom-21&#8243;][/vc_column_inner][vc_column_inner width=&#8221;3/4&#8243;][vc_column_text]\n<h3>Recommended Book</h3>\n<p>In preparation for the OCJA exam, I used <span class=\"author notFaded\" data-width=\"\"><span class=\"a-declarative\" data-action=\"a-popover\" data-a-popover=\"{&quot;position&quot;:&quot;triggerBottom&quot;,&quot;name&quot;:&quot;contributor-info-B001H6U55G&quot;,&quot;allowLinkDefault&quot;:&quot;true&quot;}\">Kathy Sierra and </span></span><span class=\"author notFaded\" data-width=\"\">Bert Bates&#8217; study guide: <a href=\"http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0071772006&amp;linkCode=as2&amp;tag=codenervecom-21\" target=\"_blank\" rel=\"noopener noreferrer\"><span style=\"text-decoration: underline;\">OCA/OCP Java SE 7 Programmer I &amp; II Study Guide</span></a>. This is a late 2014 edition and covers all the concepts on the OCJA and OCJP exams. This was an excellent book with lots of examples and sample questions. The authors have been writing Oracle exam study guides for many years now and these books are tried and tested.</span>[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h3>My Study technique</h3>\n<p>For me, I had a fairly standard studying technique.</p>\n<p>First I took a diagnostic test to understand my weakest parts of the syllabus.</p>\n<p>After this, I would read through all sections of the <a href=\"http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0071772006&amp;linkCode=as2&amp;tag=codenervecom-21\" target=\"_blank\" rel=\"noopener noreferrer\">official study guide</a>. Take one section in turn, read it, take notes and write <span style=\"text-decoration: underline;\">LOTS of example programs</span>. Once the section is complete, take the section test and study all the incorrect answers in depth.</p>\n<p>This repeated until the end of the book. After this, I took my second diagnostic test.</p>\n<p>From then on, I continued to learn all incorrect answers from tests taken and focus on weak topics. In the last few days, I repeated this frantically until I was happy and finally got to the stage where I was consistently passing the exams.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h3>Test Providers</h3>\n<h6>Whizlabs</h6>\n<p>Whizlabs describes itself as a learning hub which contains dozens of various courses and practice exams. The practice papers and reporting were very good. However, it frustrated me that each question renders a new webpage. This made it a bit slow and relies on a internet connection.</p>\n<p>Overall though there was a good number of questions and good reporting.</p>\n<p>Price: £39.95[/vc_column_text][us_image_slider ids=&#8221;1019,1020,1021,1022,1024,1023,1031,1032&#8243; type=&#8221;1&#8243;][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h6>Enthuware</h6>\n<p><a href=\"http://enthuware.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Enthuware</a> has an advantage in that it is downloaded and installed locally. This includes a question bank and some basic reporting. The ui is ugly however not requiring a network connection and having no wait time between questions made this tool a lot more user friendly.</p>\n<p>The questions on average are also much more difficult than Whizlabs and also the real exam so I felt this really prepared me well.</p>\n<p>Price: $9.95[/vc_column_text][us_image_slider ids=&#8221;1035,1036,1037,1038,1039&#8243; type=&#8221;1&#8243;][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h3>Writing Sample code</h3>\n<p>Yes, I&#8217;m repeating myself but this bit is important!</p>\n<p>Whilst studying I wrote a lot of code! I would highly recommend you do the same. Reading the book and answering the quizzes at the end of each chapter will only get you so far. Don&#8217;t get me wrong its a great start but if you truly want to understand the concepts in great detail then I think taking the time during each section to write out the examples and experiment with them is an absolute must. Don&#8217;t ignore this aspect of your learning.</p>\n<p>Perhaps reluctantly I have put my examples up on <a href=\"https://github.com/MWhyte/OCJA\" target=\"_blank\" rel=\"noopener noreferrer\">Github which you can check out here</a>. Have a look to get an idea of how I went about things but DO NOT use this as an excuse to not write out your own code snippets. The process of experimenting is much more important than the end product.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|university&#8221;][vc_column_text]\n<h6>The Exam</h6>\n<p>The exam itself can be booked on <a href=\"http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-803&amp;p_org_id=&amp;lang=\" target=\"_blank\" rel=\"noopener noreferrer\">oracles</a> website (this will redirect you to the Pearson Vue site). It consists of 70 questions which you have 2 hours to complete.</p>\n<p>The pass mark is fairly high at 63% so I&#8217;d make sure you are achieving this if you are using the Enthuware exams or higher if you are using Whizlabs, the book or any other practice exams.</p>\n<p>You are required to book in advance but there is very little waiting time. On the day you must bring I.D with you. You are also not allowed to bring any books, bags etc into the exam so check with your test centre if you need to bring anything to the centre.</p>\n<p>Test centres are located globally in every major city.</p>\n<h6>Other resources</h6>\n<ul>\n<li><a href=\"http://www.coderanch.com/forums/f-24/java-programmer-SCJP\" target=\"_blank\" rel=\"noopener noreferrer\">Coderanch</a> &#8211; Excellent forum to answer questions or ask for help</li>\n<li><a href=\"http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&amp;get_params=p_exam_id:1Z0-803&amp;p_org_id=&amp;lang=\" target=\"_blank\" rel=\"noopener noreferrer\">Oracles Education Website</a> &#8211; for more info on the test</li>\n<li><a href=\"http://www.pearsonvue.com\" target=\"_blank\" rel=\"noopener noreferrer\">Pearson Vue</a> &#8211; for booking your test</li>\n</ul>\n<p>For me, this was an excellent experience and well worth the effort. Be aware that it will take time and effort to complete. But your knowledge of the Java language will be rock solid once you have achieved the certification.</p>\n<p>So, get studying and good luck with your exam![/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"876","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][us_message\ntype=”attention”]This post is intended for readers that wish to pass the OCJA\nExam. It is for people with some experience in java. Whilst it is entirely\npossible to approach the test as a beginner I would strongly advise at least\nsome previous experience and a good grasp of the basics first. See the beginner\njava course [https://www.codenerve.com/beginner-java/] and be 100% comfortable\nwith the basics first.\n\n[/us_message][us_separator show_line=”1″ icon=”fas|university”][vc_column_text]\nOverview\nWhy bother?\nWhilst studying for the OCJA exam I often wondered what exactly I was getting\nmyself into and was all the work worth it? Well, the answer depends on what you\nare hoping to get out of it. Sure its a ‘nice to have’ on your CV. But that\nalone was not really a big driver for me. Having 6 odd years experience in java\nI didn’t really need it on my CV so for me, it was all about going back to\nbasics and testing myself to see just how well I knew my trade.\n\nThe answer to that was not as well as I thought I did!\n\nHaving a plethora of tools and IDE’s that provide constant feedback and\nauto-completion I realised that I was leaning quite heavily on these to do most\nof the ‘work’ for me. Only when I sat down and started to study for the exam did\nI realise that I was rusty. For me refreshing my memory was the biggest gain. I\nfeel that I now have a better understanding of the language than I ever did.\n\nYou will really improve your java programming skills and foundational knowledge.\n\nPreparation Time\nFor me, it was one solid week of studying and taking practice tests. I would say\nit would be closer to 4-6 weeks for someone relatively new. I would suggest\ntaking some diagnostic tests if you are experienced. That way you will better\nunderstand your weaknesses and you can plan to target these areas during your\nstudying.\n\nWhen to book your test?\nI would recommend booking your test once you can consistently pass practice\nexams and feel confident that you have covered all sections thoroughly. Test\ncentres are booked through PearsonVue [http://www.pearsonvue.com/] and generally\nspeaking, there are tests available in a short\ntimeframe.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|university”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner\nwidth=”1/4″][us_image image=”879″ size=”full” onclick=”custom_link”\nlink=”url:http%3A%2F%2Fwww.amazon.co.uk%2Fgp%2Fproduct%2F0071772006%2Fref%3Das_li_tl%3Fie%3DUTF8%26amp%3Bcamp%3D1634%26amp%3Bcreative%3D6738%26amp%3BcreativeASIN%3D0071772006%26amp%3BlinkCode%3Das2%26amp%3Btag%3Dcodenervecom-21″][/vc_column_inner][vc_column_inner\nwidth=”3/4″][vc_column_text]\n\nRecommended Book\nIn preparation for the OCJA exam, I used Kathy Sierra andBert Bates’ study\nguide: OCA/OCP Java SE 7 Programmer I & II Study Guide\n[http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&camp=1634&creative=6738&creativeASIN=0071772006&linkCode=as2&tag=codenervecom-21]\n. This is a late 2014 edition and covers all the concepts on the OCJA and OCJP\nexams. This was an excellent book with lots of examples and sample questions.\nThe authors have been writing Oracle exam study guides for many years now and\nthese books are tried and tested.\n[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator\nshow_line=”1″ icon=”fas|university”][vc_column_text]\n\nMy Study technique\nFor me, I had a fairly standard studying technique.\n\nFirst I took a diagnostic test to understand my weakest parts of the syllabus.\n\nAfter this, I would read through all sections of the official study guide\n[http://www.amazon.co.uk/gp/product/0071772006/ref=as_li_tl?ie=UTF8&camp=1634&creative=6738&creativeASIN=0071772006&linkCode=as2&tag=codenervecom-21]\n. Take one section in turn, read it, take notes and write LOTS of example\nprograms. Once the section is complete, take the section test and study all the\nincorrect answers in depth.\n\nThis repeated until the end of the book. After this, I took my second diagnostic\ntest.\n\nFrom then on, I continued to learn all incorrect answers from tests taken and\nfocus on weak topics. In the last few days, I repeated this frantically until I\nwas happy and finally got to the stage where I was consistently passing the\nexams.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|university”][vc_column_text]\n\nTest Providers\nWhizlabs\nWhizlabs describes itself as a learning hub which contains dozens of various\ncourses and practice exams. The practice papers and reporting were very good.\nHowever, it frustrated me that each question renders a new webpage. This made it\na bit slow and relies on a internet connection.\n\nOverall though there was a good number of questions and good reporting.\n\nPrice: £39.95[/vc_column_text][us_image_slider\nids=”1019,1020,1021,1022,1024,1023,1031,1032″ type=”1″][us_separator\nshow_line=”1″ icon=”fas|university”][vc_column_text]\n\nEnthuware\nEnthuware [http://enthuware.com/]has an advantage in that it is downloaded and\ninstalled locally. This includes a question bank and some basic reporting. The\nui is ugly however not requiring a network connection and having no wait time\nbetween questions made this tool a lot more user friendly.\n\nThe questions on average are also much more difficult than Whizlabs and also\nthe real exam so I felt this really prepared me well.\n\nPrice: $9.95[/vc_column_text][us_image_slider ids=”1035,1036,1037,1038,1039″\ntype=”1″][us_separator show_line=”1″ icon=”fas|university”][vc_column_text]\n\nWriting Sample code\nYes, I’m repeating myself but this bit is important!\n\nWhilst studying I wrote a lot of code! I would highly recommend you do the same.\nReading the book and answering the quizzes at the end of each chapter will only\nget you so far. Don’t get me wrong its a great start but if you truly want to\nunderstand the concepts in great detail then I think taking the time during each\nsection to write out the examples and experiment with them is an absolute must.\nDon’t ignore this aspect of your learning.\n\nPerhaps reluctantly I have put my examples up on Github which you can check out\nhere [https://github.com/MWhyte/OCJA]. Have a look to get an idea of how I went\nabout things but DO NOT use this as an excuse to not write out your own code\nsnippets. The process of experimenting is much more important than the end\nproduct.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|university”][vc_column_text]\n\nThe Exam\nThe exam itself can be booked on oracles\n[http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&get_params=p_exam_id:1Z0-803&p_org_id=&lang=] \nwebsite (this will redirect you to the Pearson Vue site). It consists of 70\nquestions which you have 2 hours to complete.\n\nThe pass mark is fairly high at 63% so I’d make sure you are achieving this if\nyou are using the Enthuware exams or higher if you are using Whizlabs, the book\nor any other practice exams.\n\nYou are required to book in advance but there is very little waiting time. On\nthe day you must bring I.D with you. You are also not allowed to bring any\nbooks, bags etc into the exam so check with your test centre if you need to\nbring anything to the centre.\n\nTest centres are located globally in every major city.\n\nOther resources\n * Coderanch [http://www.coderanch.com/forums/f-24/java-programmer-SCJP] –\n   Excellent forum to answer questions or ask for help\n * Oracles Education Website\n   [http://education.oracle.com/pls/web_prod-plq-dad/db_pages.getpage?page_id=5001&get_params=p_exam_id:1Z0-803&p_org_id=&lang=]\n   – for more info on the test\n * Pearson Vue [http://www.pearsonvue.com] – for booking your test\n\nFor me, this was an excellent experience and well worth the effort. Be aware\nthat it will take time and effort to complete. But your knowledge of the Java\nlanguage will be rock solid once you have achieved the certification.\n\nSo, get studying and good luck with your\nexam![/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2015/01/Screen-Shot-2015-01-26-at-22.54.18.png","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2016-02-26 22:13:43","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:20:17","updated_by":"1","published_at":"2016-02-26 22:13:43","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aecc","uuid":"19d2d172-d413-4462-90a9-9e118d618d0a","title":"Setting Up","slug":"setting-up","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_column_text]\\n<h2>Introduction</h2>\\n<p>This page is aimed at beginners of the Java programming language and using an Integrated Development Environment for the first time. This lesson will help you set up and start developing Java applications using Eclipse or IntelliJ.</p>\\n<h2>Downloading the Java JDK</h2>\\n<p>To begin developing Java-based applications, you will need to download and install the latest Java Development Kit or JDK for short.</p>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;attention&#8221;]N.B. At the time of writing the latest java version is java 14. However, the minimum version required for these lessons is java 8. Any version from 8 onwards will work just fine.<br />\\n[/us_message][vc_column_text]You can find this at Oracles <a href=\\\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\\\">JDK download page</a>. From here you can select the &#8216;JDK Download&#8217; button under the Oracle JDK section:</p>\\n<p><span style=\\\"color: #808080;\\\"><em>The Java Development Kit (JDK) contains a runtime environment(the JVM) that runs on top of your computers operating system. It also includes all the tools required to compile, run, archive, document and profile applets and applications written in the Java language. We&#8217;ll learn more about each of these features in each of the courses on this website.</em></span></p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2018/01/jdk_14_download.png\\\"><img class=\\\"size-large wp-image-2321 aligncenter\\\" src=\\\"/content/images/wordpress/2018/01/jdk_14_download-1024x598.png\\\" alt=\\\"\\\" width=\\\"1024\\\" height=\\\"598\\\" srcset=\\\"/content/images/wordpress/2018/01/jdk_14_download-1024x598.png 1024w, /content/images/wordpress/2018/01/jdk_14_download-300x175.png 300w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p style=\\\"text-align: left;\\\">Here, you&#8217;ll find a list of downloads to choose from. Select the installer specific to your OS then, accept the license agreement:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2018/01/jdk_14_download2.png\\\"><img class=\\\"size-large wp-image-2322 aligncenter\\\" src=\\\"/content/images/wordpress/2018/01/jdk_14_download2-1024x555.png\\\" alt=\\\"\\\" width=\\\"1024\\\" height=\\\"555\\\" srcset=\\\"/content/images/wordpress/2018/01/jdk_14_download2-1024x555.png 1024w, /content/images/wordpress/2018/01/jdk_14_download2-300x163.png 300w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2018/01/jdk_14_download3.png\\\"><img class=\\\"size-large wp-image-2323 aligncenter\\\" src=\\\"/content/images/wordpress/2018/01/jdk_14_download3-1024x333.png\\\" alt=\\\"\\\" width=\\\"1024\\\" height=\\\"333\\\" srcset=\\\"/content/images/wordpress/2018/01/jdk_14_download3-1024x333.png 1024w, /content/images/wordpress/2018/01/jdk_14_download3-300x98.png 300w, /content/images/wordpress/2018/01/jdk_14_download3.png 1808w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>&nbsp;</p>\\n<p>Run the installer and follow the on-screen instructions. The Default installation is good.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4>Installing an IDE</h4>\\n<p>Now that you have installed Java on your machine, it&#8217;s time to install an IDE (Integrated Development Environment). An IDE is a development tool you will use to create and run your programs.</p>\\n<p><em>It&#8217;s worth noting that there are many different choices of IDE out there. Popular ones include <a href=\\\"http://www.eclipse.org\\\">Eclipse</a>, <a href=\\\"http://www.jetbrains.com/idea/\\\">IntelliJ</a> and <a href=\\\"https://netbeans.org\\\">Netbeans</a>. It is also worth pointing out that programs can be written in text editors and run from the command line using the JDK you have already installed but IDE&#8217;s contain many features including auto complete and they continuously compile your code and highlight any errors you have made. So to help us we are going to use an IDE for each of the lessons.</em>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_tta_tabs][vc_tta_section active=&#8221;1&#8243; icon=&#8221;fas|code&#8221; title=&#8221;IntelliJ&#8221;][vc_column_text]IntelliJ is fast becoming the De facto IDE for java development in the industry. Using IntelliJ over other IDE’s will simplify the importing of sample projects should you choose to download them.</p>\\n<p>To download IntelliJ, please go to the <a href=\\\"https://www.jetbrains.com/idea/download/\\\">IntelliJ download page</a>.[/vc_column_text][us_message type=&#8221;attention&#8221;]Note that IntelliJ has both a community (free) version and an ultimate (subscription based) version. There will be no future requirement in any lesson to have the ultimate version so you do not need to pay for it!<br />\\n[/us_message][vc_column_text]\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2015/05/intellij.png\\\" rel=\\\"attachment wp-att-1095\\\"><img class=\\\"aligncenter wp-image-1095 size-large\\\" src=\\\"/content/images/wordpress/2015/05/intellij-1024x491.png\\\" alt=\\\"intellij\\\" width=\\\"1024\\\" height=\\\"491\\\" srcset=\\\"/content/images/wordpress/2015/05/intellij-1024x491.png 1024w, /content/images/wordpress/2015/05/intellij-300x144.png 300w, /content/images/wordpress/2015/05/intellij-768x368.png 768w, /content/images/wordpress/2015/05/intellij-600x288.png 600w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Importing the sample project</h3>\\n<p>Once you have IntelliJ installed, please download the <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">example project here</a> and extract the zip folder.</p>\\n<p>Next, follow this short video to setup and open the sample project:[/vc_column_text][vc_video link=&#8221;https://youtu.be/08638BpV-2Y&#8221;][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<p>And to run the starter project:</p>\\n[/vc_column_text][vc_video link=&#8221;https://youtu.be/7HYU2L6iHQ4&#8243;][/vc_tta_section][vc_tta_section icon=&#8221;fas|code&#8221; title=&#8221;Eclipse&#8221;][vc_column_text]Eclipse is currently the most widely used IDE for java development in the industry. Using eclipse over other IDE&#8217;s will simplify the importing of sample projects should you choose to download them.</p>\\n<p>To download eclipse, please go to the <a href=\\\"http://www.eclipse.org/downloads/\\\">Eclipse download page</a>:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/eclipse_1.png\\\"><img class=\\\"aligncenter wp-image-57 size-large\\\" title=\\\"eclipse_1\\\" src=\\\"/content/images/wordpress/2013/12/eclipse_1-1024x371.png\\\" alt=\\\"eclipse_1\\\" width=\\\"1024\\\" height=\\\"371\\\" srcset=\\\"/content/images/wordpress/2013/12/eclipse_1-1024x371.png 1024w, /content/images/wordpress/2013/12/eclipse_1-300x109.png 300w, /content/images/wordpress/2013/12/eclipse_1-768x278.png 768w, /content/images/wordpress/2013/12/eclipse_1-600x217.png 600w, /content/images/wordpress/2013/12/eclipse_1.png 1458w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>Ensure that the correct OS is selected in the drop down menu and choose the Standard Edition.</p>\\n<p>This will lead you to your download, where you can select the link to download:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/eclipse_2.png\\\"><img class=\\\"aligncenter wp-image-65 size-large\\\" title=\\\"eclipse_2\\\" src=\\\"/content/images/wordpress/2013/12/eclipse_2-1024x411.png\\\" alt=\\\"eclipse_2\\\" width=\\\"1024\\\" height=\\\"411\\\" srcset=\\\"/content/images/wordpress/2013/12/eclipse_2-1024x411.png 1024w, /content/images/wordpress/2013/12/eclipse_2-300x120.png 300w, /content/images/wordpress/2013/12/eclipse_2-768x308.png 768w, /content/images/wordpress/2013/12/eclipse_2-600x241.png 600w, /content/images/wordpress/2013/12/eclipse_2.png 1052w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>You will notice that the downloaded folder is of a .zip or .tar file format. This is because Eclipse does not need to install itself on your machine. You can just copy the unzipped folder to a location of your choice (I use the Application folder on Mac or Program Files on windows).</p>\\n<p>From there you can start Eclipse by clicking on the Eclipse Icon:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/eclipse_3.png\\\"><img class=\\\"aligncenter wp-image-67 size-medium\\\" title=\\\"eclipse_3\\\" src=\\\"/content/images/wordpress/2013/12/eclipse_3-300x275.png\\\" alt=\\\"eclipse_3\\\" width=\\\"300\\\" height=\\\"275\\\" srcset=\\\"/content/images/wordpress/2013/12/eclipse_3-300x275.png 300w, /content/images/wordpress/2013/12/eclipse_3.png 452w\\\" sizes=\\\"(max-width: 300px) 100vw, 300px\\\" /></a></p>\\n<p>If you have successfully installed Java and Eclipse, you will be prompted to create a default workspace. This is simply a folder in your file directory to save your projects to:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/eclipse_4.png\\\"><img class=\\\"aligncenter wp-image-72 size-large\\\" title=\\\"eclipse_4\\\" src=\\\"/content/images/wordpress/2013/12/eclipse_4-1024x418.png\\\" alt=\\\"eclipse_4\\\" width=\\\"1024\\\" height=\\\"418\\\" srcset=\\\"/content/images/wordpress/2013/12/eclipse_4-1024x418.png 1024w, /content/images/wordpress/2013/12/eclipse_4-300x122.png 300w, /content/images/wordpress/2013/12/eclipse_4-768x313.png 768w, /content/images/wordpress/2013/12/eclipse_4-600x245.png 600w, /content/images/wordpress/2013/12/eclipse_4.png 1172w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>And that&#8217;s it you&#8217;re nearly ready to run your first program!</p>\\n<h2>Importing Example Project</h2>\\n<p>Ok, lets import and run our first project. You can download the example project here: <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter-project.zip</a></p>\\n<p>To import this project in Eclipse go to <strong>File -&gt; Import</strong>. This will open an import window:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/project_1.png\\\"><img class=\\\"aligncenter wp-image-75 size-large\\\" title=\\\"project_1\\\" src=\\\"/content/images/wordpress/2013/12/project_1-978x1024.png\\\" alt=\\\"project_1\\\" width=\\\"978\\\" height=\\\"1024\\\" srcset=\\\"/content/images/wordpress/2013/12/project_1-978x1024.png 978w, /content/images/wordpress/2013/12/project_1-287x300.png 287w, /content/images/wordpress/2013/12/project_1-768x804.png 768w, /content/images/wordpress/2013/12/project_1-600x628.png 600w, /content/images/wordpress/2013/12/project_1-300x314.png 300w, /content/images/wordpress/2013/12/project_1.png 1032w\\\" sizes=\\\"(max-width: 978px) 100vw, 978px\\\" /></a></p>\\n<p>Select <strong>Next</strong>. You can now import the zip using &#8216;Select Archive File&#8217; or if you have already unzipped use &#8216;Select Root Directory&#8217;:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/project_2.png\\\"><img class=\\\"aligncenter wp-image-77 size-full\\\" title=\\\"project_2\\\" src=\\\"/content/images/wordpress/2013/12/project_2.png\\\" alt=\\\"project_2\\\" width=\\\"1024\\\" height=\\\"658\\\" srcset=\\\"/content/images/wordpress/2013/12/project_2.png 1024w, /content/images/wordpress/2013/12/project_2-300x193.png 300w, /content/images/wordpress/2013/12/project_2-768x494.png 768w, /content/images/wordpress/2013/12/project_2-600x386.png 600w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>Click <strong>Finish</strong>. You should now see the project load and open in the &#8216;Project Explorer&#8217; on the left-hand side (If you do not see this view you can open it using <strong>Window -&gt; Show View -&gt; Other -&gt; Project Explorer</strong>). You should explore the contents of the project and open the <strong>Main.java </strong>file by double clicking on it.</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/project_3.png\\\"><img class=\\\"aligncenter wp-image-78 size-full\\\" title=\\\"project_3\\\" src=\\\"/content/images/wordpress/2013/12/project_3.png\\\" alt=\\\"project_3\\\" width=\\\"570\\\" height=\\\"232\\\" srcset=\\\"/content/images/wordpress/2013/12/project_3.png 570w, /content/images/wordpress/2013/12/project_3-300x122.png 300w\\\" sizes=\\\"(max-width: 570px) 100vw, 570px\\\" /></a></p>\\n<p>Lastly, you can run the program by right clicking on Main.java and select</p>\\n<p><strong>Run As -&gt; Java Application</strong>. This will print &#8220;Hello World&#8221; in the &#8216;console&#8217; view.[/vc_column_text][/vc_tta_section][/vc_tta_tabs][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3><a href=\\\"https://www.codenerve.com/beginner-java/lesson-1-hello-world/\\\"><strong>Next:</strong> Hello World</a></h3>\\n<p>In the first lesson of the beginner series, we&#8217;ll learn about the project structure and the Main.java class file.[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_column_text]\n<h2>Introduction</h2>\n<p>This page is aimed at beginners of the Java programming language and using an Integrated Development Environment for the first time. This lesson will help you set up and start developing Java applications using Eclipse or IntelliJ.</p>\n<h2>Downloading the Java JDK</h2>\n<p>To begin developing Java-based applications, you will need to download and install the latest Java Development Kit or JDK for short.</p>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;attention&#8221;]N.B. At the time of writing the latest java version is java 14. However, the minimum version required for these lessons is java 8. Any version from 8 onwards will work just fine.<br />\n[/us_message][vc_column_text]You can find this at Oracles <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\">JDK download page</a>. From here you can select the &#8216;JDK Download&#8217; button under the Oracle JDK section:</p>\n<p><span style=\"color: #808080;\"><em>The Java Development Kit (JDK) contains a runtime environment(the JVM) that runs on top of your computers operating system. It also includes all the tools required to compile, run, archive, document and profile applets and applications written in the Java language. We&#8217;ll learn more about each of these features in each of the courses on this website.</em></span></p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2018/01/jdk_14_download.png\"><img class=\"size-large wp-image-2321 aligncenter\" src=\"/content/images/wordpress/2018/01/jdk_14_download-1024x598.png\" alt=\"\" width=\"1024\" height=\"598\" srcset=\"/content/images/wordpress/2018/01/jdk_14_download-1024x598.png 1024w, /content/images/wordpress/2018/01/jdk_14_download-300x175.png 300w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p style=\"text-align: left;\">Here, you&#8217;ll find a list of downloads to choose from. Select the installer specific to your OS then, accept the license agreement:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2018/01/jdk_14_download2.png\"><img class=\"size-large wp-image-2322 aligncenter\" src=\"/content/images/wordpress/2018/01/jdk_14_download2-1024x555.png\" alt=\"\" width=\"1024\" height=\"555\" srcset=\"/content/images/wordpress/2018/01/jdk_14_download2-1024x555.png 1024w, /content/images/wordpress/2018/01/jdk_14_download2-300x163.png 300w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2018/01/jdk_14_download3.png\"><img class=\"size-large wp-image-2323 aligncenter\" src=\"/content/images/wordpress/2018/01/jdk_14_download3-1024x333.png\" alt=\"\" width=\"1024\" height=\"333\" srcset=\"/content/images/wordpress/2018/01/jdk_14_download3-1024x333.png 1024w, /content/images/wordpress/2018/01/jdk_14_download3-300x98.png 300w, /content/images/wordpress/2018/01/jdk_14_download3.png 1808w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>&nbsp;</p>\n<p>Run the installer and follow the on-screen instructions. The Default installation is good.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4>Installing an IDE</h4>\n<p>Now that you have installed Java on your machine, it&#8217;s time to install an IDE (Integrated Development Environment). An IDE is a development tool you will use to create and run your programs.</p>\n<p><em>It&#8217;s worth noting that there are many different choices of IDE out there. Popular ones include <a href=\"http://www.eclipse.org\">Eclipse</a>, <a href=\"http://www.jetbrains.com/idea/\">IntelliJ</a> and <a href=\"https://netbeans.org\">Netbeans</a>. It is also worth pointing out that programs can be written in text editors and run from the command line using the JDK you have already installed but IDE&#8217;s contain many features including auto complete and they continuously compile your code and highlight any errors you have made. So to help us we are going to use an IDE for each of the lessons.</em>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_tta_tabs][vc_tta_section active=&#8221;1&#8243; icon=&#8221;fas|code&#8221; title=&#8221;IntelliJ&#8221;][vc_column_text]IntelliJ is fast becoming the De facto IDE for java development in the industry. Using IntelliJ over other IDE’s will simplify the importing of sample projects should you choose to download them.</p>\n<p>To download IntelliJ, please go to the <a href=\"https://www.jetbrains.com/idea/download/\">IntelliJ download page</a>.[/vc_column_text][us_message type=&#8221;attention&#8221;]Note that IntelliJ has both a community (free) version and an ultimate (subscription based) version. There will be no future requirement in any lesson to have the ultimate version so you do not need to pay for it!<br />\n[/us_message][vc_column_text]\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2015/05/intellij.png\" rel=\"attachment wp-att-1095\"><img class=\"aligncenter wp-image-1095 size-large\" src=\"/content/images/wordpress/2015/05/intellij-1024x491.png\" alt=\"intellij\" width=\"1024\" height=\"491\" srcset=\"/content/images/wordpress/2015/05/intellij-1024x491.png 1024w, /content/images/wordpress/2015/05/intellij-300x144.png 300w, /content/images/wordpress/2015/05/intellij-768x368.png 768w, /content/images/wordpress/2015/05/intellij-600x288.png 600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Importing the sample project</h3>\n<p>Once you have IntelliJ installed, please download the <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">example project here</a> and extract the zip folder.</p>\n<p>Next, follow this short video to setup and open the sample project:[/vc_column_text][vc_video link=&#8221;https://youtu.be/08638BpV-2Y&#8221;][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<p>And to run the starter project:</p>\n[/vc_column_text][vc_video link=&#8221;https://youtu.be/7HYU2L6iHQ4&#8243;][/vc_tta_section][vc_tta_section icon=&#8221;fas|code&#8221; title=&#8221;Eclipse&#8221;][vc_column_text]Eclipse is currently the most widely used IDE for java development in the industry. Using eclipse over other IDE&#8217;s will simplify the importing of sample projects should you choose to download them.</p>\n<p>To download eclipse, please go to the <a href=\"http://www.eclipse.org/downloads/\">Eclipse download page</a>:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/eclipse_1.png\"><img class=\"aligncenter wp-image-57 size-large\" title=\"eclipse_1\" src=\"/content/images/wordpress/2013/12/eclipse_1-1024x371.png\" alt=\"eclipse_1\" width=\"1024\" height=\"371\" srcset=\"/content/images/wordpress/2013/12/eclipse_1-1024x371.png 1024w, /content/images/wordpress/2013/12/eclipse_1-300x109.png 300w, /content/images/wordpress/2013/12/eclipse_1-768x278.png 768w, /content/images/wordpress/2013/12/eclipse_1-600x217.png 600w, /content/images/wordpress/2013/12/eclipse_1.png 1458w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>Ensure that the correct OS is selected in the drop down menu and choose the Standard Edition.</p>\n<p>This will lead you to your download, where you can select the link to download:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/eclipse_2.png\"><img class=\"aligncenter wp-image-65 size-large\" title=\"eclipse_2\" src=\"/content/images/wordpress/2013/12/eclipse_2-1024x411.png\" alt=\"eclipse_2\" width=\"1024\" height=\"411\" srcset=\"/content/images/wordpress/2013/12/eclipse_2-1024x411.png 1024w, /content/images/wordpress/2013/12/eclipse_2-300x120.png 300w, /content/images/wordpress/2013/12/eclipse_2-768x308.png 768w, /content/images/wordpress/2013/12/eclipse_2-600x241.png 600w, /content/images/wordpress/2013/12/eclipse_2.png 1052w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>You will notice that the downloaded folder is of a .zip or .tar file format. This is because Eclipse does not need to install itself on your machine. You can just copy the unzipped folder to a location of your choice (I use the Application folder on Mac or Program Files on windows).</p>\n<p>From there you can start Eclipse by clicking on the Eclipse Icon:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/eclipse_3.png\"><img class=\"aligncenter wp-image-67 size-medium\" title=\"eclipse_3\" src=\"/content/images/wordpress/2013/12/eclipse_3-300x275.png\" alt=\"eclipse_3\" width=\"300\" height=\"275\" srcset=\"/content/images/wordpress/2013/12/eclipse_3-300x275.png 300w, /content/images/wordpress/2013/12/eclipse_3.png 452w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></a></p>\n<p>If you have successfully installed Java and Eclipse, you will be prompted to create a default workspace. This is simply a folder in your file directory to save your projects to:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/eclipse_4.png\"><img class=\"aligncenter wp-image-72 size-large\" title=\"eclipse_4\" src=\"/content/images/wordpress/2013/12/eclipse_4-1024x418.png\" alt=\"eclipse_4\" width=\"1024\" height=\"418\" srcset=\"/content/images/wordpress/2013/12/eclipse_4-1024x418.png 1024w, /content/images/wordpress/2013/12/eclipse_4-300x122.png 300w, /content/images/wordpress/2013/12/eclipse_4-768x313.png 768w, /content/images/wordpress/2013/12/eclipse_4-600x245.png 600w, /content/images/wordpress/2013/12/eclipse_4.png 1172w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>And that&#8217;s it you&#8217;re nearly ready to run your first program!</p>\n<h2>Importing Example Project</h2>\n<p>Ok, lets import and run our first project. You can download the example project here: <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter-project.zip</a></p>\n<p>To import this project in Eclipse go to <strong>File -&gt; Import</strong>. This will open an import window:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/project_1.png\"><img class=\"aligncenter wp-image-75 size-large\" title=\"project_1\" src=\"/content/images/wordpress/2013/12/project_1-978x1024.png\" alt=\"project_1\" width=\"978\" height=\"1024\" srcset=\"/content/images/wordpress/2013/12/project_1-978x1024.png 978w, /content/images/wordpress/2013/12/project_1-287x300.png 287w, /content/images/wordpress/2013/12/project_1-768x804.png 768w, /content/images/wordpress/2013/12/project_1-600x628.png 600w, /content/images/wordpress/2013/12/project_1-300x314.png 300w, /content/images/wordpress/2013/12/project_1.png 1032w\" sizes=\"(max-width: 978px) 100vw, 978px\" /></a></p>\n<p>Select <strong>Next</strong>. You can now import the zip using &#8216;Select Archive File&#8217; or if you have already unzipped use &#8216;Select Root Directory&#8217;:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/project_2.png\"><img class=\"aligncenter wp-image-77 size-full\" title=\"project_2\" src=\"/content/images/wordpress/2013/12/project_2.png\" alt=\"project_2\" width=\"1024\" height=\"658\" srcset=\"/content/images/wordpress/2013/12/project_2.png 1024w, /content/images/wordpress/2013/12/project_2-300x193.png 300w, /content/images/wordpress/2013/12/project_2-768x494.png 768w, /content/images/wordpress/2013/12/project_2-600x386.png 600w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>Click <strong>Finish</strong>. You should now see the project load and open in the &#8216;Project Explorer&#8217; on the left-hand side (If you do not see this view you can open it using <strong>Window -&gt; Show View -&gt; Other -&gt; Project Explorer</strong>). You should explore the contents of the project and open the <strong>Main.java </strong>file by double clicking on it.</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/project_3.png\"><img class=\"aligncenter wp-image-78 size-full\" title=\"project_3\" src=\"/content/images/wordpress/2013/12/project_3.png\" alt=\"project_3\" width=\"570\" height=\"232\" srcset=\"/content/images/wordpress/2013/12/project_3.png 570w, /content/images/wordpress/2013/12/project_3-300x122.png 300w\" sizes=\"(max-width: 570px) 100vw, 570px\" /></a></p>\n<p>Lastly, you can run the program by right clicking on Main.java and select</p>\n<p><strong>Run As -&gt; Java Application</strong>. This will print &#8220;Hello World&#8221; in the &#8216;console&#8217; view.[/vc_column_text][/vc_tta_section][/vc_tta_tabs][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3><a href=\"https://www.codenerve.com/beginner-java/lesson-1-hello-world/\"><strong>Next:</strong> Hello World</a></h3>\n<p>In the first lesson of the beginner series, we&#8217;ll learn about the project structure and the Main.java class file.[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"38","plaintext":"[vc_row][vc_column][vc_column_text]Introduction\nThis page is aimed at beginners of the Java programming language and using an\nIntegrated Development Environment for the first time. This lesson will help you\nset up and start developing Java applications using Eclipse or IntelliJ.\n\nDownloading the Java JDK\nTo begin developing Java-based applications, you will need to download and\ninstall the latest Java Development Kit or JDK for short.\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_message type=”attention”]N.B. At the time of writing the\nlatest java version is java 14. However, the minimum version required for these\nlessons is java 8. Any version from 8 onwards will work just fine.\n[/us_message][vc_column_text]You can find this at OraclesJDK download page\n[http://www.oracle.com/technetwork/java/javase/downloads/index.html]. From here\nyou can select the ‘JDK Download’ button under the Oracle JDK section:\n\nThe Java Development Kit (JDK) contains a runtime environment(the JVM) that runs\non top of your computers operating system. It also includes all the tools\nrequired to compile, run, archive, document and profile applets and applications\nwritten in the Java language. We’ll learn more about each of these features in\neach of the courses on this website.\n\n [/content/images/wordpress/2018/01/jdk_14_download.png]\n\nHere, you’ll find a list of downloads to choose from. Select the installer\nspecific to your OS then, accept the license agreement:\n\n [/content/images/wordpress/2018/01/jdk_14_download2.png]\n\n [/content/images/wordpress/2018/01/jdk_14_download3.png]\n\n\n\nRun the installer and follow the on-screen instructions. The Default\ninstallation is good.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nInstalling an IDE\nNow that you have installed Java on your machine, it’s time to install an IDE\n(Integrated Development Environment). An IDE is a development tool you will use\nto create and run your programs.\n\nIt’s worth noting that there are many different choices of IDE out there.\nPopular ones includeEclipse [http://www.eclipse.org], IntelliJ\n[http://www.jetbrains.com/idea/] and Netbeans [https://netbeans.org]. It is also\nworth pointing out that programs can be written in text editors and run from the\ncommand line using the JDK you have already installed but IDE’s contain many\nfeatures including auto complete and they continuously compile your code and\nhighlight any errors you have made. So to help us we are going to use an IDE for\neach of the lessons.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_tta_tabs][vc_tta_section active=”1″ icon=”fas|code”\ntitle=”IntelliJ”][vc_column_text]IntelliJ is fast becoming the De facto IDE for\njava development in the industry. Using IntelliJ over other IDE’s will simplify\nthe importing of sample projects should you choose to download them.\n\nTo download IntelliJ, please go to the IntelliJ download page\n[https://www.jetbrains.com/idea/download/].[/vc_column_text][us_message\ntype=”attention”]Note that IntelliJ has both a community (free) version and an\nultimate (subscription based) version. There will be no future requirement in\nany lesson to have the ultimate version so you do not need to pay for it!\n[/us_message][vc_column_text]\n\n [/content/images/wordpress/2015/05/intellij.png]\n\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]\nImporting the sample project\nOnce you have IntelliJ installed, please download the example project here\n[/content/images/wordpress/2016/01/StarterProject.zip]and extract the zip\nfolder.\n\nNext, follow this short video to setup and open the sample\nproject:[/vc_column_text][vc_video\nlink=”https://youtu.be/08638BpV-2Y”][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nAnd to run the starter project:\n\n[/vc_column_text][vc_video\nlink=”https://youtu.be/7HYU2L6iHQ4″][/vc_tta_section][vc_tta_section\nicon=”fas|code” title=”Eclipse”][vc_column_text]Eclipse is currently the most\nwidely used IDE for java development in the industry. Using eclipse over other\nIDE’s will simplify the importing of sample projects should you choose to\ndownload them.\n\nTo download eclipse, please go to the Eclipse download page\n[http://www.eclipse.org/downloads/]:\n\n [/content/images/wordpress/2013/12/eclipse_1.png]\n\nEnsure that the correct OS is selected in the drop down menu and choose the\nStandard Edition.\n\nThis will lead you to your download, where you can select the link to download:\n\n [/content/images/wordpress/2013/12/eclipse_2.png]\n\nYou will notice that the downloaded folder is of a .zip or .tar file format.\nThis is because Eclipse does not need to install itself on your machine. You can\njust copy the unzipped folder to a location of your choice (I use the\nApplication folder on Mac or Program Files on windows).\n\nFrom there you can start Eclipse by clicking on the Eclipse Icon:\n\n [/content/images/wordpress/2013/12/eclipse_3.png]\n\nIf you have successfully installed Java and Eclipse, you will be prompted to\ncreate a default workspace. This is simply a folder in your file directory to\nsave your projects to:\n\n [/content/images/wordpress/2013/12/eclipse_4.png]\n\nAnd that’s it you’re nearly ready to run your first program!\n\nImporting Example Project\nOk, lets import and run our first project. You can download the example project\nhere:starter-project.zip [/content/images/wordpress/2016/01/StarterProject.zip]\n\nTo import this project in Eclipse go to File -> Import. This will open an import\nwindow:\n\n [/content/images/wordpress/2013/12/project_1.png]\n\nSelect Next. You can now import the zip using ‘Select Archive File’ or if you\nhave already unzipped use ‘Select Root Directory’:\n\n [/content/images/wordpress/2013/12/project_2.png]\n\nClick Finish. You should now see the project load and open in the ‘Project\nExplorer’ on the left-hand side (If you do not see this view you can open it\nusing Window -> Show View -> Other -> Project Explorer). You should explore the\ncontents of the project and open the Main.java file by double clicking on it.\n\n [/content/images/wordpress/2013/12/project_3.png]\n\nLastly, you can run the program by right clicking on Main.java and select\n\nRun As -> Java Application. This will print “Hello World” in the ‘console’\nview.[/vc_column_text][/vc_tta_section][/vc_tta_tabs][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nNext: Hello World\n[https://www.codenerve.com/beginner-java/lesson-1-hello-world/]\nIn the first lesson of the beginner series, we’ll learn about the project\nstructure and the Main.java class\nfile.[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/01/begin-beginning-board-2923.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-01-20 12:21:00","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:20:14","updated_by":"1","published_at":"2018-01-20 12:21:00","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aecd","uuid":"c5a21b0f-e578-4dcf-bd7c-859f28504e9f","title":"Lesson 1 - Hello World","slug":"lesson-1-hello-world","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Now that we&#8217;re finally set up; It&#8217;s time to have a look at some code. This lesson is a short primer; it will contain a reasonable amount of theory which will give you a good grounding. The lessons after this will be more hands on, but for now, it&#8217;s important to understand some core java concepts (hang in there).[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>Project structure and packages</h3>\\n<p>Hopefully at this stage you should have the starter project imported into Eclipse (If not see the <a href=\\\"https://www.codenerve.com/beginner-java/setting-up/\\\">setting up</a> lesson). In the &#8216;Package Explorer&#8217; you should see the project in a directory structure.</p>\\n<p><span style=\\\"color: #808080;\\\"><em>If you cannot see the package </em><i>explorer, use the Menu bar and select: Window &gt; Show View &gt; Other &gt; Package Explorer</i></span></p>\\n<p>Let&#8217;s talk about each level of the projects directory structure:</p>\\n<p style=\\\"text-align: center;\\\"><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2013/12/project-structure.png\\\"><img class=\\\"aligncenter wp-image-109 size-full\\\" style=\\\"border: 2px solid black;\\\" title=\\\"eclipse project structure\\\" src=\\\"/content/images/wordpress/2013/12/project-structure.png\\\" alt=\\\"eclipse java project structure\\\" width=\\\"618\\\" height=\\\"214\\\" srcset=\\\"/content/images/wordpress/2013/12/project-structure.png 618w, /content/images/wordpress/2013/12/project-structure-300x104.png 300w, /content/images/wordpress/2013/12/project-structure-600x208.png 600w\\\" sizes=\\\"(max-width: 618px) 100vw, 618px\\\" /></a></p>\\n<p>&nbsp;</p>\\n<h4>1. Project</h4>\\n<p>In Simple terms, this is a Folder! It matches the name of the project and contains all of the files and JAR (<strong>J</strong>ava <strong>AR</strong>chive) files required to run your project. There are also some settings files and folders which will be used by eclipse to build your project (These are nice to know about but not overly important right now).</p>\\n<h4>2. Source Folders</h4>\\n<p>Source folders are top-level folders in the project hierarchy. Source folders allow you to structure the project in some logical manner. The most common use for these is to separate source code, resources (xml or txt files for example) and test code into distinct sections.</p>\\n<h4>3. Packages</h4>\\n<p>A Java package is a mechanism for organising Java classes even further. The industry standard is to use your website in reverse order followed by a descriptive name for that group of files. For example, com.codenerve.main would describe a package that would contain the Main java file (or class file) that would start my application. You can use these to separate code that is for a particular purpose (for example web ui vs. backend services like database connections)</p>\\n<h4>4. Source Files</h4>\\n<p><span style=\\\"line-height: 1.5em;\\\">Source files in java have the .java file extension. These files contain the java source code that you write and later are compiled into byte code and run in the Java Virtual Machine.</span></p>\\n<h4>5. Java System Library</h4>\\n<p>The JRE System Library is added to the project and makes all of the Java core classes, supporting libraries and the Java Virtual Machine available to your project.  <span style=\\\"line-height: 1.5em;\\\">The Java Runtime Environment (JRE) is part of the Java Development Kit (JDK). The JDK contains additional development tools, such as the Java compiler (<code>javac)</code>. The Java Runtime Environment provides the minimum requirements for executing a Java application.</span></p>\\n<h2>The main class</h2>\\n<p>In Eclipse open the HelloJava.java file:</p>\\n<p><a title=\\\"HelloWorld\\\" ref=\\\"magnificPopup\\\" href=\\\"https://www.ni-geeks.com/wp-content/uploads/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png\\\"><img class=\\\"aligncenter wp-image-124 size-full\\\" style=\\\"border: 2px solid black;\\\" title=\\\"HelloWorld\\\" src=\\\"/content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png\\\" alt=\\\"HelloWorld java\\\" width=\\\"700\\\" height=\\\"480\\\" srcset=\\\"/content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png 700w, /content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29-300x206.png 300w, /content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29-600x411.png 600w\\\" sizes=\\\"(max-width: 700px) 100vw, 700px\\\" /></a></p>\\n<h2>Main method signature</h2>\\n<p><code>public static void main(String[] args)</code></p>\\n<p>The main method signature is interpreted by breaking it up into multiple sections:</p>\\n<p><strong>public</strong> &#8211; This denotes the Access level modifier of the method. In short it describes the visibility of this method from other files in the project. Public means this method is visible from any other file in the project. For other available Access level modifiers see the <a href=\\\"http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\\\">oracle documentation</a>.</p>\\n<p><strong>static</strong> &#8211; This denotes that the method in this class(file) is static. This means they can be used without the need to create an instance of the class. We&#8217;ll learn more about &#8216;instances&#8217; later in the lessons. This static keyword is always required on the main method for the jvm to start your application.</p>\\n<p><strong>void</strong> &#8211; The void keyword denotes that the method will not return any value from the code within it. The main method will run, and once complete the application will close.</p>\\n<p><strong>main</strong> &#8211; This is simply the name of the method. It&#8217;s used to describe the purpose of the method. Method names must be unique to each class file.</p>\\n<p><strong>args</strong> &#8211; The <code>String[] args</code> inside the parenthesis is called a parameter. In java it is possible to pass values into a method. In this case these values would be passed into you application when starting it.[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h2>Running the code</h2>\\n<p>Alright, thats a lot of theory!! Let&#8217;s run the example and in the next lesson, we&#8217;ll begin to focus on writing and running code samples.</p>\\n<p>To run the code:</p>\\n<p>Right-click on the Main.java file and select:</p>\\n<p><strong>Run As -&gt; Java Application</strong>. This will print “Hello World” in the ‘console’ view.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4><a href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\"><strong>Next: </strong>Primitive types</a></h4>\\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Now that we&#8217;re finally set up; It&#8217;s time to have a look at some code. This lesson is a short primer; it will contain a reasonable amount of theory which will give you a good grounding. The lessons after this will be more hands on, but for now, it&#8217;s important to understand some core java concepts (hang in there).[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>Project structure and packages</h3>\n<p>Hopefully at this stage you should have the starter project imported into Eclipse (If not see the <a href=\"https://www.codenerve.com/beginner-java/setting-up/\">setting up</a> lesson). In the &#8216;Package Explorer&#8217; you should see the project in a directory structure.</p>\n<p><span style=\"color: #808080;\"><em>If you cannot see the package </em><i>explorer, use the Menu bar and select: Window &gt; Show View &gt; Other &gt; Package Explorer</i></span></p>\n<p>Let&#8217;s talk about each level of the projects directory structure:</p>\n<p style=\"text-align: center;\"><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2013/12/project-structure.png\"><img class=\"aligncenter wp-image-109 size-full\" style=\"border: 2px solid black;\" title=\"eclipse project structure\" src=\"/content/images/wordpress/2013/12/project-structure.png\" alt=\"eclipse java project structure\" width=\"618\" height=\"214\" srcset=\"/content/images/wordpress/2013/12/project-structure.png 618w, /content/images/wordpress/2013/12/project-structure-300x104.png 300w, /content/images/wordpress/2013/12/project-structure-600x208.png 600w\" sizes=\"(max-width: 618px) 100vw, 618px\" /></a></p>\n<p>&nbsp;</p>\n<h4>1. Project</h4>\n<p>In Simple terms, this is a Folder! It matches the name of the project and contains all of the files and JAR (<strong>J</strong>ava <strong>AR</strong>chive) files required to run your project. There are also some settings files and folders which will be used by eclipse to build your project (These are nice to know about but not overly important right now).</p>\n<h4>2. Source Folders</h4>\n<p>Source folders are top-level folders in the project hierarchy. Source folders allow you to structure the project in some logical manner. The most common use for these is to separate source code, resources (xml or txt files for example) and test code into distinct sections.</p>\n<h4>3. Packages</h4>\n<p>A Java package is a mechanism for organising Java classes even further. The industry standard is to use your website in reverse order followed by a descriptive name for that group of files. For example, com.codenerve.main would describe a package that would contain the Main java file (or class file) that would start my application. You can use these to separate code that is for a particular purpose (for example web ui vs. backend services like database connections)</p>\n<h4>4. Source Files</h4>\n<p><span style=\"line-height: 1.5em;\">Source files in java have the .java file extension. These files contain the java source code that you write and later are compiled into byte code and run in the Java Virtual Machine.</span></p>\n<h4>5. Java System Library</h4>\n<p>The JRE System Library is added to the project and makes all of the Java core classes, supporting libraries and the Java Virtual Machine available to your project.  <span style=\"line-height: 1.5em;\">The Java Runtime Environment (JRE) is part of the Java Development Kit (JDK). The JDK contains additional development tools, such as the Java compiler (<code>javac)</code>. The Java Runtime Environment provides the minimum requirements for executing a Java application.</span></p>\n<h2>The main class</h2>\n<p>In Eclipse open the HelloJava.java file:</p>\n<p><a title=\"HelloWorld\" ref=\"magnificPopup\" href=\"https://www.ni-geeks.com/wp-content/uploads/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png\"><img class=\"aligncenter wp-image-124 size-full\" style=\"border: 2px solid black;\" title=\"HelloWorld\" src=\"/content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png\" alt=\"HelloWorld java\" width=\"700\" height=\"480\" srcset=\"/content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png 700w, /content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29-300x206.png 300w, /content/images/wordpress/2013/12/Screen-Shot-2014-02-12-at-21.23.29-600x411.png 600w\" sizes=\"(max-width: 700px) 100vw, 700px\" /></a></p>\n<h2>Main method signature</h2>\n<p><code>public static void main(String[] args)</code></p>\n<p>The main method signature is interpreted by breaking it up into multiple sections:</p>\n<p><strong>public</strong> &#8211; This denotes the Access level modifier of the method. In short it describes the visibility of this method from other files in the project. Public means this method is visible from any other file in the project. For other available Access level modifiers see the <a href=\"http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html\">oracle documentation</a>.</p>\n<p><strong>static</strong> &#8211; This denotes that the method in this class(file) is static. This means they can be used without the need to create an instance of the class. We&#8217;ll learn more about &#8216;instances&#8217; later in the lessons. This static keyword is always required on the main method for the jvm to start your application.</p>\n<p><strong>void</strong> &#8211; The void keyword denotes that the method will not return any value from the code within it. The main method will run, and once complete the application will close.</p>\n<p><strong>main</strong> &#8211; This is simply the name of the method. It&#8217;s used to describe the purpose of the method. Method names must be unique to each class file.</p>\n<p><strong>args</strong> &#8211; The <code>String[] args</code> inside the parenthesis is called a parameter. In java it is possible to pass values into a method. In this case these values would be passed into you application when starting it.[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h2>Running the code</h2>\n<p>Alright, thats a lot of theory!! Let&#8217;s run the example and in the next lesson, we&#8217;ll begin to focus on writing and running code samples.</p>\n<p>To run the code:</p>\n<p>Right-click on the Main.java file and select:</p>\n<p><strong>Run As -&gt; Java Application</strong>. This will print “Hello World” in the ‘console’ view.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4><a href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\"><strong>Next: </strong>Primitive types</a></h4>\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"86","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Now that we’re\nfinally set up; It’s time to have a look at some code. This lesson is a short\nprimer; it will contain a reasonable amount of theory which will give you a good\ngrounding. The lessons after this will be more hands on, but for now, it’s\nimportant to understand some core java concepts (hang in\nthere).[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nsize=”small” show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nProject structure and packages\nHopefully at this stage you should have the starter project imported into\nEclipse (If not see the setting up\n[https://www.codenerve.com/beginner-java/setting-up/] lesson). In the ‘Package\nExplorer’ you should see the project in a directory structure.\n\nIf you cannot see the packageexplorer, use the Menu bar and select: Window >\nShow View > Other > Package Explorer\n\nLet’s talk about each level of the projects directory structure:\n\n [/content/images/wordpress/2013/12/project-structure.png]\n\n\n\n1. Project\nIn Simple terms, this is a Folder! It matches the name of the project and\ncontains all of the files and JAR (Java ARchive) files required to run your\nproject. There are also some settings files and folders which will be used by\neclipse to build your project (These are nice to know about but not overly\nimportant right now).\n\n2. Source Folders\nSource folders are top-level folders in the project hierarchy. Source folders\nallow you to structure the project in some logical manner. The most common use\nfor these is to separate source code, resources (xml or txt files for example)\nand test code into distinct sections.\n\n3. Packages\nA Java package is a mechanism for organising Java classes even further. The\nindustry standard is to use your website in reverse order followed by a\ndescriptive name for that group of files. For example, com.codenerve.main would\ndescribe a package that would contain the Main java file (or class file) that\nwould start my application. You can use these to separate code that is for a\nparticular purpose (for example web ui vs. backend services like database\nconnections)\n\n4. Source Files\nSource files in java have the .java file extension. These files contain the java\nsource code that you write and later are compiled into byte code and run in the\nJava Virtual Machine.\n\n5. Java System Library\nThe JRE System Library is added to the project and makes all of the Java core\nclasses, supporting libraries and the Java Virtual Machine available to your\nproject.The Java Runtime Environment (JRE) is part of the Java Development Kit\n(JDK). The JDK contains additional development tools, such as the Java compiler\n(javac). The Java Runtime Environment provides the minimum requirements for\nexecuting a Java application.\n\nThe main class\nIn Eclipse open the HelloJava.java file:\n\n \n[https://www.ni-geeks.com/wp-content/uploads/2013/12/Screen-Shot-2014-02-12-at-21.23.29.png]\n\nMain method signature\npublic static void main(String[] args)\n\nThe main method signature is interpreted by breaking it up into multiple\nsections:\n\npublic – This denotes the Access level modifier of the method. In short\nit describes the visibility of this method from other files in the project.\nPublic means this method is visible from any other file in the project. For\nother available Access level modifiers see the oracle documentation\n[http://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html].\n\nstatic – This denotes that the method in this class(file) is static. This means\nthey can be used without the need to create an instance of the class. We’ll\nlearn more about ‘instances’ later in the lessons. This static keyword is always\nrequired on the main method for the jvm to start your application.\n\nvoid – The void keyword denotes that the method will not return any value from\nthe code within it. The main method will run, and once complete the application\nwill close.\n\nmain – This is simply the name of the method. It’s used to describe the purpose\nof the method. Method names must be unique to each class file.\n\nargs – The String[] args inside the parenthesis is called a parameter. In java\nit is possible to pass values into a method. In this case these values would be\npassed into you application when starting\nit.[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nRunning the code\nAlright, thats a lot of theory!! Let’s run the example and in the next lesson,\nwe’ll begin to focus on writing and running code samples.\n\nTo run the code:\n\nRight-click on the Main.java file and select:\n\nRun As -> Java Application. This will print “Hello World” in the ‘console’\nview.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nNext:Primitive types\n[https://www.codenerve.com/beginner-java/lesson-2-primitive-types/]\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/01/astronomy-atmosphere-earth-220201.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-01-20 14:10:49","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:20:10","updated_by":"1","published_at":"2018-01-20 14:10:49","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aece","uuid":"316d5328-975a-4c95-b736-08eaaa485afd","title":"Lesson 2 - Primitive Types","slug":"lesson-2-primitive-types","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok! Time to write some code.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>Create a package</h3>\\n<p>To create a new package for this lesson right click on the starter project and select<strong> -&gt; New -&gt; Package (or use cmd/ctrl N and select package)</strong></p>\\n<p><a style=\\\"line-height: 1.5em;\\\" title=\\\"NewPackage\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09.png\\\"><img class=\\\"alignnone wp-image-147 size-large\\\" style=\\\"border: 2px solid black;\\\" title=\\\"NewPackage\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-1024x510.png\\\" alt=\\\"NewPackage\\\" width=\\\"1024\\\" height=\\\"510\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-1024x510.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-300x149.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-768x382.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-600x299.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09.png 1238w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>You can now name your package. For example <strong>com.codenerve.beginner.lesson2</strong> and click ok.</p>\\n<h2>Create a new class file</h2>\\n<p>Now, we&#8217;re going to create a new class file to run some code. To do this right click on the package you have created and select<strong> -&gt; New -&gt; Class (or use cmd/ctrl N and select Class).</strong></p>\\n<p><a title=\\\"NewClass\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22.png\\\"><img class=\\\"alignnone wp-image-148 size-large\\\" style=\\\"border: 2px solid black;\\\" title=\\\"NewClass\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-1024x367.png\\\" alt=\\\"NewClass\\\" width=\\\"1024\\\" height=\\\"367\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-1024x367.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-300x107.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-768x275.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-600x215.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22.png 1212w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>Name the Class PrimitiveTypes and in the stubs section check the Main Method creation check box:</p>\\n<p><a title=\\\"CreateClass\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28.png\\\"><img class=\\\"alignnone wp-image-149 size-large\\\" style=\\\"border: 2px solid black;\\\" title=\\\"CreateClass\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-856x1024.png\\\" alt=\\\"CreateClass\\\" width=\\\"856\\\" height=\\\"1024\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-856x1024.png 856w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-251x300.png 251w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-768x919.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-600x718.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-300x359.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28.png 1068w\\\" sizes=\\\"(max-width: 856px) 100vw, 856px\\\" /></a></p>\\n<h2>Primitive Types</h2>\\n<p>You will now see an empty class with the an empty main method. At this point we are going to create some fields of different Primitive Types.</p>\\n<p>Fields are created outside of a method but in side the class declaration:</p>\\n<p><a title=\\\"ClassFields\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\\\"><img class=\\\"alignnone wp-image-158 size-full\\\" style=\\\"border: 2px solid black;\\\" title=\\\"ClassFields\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\\\" alt=\\\"ClassFields\\\" width=\\\"868\\\" height=\\\"652\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png 868w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-300x225.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-768x577.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-600x451.png 600w\\\" sizes=\\\"(max-width: 868px) 100vw, 868px\\\" /></a></p>\\n<p>By default <em>Fields</em> are available to all methods inside this class as well as other classes in the same package. They may also be available outside the package using the keyword <em>Public</em>. But for now we are going to just use the default.</p>\\n<h3>int</h3>\\n<p>Lets begin by creating a new field of type <em>int</em> called &#8216;integer&#8217;. Insert the following code into the class:</p>\\n<pre class=\\\"lang:java decode:true\\\">static int integer;</pre>\\n<p>To access this field from within the main method we also add the <em>static</em> keyword because the main method is <em>static</em> also. We&#8217;ll learn more on this in later lessons.</p>\\n<p>An <em>int</em> represents a whole number and is 32-bits long. That means it has a minimum value of -2<sup>31</sup> and a maximum value of 2<sup>31</sup>-1.</p>\\n<p>Later in this lesson you will see other number types that are smaller or larger in size and therefore have a smaller or larger range of possible values.</p>\\n<h3>boolean</h3>\\n<p>Let&#8217;s continue to create some more fields each time underneath the last. This time a <em>boolean</em> called &#8216;bool&#8217;:</p>\\n<pre class=\\\"lang:java decode:true\\\">static boolean bool;</pre>\\n<p>A <em>boolean</em> has only two possible values <em>true</em> or <em>false</em>.</p>\\n<h3>char</h3>\\n<p>A character:</p>\\n<pre class=\\\"lang:java decode:true\\\">static char character;</pre>\\n<p>The <em><code>char</code></em> data type is a single 16-bit Unicode character. This means it has 65,535 possible values including &#8216;a&#8217; to &#8216;z&#8217;, punctuation and numerical values are all valid here.</p>\\n<h3>byte</h3>\\n<p>A byte</p>\\n<pre class=\\\"lang:java decode:true\\\">static byte aByte;</pre>\\n<p>The <em><code>byte</code></em> data type is 8-bits. It has a minimum value of -128 and a maximum value of 127 (inclusive). The <em><code>byte</code></em> data type can be useful for saving memory, in an application where memory saving is necessary (for example an applet or mobile application).</p>\\n<h3>short</h3>\\n<p>A short:</p>\\n<pre class=\\\"lang:java decode:true\\\">static short aShort;</pre>\\n<p>The <code>short</code> data type is a 16-bit integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). Like a <em>byte</em> this can be used instead of an <em>int</em> to save memory</p>\\n<h3>long</h3>\\n<p>A long:</p>\\n<pre class=\\\"lang:java decode:true\\\">static long aLong;</pre>\\n<p>The <code>long</code> data type is a 64-bit integer. The long has a minimum value of -2<sup>63</sup> and a maximum value of 2<sup>63</sup>-1. Use this data type when you need a large range of values larger than that of an <code>int</code>.</p>\\n<h3>float</h3>\\n<p>A float:</p>\\n<pre class=\\\"lang:java decode:true\\\">static float aFloat;</pre>\\n<p>The <em><code>float</code></em> data type is a 32-bit floating point. Use a <em><code>float</code></em> (instead of <em><code>double</code></em>) if you need to save memory.  This data type should not be used for precise values, such as currency.</p>\\n<h3>double</h3>\\n<p>A double:</p>\\n<pre class=\\\"lang:java decode:true\\\">static double aDouble;</pre>\\n<p>The <em><code>double</code></em> data type is a 64-bit floating point number. For decimal values, this data type is the default choice. As mentioned above, this data type should not be used for precise values, such as currency. For accurate number values use <em>BigDecimal</em>.</p>\\n<h3>So what does this all mean?</h3>\\n<p>That depends on your level of expertise. At the minute you&#8217;ll probably use <em>double</em>, <em>boolean</em>, <em>string </em>(coming up shortly!) and <em>int</em> for 99.9% of your needs. And for now, that&#8217;s fine. Just be aware of the rest of the primitive types and their pro&#8217;s and cons ( Such memory savings and their ranges).</p>\\n<h2>Default Values</h2>\\n<p>Ok, let&#8217;s get some code running. Adding the following code snippet will enable you to see the default values for all the fields you have created above:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n\\r\\n    System.out.println(\\\"Default integer value is: \\\" + integer);\\r\\n    System.out.println(\\\"Default boolean value is: \\\" + bool);\\r\\n    System.out.println(\\\"Default char value is: \\\" + character);\\r\\n    System.out.println(\\\"Default byte value is: \\\" + aByte);\\r\\n    System.out.println(\\\"Default short value is: \\\" + aShort);\\r\\n    System.out.println(\\\"Default long value is: \\\" + aLong);\\r\\n    System.out.println(\\\"Default float value is: \\\" + aFloat);\\r\\n    System.out.println(\\\"Default double value is: \\\" + aDouble);\\r\\n}</pre>\\n<h2>Output</h2>\\n<p>To run right click on the class. Select <strong>Run as -&gt; Java Application </strong>or  click the <strong>Run Button <a title=\\\"Run\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.13.05.png\\\"><img class=\\\"alignnone wp-image-164\\\" style=\\\"border: 2px solid black;\\\" title=\\\"Run\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.13.05.png\\\" alt=\\\"\\\" width=\\\"20\\\" height=\\\"16\\\" /></a></strong></p>\\n<p>Output:</p>\\n<pre class=\\\"lang:vim decode:true\\\">Default integer value is: 0\\r\\n\\r\\nDefault boolean value is: false\\r\\n\\r\\nDefault char value is:\\r\\n\\r\\nDefault byte value is: 0\\r\\n\\r\\nDefault short value is: 0\\r\\n\\r\\nDefault long value is: 0\\r\\n\\r\\nDefault float value is: 0.0\\r\\n\\r\\nDefault double value is: 0.0</pre>\\n<h2>Assigning values</h2>\\n<p>Ok we&#8217;ll that&#8217;s all well and good but we probably want to assign values that mean something to us and are useful to our program. Doing this is easy with the simple <em>=</em> operator.</p>\\n<pre class=\\\"lang:java decode:true\\\">static int integer = 10;\\r\\nstatic boolean bool = true;\\r\\nstatic char character = '3';\\r\\nstatic byte aByte = 'a';\\r\\nstatic short aShort = 10000;\\r\\nstatic long aLong = 1000000000;\\r\\nstatic float aFloat = 1000000000;\\r\\nstatic double aDouble = 1000000000;</pre>\\n<p><span style=\\\"line-height: 1.5em;\\\">Play around with the ranges of each value. If you try something out of range the code will not compile and will show an error:</span></p>\\n<p><a title=\\\"error1\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png\\\"><img class=\\\"alignnone wp-image-165 size-full\\\" style=\\\"border: 2px solid black;\\\" title=\\\"error1\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png\\\" alt=\\\"error1\\\" width=\\\"616\\\" height=\\\"56\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png 616w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25-300x27.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25-600x56.png 600w\\\" sizes=\\\"(max-width: 616px) 100vw, 616px\\\" /></a></p>\\n<p><a title=\\\"error2\\\" ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21.png\\\"><img class=\\\"alignnone wp-image-166 size-large\\\" style=\\\"border: 2px solid black;\\\" title=\\\"error2\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-1024x210.png\\\" alt=\\\"error2\\\" width=\\\"1024\\\" height=\\\"210\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-1024x210.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-300x62.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-768x157.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-600x123.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21.png 1678w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a>[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|coffee&#8221;][vc_column_text]Next up we&#8217;ll learn some more interesting operators you can use to alter and compare the values you have set[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|coffee&#8221;][vc_column_text]\\n<h4><a href=\\\"https://www.codenerve.com/beginner-java/lesson-3-basic-operators/\\\">Next: Basic Operators</a></h4>\\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok! Time to write some code.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>Create a package</h3>\n<p>To create a new package for this lesson right click on the starter project and select<strong> -&gt; New -&gt; Package (or use cmd/ctrl N and select package)</strong></p>\n<p><a style=\"line-height: 1.5em;\" title=\"NewPackage\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09.png\"><img class=\"alignnone wp-image-147 size-large\" style=\"border: 2px solid black;\" title=\"NewPackage\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-1024x510.png\" alt=\"NewPackage\" width=\"1024\" height=\"510\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-1024x510.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-300x149.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-768x382.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09-600x299.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09.png 1238w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>You can now name your package. For example <strong>com.codenerve.beginner.lesson2</strong> and click ok.</p>\n<h2>Create a new class file</h2>\n<p>Now, we&#8217;re going to create a new class file to run some code. To do this right click on the package you have created and select<strong> -&gt; New -&gt; Class (or use cmd/ctrl N and select Class).</strong></p>\n<p><a title=\"NewClass\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22.png\"><img class=\"alignnone wp-image-148 size-large\" style=\"border: 2px solid black;\" title=\"NewClass\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-1024x367.png\" alt=\"NewClass\" width=\"1024\" height=\"367\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-1024x367.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-300x107.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-768x275.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22-600x215.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22.png 1212w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>Name the Class PrimitiveTypes and in the stubs section check the Main Method creation check box:</p>\n<p><a title=\"CreateClass\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28.png\"><img class=\"alignnone wp-image-149 size-large\" style=\"border: 2px solid black;\" title=\"CreateClass\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-856x1024.png\" alt=\"CreateClass\" width=\"856\" height=\"1024\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-856x1024.png 856w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-251x300.png 251w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-768x919.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-600x718.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28-300x359.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28.png 1068w\" sizes=\"(max-width: 856px) 100vw, 856px\" /></a></p>\n<h2>Primitive Types</h2>\n<p>You will now see an empty class with the an empty main method. At this point we are going to create some fields of different Primitive Types.</p>\n<p>Fields are created outside of a method but in side the class declaration:</p>\n<p><a title=\"ClassFields\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\"><img class=\"alignnone wp-image-158 size-full\" style=\"border: 2px solid black;\" title=\"ClassFields\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\" alt=\"ClassFields\" width=\"868\" height=\"652\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png 868w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-300x225.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-768x577.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-600x451.png 600w\" sizes=\"(max-width: 868px) 100vw, 868px\" /></a></p>\n<p>By default <em>Fields</em> are available to all methods inside this class as well as other classes in the same package. They may also be available outside the package using the keyword <em>Public</em>. But for now we are going to just use the default.</p>\n<h3>int</h3>\n<p>Lets begin by creating a new field of type <em>int</em> called &#8216;integer&#8217;. Insert the following code into the class:</p>\n<pre class=\"lang:java decode:true\">static int integer;</pre>\n<p>To access this field from within the main method we also add the <em>static</em> keyword because the main method is <em>static</em> also. We&#8217;ll learn more on this in later lessons.</p>\n<p>An <em>int</em> represents a whole number and is 32-bits long. That means it has a minimum value of -2<sup>31</sup> and a maximum value of 2<sup>31</sup>-1.</p>\n<p>Later in this lesson you will see other number types that are smaller or larger in size and therefore have a smaller or larger range of possible values.</p>\n<h3>boolean</h3>\n<p>Let&#8217;s continue to create some more fields each time underneath the last. This time a <em>boolean</em> called &#8216;bool&#8217;:</p>\n<pre class=\"lang:java decode:true\">static boolean bool;</pre>\n<p>A <em>boolean</em> has only two possible values <em>true</em> or <em>false</em>.</p>\n<h3>char</h3>\n<p>A character:</p>\n<pre class=\"lang:java decode:true\">static char character;</pre>\n<p>The <em><code>char</code></em> data type is a single 16-bit Unicode character. This means it has 65,535 possible values including &#8216;a&#8217; to &#8216;z&#8217;, punctuation and numerical values are all valid here.</p>\n<h3>byte</h3>\n<p>A byte</p>\n<pre class=\"lang:java decode:true\">static byte aByte;</pre>\n<p>The <em><code>byte</code></em> data type is 8-bits. It has a minimum value of -128 and a maximum value of 127 (inclusive). The <em><code>byte</code></em> data type can be useful for saving memory, in an application where memory saving is necessary (for example an applet or mobile application).</p>\n<h3>short</h3>\n<p>A short:</p>\n<pre class=\"lang:java decode:true\">static short aShort;</pre>\n<p>The <code>short</code> data type is a 16-bit integer. It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive). Like a <em>byte</em> this can be used instead of an <em>int</em> to save memory</p>\n<h3>long</h3>\n<p>A long:</p>\n<pre class=\"lang:java decode:true\">static long aLong;</pre>\n<p>The <code>long</code> data type is a 64-bit integer. The long has a minimum value of -2<sup>63</sup> and a maximum value of 2<sup>63</sup>-1. Use this data type when you need a large range of values larger than that of an <code>int</code>.</p>\n<h3>float</h3>\n<p>A float:</p>\n<pre class=\"lang:java decode:true\">static float aFloat;</pre>\n<p>The <em><code>float</code></em> data type is a 32-bit floating point. Use a <em><code>float</code></em> (instead of <em><code>double</code></em>) if you need to save memory.  This data type should not be used for precise values, such as currency.</p>\n<h3>double</h3>\n<p>A double:</p>\n<pre class=\"lang:java decode:true\">static double aDouble;</pre>\n<p>The <em><code>double</code></em> data type is a 64-bit floating point number. For decimal values, this data type is the default choice. As mentioned above, this data type should not be used for precise values, such as currency. For accurate number values use <em>BigDecimal</em>.</p>\n<h3>So what does this all mean?</h3>\n<p>That depends on your level of expertise. At the minute you&#8217;ll probably use <em>double</em>, <em>boolean</em>, <em>string </em>(coming up shortly!) and <em>int</em> for 99.9% of your needs. And for now, that&#8217;s fine. Just be aware of the rest of the primitive types and their pro&#8217;s and cons ( Such memory savings and their ranges).</p>\n<h2>Default Values</h2>\n<p>Ok, let&#8217;s get some code running. Adding the following code snippet will enable you to see the default values for all the fields you have created above:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n\r\n    System.out.println(\"Default integer value is: \" + integer);\r\n    System.out.println(\"Default boolean value is: \" + bool);\r\n    System.out.println(\"Default char value is: \" + character);\r\n    System.out.println(\"Default byte value is: \" + aByte);\r\n    System.out.println(\"Default short value is: \" + aShort);\r\n    System.out.println(\"Default long value is: \" + aLong);\r\n    System.out.println(\"Default float value is: \" + aFloat);\r\n    System.out.println(\"Default double value is: \" + aDouble);\r\n}</pre>\n<h2>Output</h2>\n<p>To run right click on the class. Select <strong>Run as -&gt; Java Application </strong>or  click the <strong>Run Button <a title=\"Run\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.13.05.png\"><img class=\"alignnone wp-image-164\" style=\"border: 2px solid black;\" title=\"Run\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.13.05.png\" alt=\"\" width=\"20\" height=\"16\" /></a></strong></p>\n<p>Output:</p>\n<pre class=\"lang:vim decode:true\">Default integer value is: 0\r\n\r\nDefault boolean value is: false\r\n\r\nDefault char value is:\r\n\r\nDefault byte value is: 0\r\n\r\nDefault short value is: 0\r\n\r\nDefault long value is: 0\r\n\r\nDefault float value is: 0.0\r\n\r\nDefault double value is: 0.0</pre>\n<h2>Assigning values</h2>\n<p>Ok we&#8217;ll that&#8217;s all well and good but we probably want to assign values that mean something to us and are useful to our program. Doing this is easy with the simple <em>=</em> operator.</p>\n<pre class=\"lang:java decode:true\">static int integer = 10;\r\nstatic boolean bool = true;\r\nstatic char character = '3';\r\nstatic byte aByte = 'a';\r\nstatic short aShort = 10000;\r\nstatic long aLong = 1000000000;\r\nstatic float aFloat = 1000000000;\r\nstatic double aDouble = 1000000000;</pre>\n<p><span style=\"line-height: 1.5em;\">Play around with the ranges of each value. If you try something out of range the code will not compile and will show an error:</span></p>\n<p><a title=\"error1\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png\"><img class=\"alignnone wp-image-165 size-full\" style=\"border: 2px solid black;\" title=\"error1\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png\" alt=\"error1\" width=\"616\" height=\"56\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png 616w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25-300x27.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25-600x56.png 600w\" sizes=\"(max-width: 616px) 100vw, 616px\" /></a></p>\n<p><a title=\"error2\" ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21.png\"><img class=\"alignnone wp-image-166 size-large\" style=\"border: 2px solid black;\" title=\"error2\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-1024x210.png\" alt=\"error2\" width=\"1024\" height=\"210\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-1024x210.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-300x62.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-768x157.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21-600x123.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21.png 1678w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a>[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|coffee&#8221;][vc_column_text]Next up we&#8217;ll learn some more interesting operators you can use to alter and compare the values you have set[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|coffee&#8221;][vc_column_text]\n<h4><a href=\"https://www.codenerve.com/beginner-java/lesson-3-basic-operators/\">Next: Basic Operators</a></h4>\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"129","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok! Time to\nwrite some code.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nsize=”small” show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nCreate a package\nTo create a new package for this lesson right click on the starter project and\nselect -> New -> Package (or use cmd/ctrl N and select package)\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.26.09.png]\n\nYou can now name your package. For examplecom.codenerve.beginner.lesson2 and\nclick ok.\n\nCreate a new class file\nNow, we’re going to create a new class file to run some code. To do this right\nclick on the package you have created and select-> New -> Class (or use cmd/ctrl\nN and select Class).\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.30.22.png]\n\nName the Class PrimitiveTypes and in the stubs section check the Main Method\ncreation check box:\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-18.37.28.png]\n\nPrimitive Types\nYou will now see an empty class with the an empty main method. At this point we\nare going to create some fields of different Primitive Types.\n\nFields are created outside of a method but in side the class declaration:\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png]\n\nBy default Fields are available to all methods inside this class as well as\nother classes in the same package. They may also be available outside the\npackage using the keyword Public. But for now we are going to just use the\ndefault.\n\nint\nLets begin by creating a new field of type int called ‘integer’. Insert the\nfollowing code into the class:\n\nstatic int integer;\n\nTo access this field from within the main method we also add the static keyword\nbecause the main method is static also. We’ll learn more on this in later\nlessons.\n\nAn int represents a whole number and is 32-bits long. That means it has a\nminimum value of -231and a maximum value of 231-1.\n\nLater in this lesson you will see other number types that are smaller or larger\nin size and therefore have a smaller or larger range of possible values.\n\nboolean\nLet’s continue to create some more fields each time underneath the last. This\ntime a boolean called ‘bool’:\n\nstatic boolean bool;\n\nA boolean has only two possible values true or false.\n\nchar\nA character:\n\nstatic char character;\n\nThechardata type is a single 16-bit Unicode character. This means it has 65,535\npossible values including ‘a’ to ‘z’, punctuation and numerical values are all\nvalid here.\n\nbyte\nA byte\n\nstatic byte aByte;\n\nThebytedata type is 8-bits. It has a minimum value of -128 and a maximum value\nof 127 (inclusive). Thebytedata type can be useful for saving memory, in an\napplication where memory saving is necessary (for example an applet or mobile\napplication).\n\nshort\nA short:\n\nstatic short aShort;\n\nTheshortdata type is a 16-bit integer. It has a minimum value of -32,768 and a\nmaximum value of 32,767 (inclusive). Like a byte this can be used instead of an\nint to save memory\n\nlong\nA long:\n\nstatic long aLong;\n\nThelongdata type is a 64-bit integer. The long has a minimum value of -263and a\nmaximum value of 263-1. Use this data type when you need a large range of values\nlarger than that of anint.\n\nfloat\nA float:\n\nstatic float aFloat;\n\nThefloatdata type is a 32-bit floating point. Use afloat(instead ofdouble) if\nyou need to save memory.  This data type should not be used for precise values,\nsuch as currency.\n\ndouble\nA double:\n\nstatic double aDouble;\n\nThedoubledata type is a 64-bit floating point number. For decimal values, this\ndata type is the default choice. As mentioned above, this data type should not\nbe used for precise values, such as currency. For accurate number values use \nBigDecimal.\n\nSo what does this all mean?\nThat depends on your level of expertise. At the minute you’ll probably use \ndouble, boolean, string (coming up shortly!) and int for 99.9% of your needs.\nAnd for now, that’s fine. Just be aware of the rest of the primitive types and\ntheir pro’s and cons ( Such memory savings and their ranges).\n\nDefault Values\nOk, let’s get some code running. Adding the following code snippet will enable\nyou to see the default values for all the fields you have created above:\n\npublic static void main(String[] args) {\r\n\r\n    System.out.println(\"Default integer value is: \" + integer);\r\n    System.out.println(\"Default boolean value is: \" + bool);\r\n    System.out.println(\"Default char value is: \" + character);\r\n    System.out.println(\"Default byte value is: \" + aByte);\r\n    System.out.println(\"Default short value is: \" + aShort);\r\n    System.out.println(\"Default long value is: \" + aLong);\r\n    System.out.println(\"Default float value is: \" + aFloat);\r\n    System.out.println(\"Default double value is: \" + aDouble);\r\n}\n\nOutput\nTo run right click on the class. Select Run as -> Java Applicationor  click the \nRun Button \n[/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.13.05.png]\n\nOutput:\n\nDefault integer value is: 0\r\n\r\nDefault boolean value is: false\r\n\r\nDefault char value is:\r\n\r\nDefault byte value is: 0\r\n\r\nDefault short value is: 0\r\n\r\nDefault long value is: 0\r\n\r\nDefault float value is: 0.0\r\n\r\nDefault double value is: 0.0\n\nAssigning values\nOk we’ll that’s all well and good but we probably want to assign values that\nmean something to us and are useful to our program. Doing this is easy with the\nsimple = operator.\n\nstatic int integer = 10;\r\nstatic boolean bool = true;\r\nstatic char character = '3';\r\nstatic byte aByte = 'a';\r\nstatic short aShort = 10000;\r\nstatic long aLong = 1000000000;\r\nstatic float aFloat = 1000000000;\r\nstatic double aDouble = 1000000000;\n\nPlay around with the ranges of each value. If you try something out of range the\ncode will not compile and will show an error:\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.22.25.png]\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-22.23.21.png]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator show_line=”1″\nicon=”fas|coffee”][vc_column_text]Next up we’ll learn some more interesting\noperators you can use to alter and compare the values you have\nset[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|coffee”][vc_column_text]\n\nNext: Basic Operators\n[https://www.codenerve.com/beginner-java/lesson-3-basic-operators/]\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/01/architecture-bones-building-236482.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-01-21 20:12:52","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:20:05","updated_by":"1","published_at":"2018-01-21 20:12:52","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aecf","uuid":"3202fe29-c9c3-4a5e-bae3-92439873e4cf","title":"Lesson 3 - Basic Operators","slug":"lesson-3-basic-operators","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in the last lesson we learnt how to declare and assign values to various primitive types. Let&#8217;s now look at some more operations this time using the <em>int </em>primitive type.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>Setup</h3>\\n<ol>\\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson3</strong></li>\\n<li>Create a new class file called: <strong>BasicOperators.java</strong> with a main method</li>\\n</ol>\\n<p><span style=\\\"color: #888888;\\\">If you need help with this, please go back and look at the <a title=\\\"Lesson 2 – Primitive Types\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\">previous lessons</a></span></p>\\n<h3>Adding</h3>\\n<p>Within the main method of your class add the following lines of code:</p>\\n<pre class=\\\"lang:java decode:true\\\">int a = 10, b = 2;</pre>\\n<p>You&#8217;ll notice I&#8217;ve done a few things different here.</p>\\n<p>Firstly, I&#8217;ve created two variables of type <em>int</em> on the one line, called <em>a</em> and <em>b </em>and assigned values to them<em>.</em> This <span style=\\\"background-color: #f5f6f5;\\\">one line syntax </span>is simply a handy shorthand for creating and assigning my variables. You could also create these one two lines as seen before in the previous lesson.</p>\\n<p>Secondly, you should also notice that I have decided to set up these variables inside the main method. Doing this means they are <span style=\\\"text-decoration: underline;\\\">local variables</span>, not fields. Which means they are only available inside the main method and not to other methods. For the purposes of this lesson, this is fine.</p>\\n<p>Next, add the following code:</p>\\n<pre class=\\\"lang:java decode:true\\\">int result = a + b;\\r\\nSystem.out.println(\\\"Result = \\\" + result);</pre>\\n<p>This is the simple add (+) operator which guess what adds two int&#8217;s together. Lastly, we use the <em>System</em> class which Java provides for us to print the output.</p>\\n<p>You can run the code at each stage in this lesson to view the results of each operator.</p>\\n<h3>Subtracting</h3>\\n<pre class=\\\"lang:java decode:true\\\">int result2 = a - b;\\r\\nSystem.out.println(\\\"Result = \\\" + result2);</pre>\\n<h3>Multiplication</h3>\\n<pre class=\\\"lang:java decode:true\\\">int result3 = a * b;\\r\\nSystem.out.println(\\\"Result = \\\" + result3);</pre>\\n<h3>Division</h3>\\n<pre class=\\\"lang:java decode:true\\\">int result4 = a / b;\\r\\nSystem.out.println(\\\"Result = \\\" + result4);</pre>\\n<h3>Modulus</h3>\\n<pre class=\\\"lang:java decode:true\\\">int result5 = a % b;\\r\\nSystem.out.println(\\\"Result = \\\" + result5);</pre>\\n<h3>Increment</h3>\\n<pre class=\\\"lang:java decode:true\\\">a++;\\r\\nSystem.out.println(\\\"Result = \\\" + a);</pre>\\n<p>The <em>++</em> operation will add 1 to the current value of <em>int</em> a. This is useful for keeping a count.</p>\\n<h3>Decrement</h3>\\n<pre class=\\\"lang:java decode:true\\\">a--;\\r\\nSystem.out.println(\\\"Result = \\\" + a);</pre>\\n<p>The &#8212; operation will subtract 1 to the current value of <em>int</em> a.  This is helpful for maintaining a countdown.</p>\\n<h3>Some more slightly complex calculations</h3>\\n<pre class=\\\"lang:java decode:true\\\">int result6 = (a*b) * (a/b);\\r\\nSystem.out.println(\\\"Result = \\\" + result6);\\r\\n\\r\\nint result7 = (a*b) * ( a * (a/b));\\r\\nSystem.out.println(\\\"Result = \\\" + result7);\\r\\n\\r\\nint result8 = (a*b)/(a/b);\\r\\nSystem.out.println(\\\"Result = \\\" + result8);\\r\\n\\r\\nint result9 = a * b * a / b;\\r\\nSystem.out.println(\\\"Result = \\\" + result9);</pre>\\n<h4></h4>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\\n<h3>Watch out!</h3>\\n<p>Dividing a primitive by zero causes the program to exit with a nasty error:</p>\\n<pre class=\\\"lang:java decode:true\\\">int result10 = (a*b) / 0;\\r\\nSystem.out.println(\\\"Division by zero = \\\" + result10);</pre>\\n<p>Have a look at the exception:</p>\\n<p><span style=\\\"color: #ff0000;\\\">Exception in thread &#8220;main&#8221; java.lang.ArithmeticException: / by zero</span></p>\\n<p style=\\\"padding-left: 30px;\\\"><span style=\\\"color: #ff0000;\\\">at com.codenerve.beginner.lesson3.BasicOperators.main(BasicOperators.java:63)</span></p>\\n<p>Ok, now that we&#8217;ve learnt how to use ints the next lesson will focus on Strings.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4><a href=\\\"https://www.codenerve.com/beginner-java/lesson-4-strings/\\\">Next: Strings</a></h4>\\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in the last lesson we learnt how to declare and assign values to various primitive types. Let&#8217;s now look at some more operations this time using the <em>int </em>primitive type.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>Setup</h3>\n<ol>\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson3</strong></li>\n<li>Create a new class file called: <strong>BasicOperators.java</strong> with a main method</li>\n</ol>\n<p><span style=\"color: #888888;\">If you need help with this, please go back and look at the <a title=\"Lesson 2 – Primitive Types\" href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\">previous lessons</a></span></p>\n<h3>Adding</h3>\n<p>Within the main method of your class add the following lines of code:</p>\n<pre class=\"lang:java decode:true\">int a = 10, b = 2;</pre>\n<p>You&#8217;ll notice I&#8217;ve done a few things different here.</p>\n<p>Firstly, I&#8217;ve created two variables of type <em>int</em> on the one line, called <em>a</em> and <em>b </em>and assigned values to them<em>.</em> This <span style=\"background-color: #f5f6f5;\">one line syntax </span>is simply a handy shorthand for creating and assigning my variables. You could also create these one two lines as seen before in the previous lesson.</p>\n<p>Secondly, you should also notice that I have decided to set up these variables inside the main method. Doing this means they are <span style=\"text-decoration: underline;\">local variables</span>, not fields. Which means they are only available inside the main method and not to other methods. For the purposes of this lesson, this is fine.</p>\n<p>Next, add the following code:</p>\n<pre class=\"lang:java decode:true\">int result = a + b;\r\nSystem.out.println(\"Result = \" + result);</pre>\n<p>This is the simple add (+) operator which guess what adds two int&#8217;s together. Lastly, we use the <em>System</em> class which Java provides for us to print the output.</p>\n<p>You can run the code at each stage in this lesson to view the results of each operator.</p>\n<h3>Subtracting</h3>\n<pre class=\"lang:java decode:true\">int result2 = a - b;\r\nSystem.out.println(\"Result = \" + result2);</pre>\n<h3>Multiplication</h3>\n<pre class=\"lang:java decode:true\">int result3 = a * b;\r\nSystem.out.println(\"Result = \" + result3);</pre>\n<h3>Division</h3>\n<pre class=\"lang:java decode:true\">int result4 = a / b;\r\nSystem.out.println(\"Result = \" + result4);</pre>\n<h3>Modulus</h3>\n<pre class=\"lang:java decode:true\">int result5 = a % b;\r\nSystem.out.println(\"Result = \" + result5);</pre>\n<h3>Increment</h3>\n<pre class=\"lang:java decode:true\">a++;\r\nSystem.out.println(\"Result = \" + a);</pre>\n<p>The <em>++</em> operation will add 1 to the current value of <em>int</em> a. This is useful for keeping a count.</p>\n<h3>Decrement</h3>\n<pre class=\"lang:java decode:true\">a--;\r\nSystem.out.println(\"Result = \" + a);</pre>\n<p>The &#8212; operation will subtract 1 to the current value of <em>int</em> a.  This is helpful for maintaining a countdown.</p>\n<h3>Some more slightly complex calculations</h3>\n<pre class=\"lang:java decode:true\">int result6 = (a*b) * (a/b);\r\nSystem.out.println(\"Result = \" + result6);\r\n\r\nint result7 = (a*b) * ( a * (a/b));\r\nSystem.out.println(\"Result = \" + result7);\r\n\r\nint result8 = (a*b)/(a/b);\r\nSystem.out.println(\"Result = \" + result8);\r\n\r\nint result9 = a * b * a / b;\r\nSystem.out.println(\"Result = \" + result9);</pre>\n<h4></h4>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\n<h3>Watch out!</h3>\n<p>Dividing a primitive by zero causes the program to exit with a nasty error:</p>\n<pre class=\"lang:java decode:true\">int result10 = (a*b) / 0;\r\nSystem.out.println(\"Division by zero = \" + result10);</pre>\n<p>Have a look at the exception:</p>\n<p><span style=\"color: #ff0000;\">Exception in thread &#8220;main&#8221; java.lang.ArithmeticException: / by zero</span></p>\n<p style=\"padding-left: 30px;\"><span style=\"color: #ff0000;\">at com.codenerve.beginner.lesson3.BasicOperators.main(BasicOperators.java:63)</span></p>\n<p>Ok, now that we&#8217;ve learnt how to use ints the next lesson will focus on Strings.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4><a href=\"https://www.codenerve.com/beginner-java/lesson-4-strings/\">Next: Strings</a></h4>\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"176","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in the last\nlesson we learnt how to declare and assign values to various primitive types.\nLet’s now look at some more operations this time using the intprimitive\ntype.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nsize=”small” show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nSetup\n 1. Create a new package called:com.codenerve.beginner.lesson3\n 2. Create a new class file called:BasicOperators.java with a main method\n\nIf you need help with this, please go back and look at the previous lessons\n[https://www.codenerve.com/beginner-java/lesson-2-primitive-types/]\n\nAdding\nWithin the main method of your class add the following lines of code:\n\nint a = 10, b = 2;\n\nYou’ll notice I’ve done a few things different here.\n\nFirstly, I’ve created two variables of type int on the one line, called a and b \nand assigned values to them. Thisone line syntaxis simply a handy shorthand for\ncreating and assigning my variables. You could also create these one two lines\nas seen before in the previous lesson.\n\nSecondly, you should also notice that I have decided to set up these variables\ninside the main method. Doing this means they are local variables, not fields.\nWhich means they are only available inside the main method and not to other\nmethods. For the purposes of this lesson, this is fine.\n\nNext, add the following code:\n\nint result = a + b;\r\nSystem.out.println(\"Result = \" + result);\n\nThis is the simple add (+) operator which guess what adds two int’s together.\nLastly, we use the System class which Java provides for us to print the output.\n\nYou can run the code at each stage in this lesson to view the results of each\noperator.\n\nSubtracting\nint result2 = a - b;\r\nSystem.out.println(\"Result = \" + result2);\n\nMultiplication\nint result3 = a * b;\r\nSystem.out.println(\"Result = \" + result3);\n\nDivision\nint result4 = a / b;\r\nSystem.out.println(\"Result = \" + result4);\n\nModulus\nint result5 = a % b;\r\nSystem.out.println(\"Result = \" + result5);\n\nIncrement\na++;\r\nSystem.out.println(\"Result = \" + a);\n\nThe ++ operation will add 1 to the current value of int a. This is useful for\nkeeping a count.\n\nDecrement\na--;\r\nSystem.out.println(\"Result = \" + a);\n\nThe — operation will subtract 1 to the current value ofinta.  This is helpful\nfor maintaining a countdown.\n\nSome more slightly complex calculations\nint result6 = (a*b) * (a/b);\r\nSystem.out.println(\"Result = \" + result6);\r\n\r\nint result7 = (a*b) * ( a * (a/b));\r\nSystem.out.println(\"Result = \" + result7);\r\n\r\nint result8 = (a*b)/(a/b);\r\nSystem.out.println(\"Result = \" + result8);\r\n\r\nint result9 = a * b * a / b;\r\nSystem.out.println(\"Result = \" + result9);\n\n\n[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=”small”\nshow_line=”1″\nicon=”fas|code”][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]Watch\nout!\nDividing a primitive by zero causes the program to exit with a nasty error:\n\nint result10 = (a*b) / 0;\r\nSystem.out.println(\"Division by zero = \" + result10);\n\nHave a look at the exception:\n\nException in thread “main” java.lang.ArithmeticException: / by zero\n\nat com.codenerve.beginner.lesson3.BasicOperators.main(BasicOperators.java:63)\n\nOk, now that we’ve learnt how to use ints the next lesson will focus on\nStrings.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nNext: Strings [https://www.codenerve.com/beginner-java/lesson-4-strings/]\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/01/analysis-blackboard-board-355952.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-01-22 10:45:35","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:20:01","updated_by":"1","published_at":"2018-01-22 10:45:35","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed0","uuid":"2b924756-6a3e-449e-aef9-5b9d8a13294f","title":"Lesson 4 - Strings","slug":"lesson-4-strings","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in this lesson let&#8217;s learn about Strings and the operations we can use on them.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>Setup</h3>\\n<ol>\\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson4</strong></li>\\n<li>Create a new class file called: <strong>Strings.java</strong></li>\\n</ol>\\n<p>If you need help with this, please go back and look at <a title=\\\"Lesson 2 – Primitive Types\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\">lesson 2</a></p>\\n<h3>Creating a String</h3>\\n<p>First, let&#8217;s create a new local variable inside a main method from which this program will run.</p>\\n<p><span style=\\\"color: #888888;\\\">Remember a field is created inside the class declaration but before any methods. A local variable is created inside a method (the main method in our case).</span></p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\\\"><img class=\\\"alignnone wp-image-158 size-full\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\\\" alt=\\\"ClassFields\\\" width=\\\"868\\\" height=\\\"652\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png 868w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-300x225.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-768x577.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-600x451.png 600w\\\" sizes=\\\"(max-width: 868px) 100vw, 868px\\\" /></a></p>\\n<p>So add the following to the main method:</p>\\n<pre class=\\\"lang:java decode:true\\\">String aString = \\\"hello world\\\";\\r\\nSystem.out.println(aString);</pre>\\n<p>As you can see we have created something new called a <em>String.</em> A String is not a primitive type; it is actually another java class file which represents a String. This class is part of the JDK(See lesson 0 &#8211; <a title=\\\"Setting Up\\\" href=\\\"https://www.codenerve.com/beginner-java/setting-up/\\\">setting up</a> if you can&#8217;t remember what this is).</p>\\n<p>In short, a String is a collection of <em>chars. </em>A primitive type we learnt about in <a title=\\\"Lesson 2 – Primitive Types\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\">lesson 2</a>. These means it can have almost any number of values including a letter, a word, a number, a sentence or a combination of all of them!</p>\\n<p>Continue to copy the code snippets into the main method as you work through this lesson. Run the program at each stage and observe the output of the <em>System.out.Println</em> statements produce.</p>\\n<h3>Comparing</h3>\\n<p>The equals operator == will compare two strings and return a <em>boolean</em> (true or false) if the strings match.</p>\\n<pre class=\\\"lang:java decode:true\\\">System.out.println(aString == \\\"hello\\\");\\r\\nSystem.out.println(aString == \\\"hello world\\\");</pre>\\n<p>There are also some Methods in the String class which we can use to manipulate our strings:</p>\\n<pre class=\\\"lang:java decode:true\\\">System.out.println(\\\"hello\\\".equals(aString));\\r\\nSystem.out.println(\\\"hello world\\\".equals(aString));\\r\\n\\r\\n// Case sensitivity\\r\\nSystem.out.println(\\\"HELLO WORLD\\\".equals(aString));\\r\\nSystem.out.println(\\\"HELLO WORLD\\\".equalsIgnoreCase(aString));</pre>\\n<p>We&#8217;ll learn more about Methods and how to create our own in the next lesson.</p>\\n<h3>String concatenation</h3>\\n<p>Concatenation in Java is the ability to join strings together into a new String:</p>\\n<pre class=\\\"lang:java decode:true\\\">// Using an operator +\\r\\nSystem.out.println(\\\"String \\\" + \\\"concatenation\\\");\\r\\n\\r\\n// Using a method in the string class\\r\\nSystem.out.println(\\\"String \\\".concat(\\\"concatenation\\\"));</pre>\\n<h3>Conversions</h3>\\n<p>We also have the ability to convert our Strings to other data types:</p>\\n<pre class=\\\"lang:java decode:true\\\">// String to char conversion\\r\\nchar firstLetter = aString.charAt(0);\\r\\nSystem.out.println(firstLetter);\\r\\n\\r\\nchar secondLetter = aString.charAt(1);\\r\\nSystem.out.println(secondLetter);\\r\\n\\r\\n// String to int conversion\\r\\naString = \\\"1\\\";\\r\\nint aNumber = Integer.parseInt(aString);\\r\\nSystem.out.println(aNumber);</pre>\\n<p>It&#8217;s worth knowing that these examples are not exhaustive. There are many more Methods on the String class you can use for comparing, modifying and converting your Strings. You should also notice in the last example of the previous code snippet; we used another Class called <em>Integer.</em> At this stage, I encourage you to play about with these. See what happens when you try to convert a String = &#8220;a&#8221; into an int for example(will it break the program?).[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>TIP: Autocompletion in IDE&#8217;s (Including Eclipse)</h3>\\n<p>Something you&#8217;ll use a lot when writing code is auto-completion. In eclipse, this is called <em>IntelliSense</em>. Let&#8217;s go back and look at one of the first examples:</p>\\n<pre class=\\\"lang:java decode:true\\\">System.out.println(\\\"hello\\\".equals(aString));</pre>\\n<p>When typing this out, after the &#8220;hello&#8221; hit <strong>CTRL + Space.</strong></p>\\n<p>When you do this you should see:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53.png\\\"><img class=\\\"alignnone wp-image-215 size-large\\\" title=\\\"intellisense\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-1024x306.png\\\" alt=\\\"intellisense\\\" width=\\\"1024\\\" height=\\\"306\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-1024x306.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-300x90.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-768x230.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-600x179.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53.png 1586w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>From this list, you can see all the available methods on the String class, and you can select the &#8220;equals&#8221; method and complete the example. I can&#8217;t stress enough how useful this will be. Try it after other dots in the samples or in the middle of variables.</p>\\n<p>Another example is to create the main method you&#8217;ve been using:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31.png\\\"><img class=\\\"alignnone wp-image-216 size-large\\\" title=\\\"Main\\\" src=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-1024x322.png\\\" alt=\\\"Screen Shot 2014-02-19 at 21.52.31\\\" width=\\\"1024\\\" height=\\\"322\\\" srcset=\\\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-1024x322.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-300x94.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-768x241.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-600x189.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31.png 1362w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>In Eclipse, hitting enter with &#8220;main &#8211; main method&#8221; highlighted will create:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n\\r\\n}</pre>\\n<p>In IntelliJ, this can be done using &#8216;psvm&#8217; and tab.</p>\\n<p>Handy! This shortcut will save time and help you become more familiar with the available Methods and classes from the JDK.</p>\\n<p>Ok, Next up we&#8217;ll be creating our methods.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4><a href=\\\"https://www.codenerve.com/beginner-java/lesson-5-methods/\\\">Next: Methods</a></h4>\\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in this lesson let&#8217;s learn about Strings and the operations we can use on them.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>Setup</h3>\n<ol>\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson4</strong></li>\n<li>Create a new class file called: <strong>Strings.java</strong></li>\n</ol>\n<p>If you need help with this, please go back and look at <a title=\"Lesson 2 – Primitive Types\" href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\">lesson 2</a></p>\n<h3>Creating a String</h3>\n<p>First, let&#8217;s create a new local variable inside a main method from which this program will run.</p>\n<p><span style=\"color: #888888;\">Remember a field is created inside the class declaration but before any methods. A local variable is created inside a method (the main method in our case).</span></p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\"><img class=\"alignnone wp-image-158 size-full\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png\" alt=\"ClassFields\" width=\"868\" height=\"652\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png 868w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-300x225.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-768x577.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38-600x451.png 600w\" sizes=\"(max-width: 868px) 100vw, 868px\" /></a></p>\n<p>So add the following to the main method:</p>\n<pre class=\"lang:java decode:true\">String aString = \"hello world\";\r\nSystem.out.println(aString);</pre>\n<p>As you can see we have created something new called a <em>String.</em> A String is not a primitive type; it is actually another java class file which represents a String. This class is part of the JDK(See lesson 0 &#8211; <a title=\"Setting Up\" href=\"https://www.codenerve.com/beginner-java/setting-up/\">setting up</a> if you can&#8217;t remember what this is).</p>\n<p>In short, a String is a collection of <em>chars. </em>A primitive type we learnt about in <a title=\"Lesson 2 – Primitive Types\" href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\">lesson 2</a>. These means it can have almost any number of values including a letter, a word, a number, a sentence or a combination of all of them!</p>\n<p>Continue to copy the code snippets into the main method as you work through this lesson. Run the program at each stage and observe the output of the <em>System.out.Println</em> statements produce.</p>\n<h3>Comparing</h3>\n<p>The equals operator == will compare two strings and return a <em>boolean</em> (true or false) if the strings match.</p>\n<pre class=\"lang:java decode:true\">System.out.println(aString == \"hello\");\r\nSystem.out.println(aString == \"hello world\");</pre>\n<p>There are also some Methods in the String class which we can use to manipulate our strings:</p>\n<pre class=\"lang:java decode:true\">System.out.println(\"hello\".equals(aString));\r\nSystem.out.println(\"hello world\".equals(aString));\r\n\r\n// Case sensitivity\r\nSystem.out.println(\"HELLO WORLD\".equals(aString));\r\nSystem.out.println(\"HELLO WORLD\".equalsIgnoreCase(aString));</pre>\n<p>We&#8217;ll learn more about Methods and how to create our own in the next lesson.</p>\n<h3>String concatenation</h3>\n<p>Concatenation in Java is the ability to join strings together into a new String:</p>\n<pre class=\"lang:java decode:true\">// Using an operator +\r\nSystem.out.println(\"String \" + \"concatenation\");\r\n\r\n// Using a method in the string class\r\nSystem.out.println(\"String \".concat(\"concatenation\"));</pre>\n<h3>Conversions</h3>\n<p>We also have the ability to convert our Strings to other data types:</p>\n<pre class=\"lang:java decode:true\">// String to char conversion\r\nchar firstLetter = aString.charAt(0);\r\nSystem.out.println(firstLetter);\r\n\r\nchar secondLetter = aString.charAt(1);\r\nSystem.out.println(secondLetter);\r\n\r\n// String to int conversion\r\naString = \"1\";\r\nint aNumber = Integer.parseInt(aString);\r\nSystem.out.println(aNumber);</pre>\n<p>It&#8217;s worth knowing that these examples are not exhaustive. There are many more Methods on the String class you can use for comparing, modifying and converting your Strings. You should also notice in the last example of the previous code snippet; we used another Class called <em>Integer.</em> At this stage, I encourage you to play about with these. See what happens when you try to convert a String = &#8220;a&#8221; into an int for example(will it break the program?).[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>TIP: Autocompletion in IDE&#8217;s (Including Eclipse)</h3>\n<p>Something you&#8217;ll use a lot when writing code is auto-completion. In eclipse, this is called <em>IntelliSense</em>. Let&#8217;s go back and look at one of the first examples:</p>\n<pre class=\"lang:java decode:true\">System.out.println(\"hello\".equals(aString));</pre>\n<p>When typing this out, after the &#8220;hello&#8221; hit <strong>CTRL + Space.</strong></p>\n<p>When you do this you should see:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53.png\"><img class=\"alignnone wp-image-215 size-large\" title=\"intellisense\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-1024x306.png\" alt=\"intellisense\" width=\"1024\" height=\"306\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-1024x306.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-300x90.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-768x230.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53-600x179.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53.png 1586w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>From this list, you can see all the available methods on the String class, and you can select the &#8220;equals&#8221; method and complete the example. I can&#8217;t stress enough how useful this will be. Try it after other dots in the samples or in the middle of variables.</p>\n<p>Another example is to create the main method you&#8217;ve been using:</p>\n<p><a ref=\"magnificPopup\" href=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31.png\"><img class=\"alignnone wp-image-216 size-large\" title=\"Main\" src=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-1024x322.png\" alt=\"Screen Shot 2014-02-19 at 21.52.31\" width=\"1024\" height=\"322\" srcset=\"/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-1024x322.png 1024w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-300x94.png 300w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-768x241.png 768w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31-600x189.png 600w, /content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31.png 1362w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>In Eclipse, hitting enter with &#8220;main &#8211; main method&#8221; highlighted will create:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n\r\n}</pre>\n<p>In IntelliJ, this can be done using &#8216;psvm&#8217; and tab.</p>\n<p>Handy! This shortcut will save time and help you become more familiar with the available Methods and classes from the JDK.</p>\n<p>Ok, Next up we&#8217;ll be creating our methods.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4><a href=\"https://www.codenerve.com/beginner-java/lesson-5-methods/\">Next: Methods</a></h4>\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"209","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok in this\nlesson let’s learn about Strings and the operations we can use on\nthem.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nsize=”small” show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nSetup\n 1. Create a new package called:com.codenerve.beginner.lesson4\n 2. Create a new class file called: Strings.java\n\nIf you need help with this, please go back and look at lesson 2\n[https://www.codenerve.com/beginner-java/lesson-2-primitive-types/]\n\nCreating a String\nFirst, let’s create a new local variable inside a main method from which this\nprogram will run.\n\nRemember a field is created inside the class declaration but before any methods.\nA local variable is created inside a method (the main method in our case).\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-17-at-19.04.38.png]\n\nSo add the following to the main method:\n\nString aString = \"hello world\";\r\nSystem.out.println(aString);\n\nAs you can see we have created something new called a String. A String is not a\nprimitive type; it is actually another java class file which represents a\nString. This class is part of the JDK(See lesson 0 – setting up\n[https://www.codenerve.com/beginner-java/setting-up/]if you can’t remember what\nthis is).\n\nIn short, a String is a collection of chars. A primitive type we learnt about in \nlesson 2 [https://www.codenerve.com/beginner-java/lesson-2-primitive-types/].\nThese means it can have almost any number of values including a letter, a word,\na number, a sentence or a combination of all of them!\n\nContinue to copy the code snippets into the main method as you work through this\nlesson. Run the program at each stage and observe the output of the \nSystem.out.Println statements produce.\n\nComparing\nThe equals operator == will compare two strings and return a boolean (true or\nfalse) if the strings match.\n\nSystem.out.println(aString == \"hello\");\r\nSystem.out.println(aString == \"hello world\");\n\nThere are also some Methods in the String class which we can use to manipulate\nour strings:\n\nSystem.out.println(\"hello\".equals(aString));\r\nSystem.out.println(\"hello world\".equals(aString));\r\n\r\n// Case sensitivity\r\nSystem.out.println(\"HELLO WORLD\".equals(aString));\r\nSystem.out.println(\"HELLO WORLD\".equalsIgnoreCase(aString));\n\nWe’ll learn more about Methods and how to create our own in the next lesson.\n\nString concatenation\nConcatenation in Java is the ability to join strings together into a new String:\n\n// Using an operator +\r\nSystem.out.println(\"String \" + \"concatenation\");\r\n\r\n// Using a method in the string class\r\nSystem.out.println(\"String \".concat(\"concatenation\"));\n\nConversions\nWe also have the ability to convert our Strings to other data types:\n\n// String to char conversion\r\nchar firstLetter = aString.charAt(0);\r\nSystem.out.println(firstLetter);\r\n\r\nchar secondLetter = aString.charAt(1);\r\nSystem.out.println(secondLetter);\r\n\r\n// String to int conversion\r\naString = \"1\";\r\nint aNumber = Integer.parseInt(aString);\r\nSystem.out.println(aNumber);\n\nIt’s worth knowing that these examples are not exhaustive. There are many more\nMethods on the String class you can use for comparing, modifying and converting\nyour Strings. You should also notice in the last example of the previous code\nsnippet; we used another Class called Integer. At this stage, I encourage you to\nplay about with these. See what happens when you try to convert a String = “a”\ninto an int for example(will it break the\nprogram?).[/vc_column_text][/vc_column_inner][/vc_row_inner][us_separator\nsize=”small” show_line=”1″ icon=”fas|code”][vc_column_text]\n\nTIP: Autocompletion in IDE’s (Including Eclipse)\nSomething you’ll use a lot when writing code is auto-completion. In eclipse,\nthis is calledIntelliSense. Let’s go back and look at one of the first examples:\n\nSystem.out.println(\"hello\".equals(aString));\n\nWhen typing this out, after the “hello” hit CTRL + Space.\n\nWhen you do this you should see:\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.44.53.png]\n\nFrom this list, you can see all the available methods on the String class, and\nyou can select the “equals” method and complete the example. I can’t stress\nenough how useful this will be. Try it after other dots in the samples or in the\nmiddle of variables.\n\nAnother example is to create the main method you’ve been using:\n\n [/content/images/wordpress/2014/02/Screen-Shot-2014-02-19-at-21.52.31.png]\n\nIn Eclipse, hitting enter with “main – main method” highlighted will create:\n\npublic static void main(String[] args) {\r\n\r\n}\n\nIn IntelliJ, this can be done using ‘psvm’ and tab.\n\nHandy! This shortcut will save time and help you become more familiar with the\navailable Methods and classes from the JDK.\n\nOk, Next up we’ll be creating our methods.[/vc_column_text][us_separator\nsize=”small” show_line=”1″ icon=”fas|code”][vc_column_text]\n\nNext: Methods [https://www.codenerve.com/beginner-java/lesson-5-methods/]\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/02/colorful-colourful-string-110876.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-02-09 23:01:18","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:57","updated_by":"1","published_at":"2018-02-09 23:01:18","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed1","uuid":"c5c510aa-3a5b-45a6-82c4-8a88c06ee071","title":"Lesson 5 - Methods","slug":"lesson-5-methods","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_column_text]Alright, it&#8217;s time now to learn about Methods. Methods are a collection of statements grouped to perform a specific operation. For example; return a file from your machine, add two numbers together or pass some value back to the code you are writing.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Setup</h3>\\n<ol>\\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson5</strong></li>\\n<li>Create a new class file called: <strong>Methods.java</strong></li>\\n</ol>\\n<p>If you need help creating these please go back and look at <a title=\\\"Lesson 2 – Primitive Types\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\">lesson 2</a></p>\\n<h3>A Simple Method</h3>\\n<p>Ok, let&#8217;s start off with something simple, our first method. In the new Methods class create the following method:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void aSimpleMethod() {\\r\\n     System.out.println(\\\"Hello Methods\\\");\\r\\n}</pre>\\n<p>If you haven&#8217;t already, create a main method inside your class also:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n\\r\\n}</pre>\\n<p>Now if you run your code at this point (try it!) you&#8217;re going to find the output a bit disappointing!! So far our example program does nothing 🙁</p>\\n<p>Why? We&#8217;ll because your <em>main</em> method is not yet using the <em>aSimpleMethod()</em> method you created. To fix this you need to <strong>call</strong> your new method:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n    aSimpleMethod();\\r\\n}</pre>\\n<p>Run it again and you should see the contents of your new method executed in the console view.</p>\\n<p><strong>private static void<br />\\n</strong>We&#8217;ve discussed these keywords briefly in previous lessons but let&#8217;s recap on their meaning:</p>\\n<ul>\\n<li>private &#8211; means the method is only available from this class (Methods.java) and no other. It cannot be &#8216;called&#8217; from another class. We&#8217;ll discuss other options later in the lesson series.</li>\\n<li>static &#8211; let&#8217;s leave this for now. For now, all of your methods will be static</li>\\n<li>void &#8211; this is the return type of the method. <em>Void</em> means that the method does not <strong>return</strong> any value. We&#8217;ll show a method later in this lesson that passes values back to your main method.</li>\\n</ul>\\n<h3>Method with Parameters</h3>\\n<p>Ok, let&#8217;s create another method. This time we are going to <strong>pass</strong> some parameters to your method. Add the following code to your class file:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void aMethodWithParameters(int i, int j) {\\r\\n     System.out.println(i + j);\\r\\n}</pre>\\n<p>Again like the previous example, we must call this from our main method:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n     aSimpleMethod();\\r\\n     aMethodWithParameters(4,5);\\r\\n}</pre>\\n<p>Run the program again. This time you will see the second method is <strong>called</strong> by your main method and printing the sum of the two numbers you passed in. It&#8217;s important to note that you can also reuse these methods as many times as you like:</p>\\n<pre class=\\\"lang:java decode:true\\\">public static void main(String[] args) {\\r\\n     aSimpleMethod();\\r\\n     aMethodWithParameters(4 , 5);\\r\\n     aMethodWithParameters(1 , 5);\\r\\n     aMethodWithParameters(100 , 5);\\r\\n     aMethodWithParameters(4 , 500);\\r\\n}</pre>\\n<h3>Methods that return values</h3>\\n<p>Alright, let&#8217;s try something else now. What if we don&#8217;t just want to print a result but instead we want to get that value back and do something else with it. To do this we can <strong>return</strong> the result of a method. Add the following class to our code:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static int aMethodWithAReturnValue(int i, int j, int k) {\\r\\n      return i + j + k;\\r\\n}</pre>\\n<p>You&#8217;ll notice something different about this method. No, I&#8217;m not talking about the extra parameter <em>int k.</em> That was added just to show you that methods can take as many parameters as you require. I&#8217;m referring to the <em>int</em> return type. Previously we used void meaning return nothing. This time we want to return an int. To do this you will also notice the <strong>return</strong> keyword used inside the method.</p>\\n<p>Alternatively, we could write:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static int aMethodWithAReturnValue(int i, int j, int k) {\\r\\n      int result = i + j + k;\\r\\n      return result;\\r\\n}</pre>\\n<p>This is just a more verbose way of writing the same thing as the previous example.</p>\\n<p>Ok, again like before, we need to call this from our main method but this time we need to capture the result. And lastly, we will print the result out so you can see the result in the console view:</p>\\n<pre class=\\\"lang:java decode:true\\\">int result = aMethodWithAReturnValue(4,5,6);\\r\\nSystem.out.println(result);</pre>\\n<h3>Try writing your own Methods</h3>\\n<p>As with all my lessons, try writing your own methods. Try using different primitive types or Strings instead of <em>ints</em>. Also, see if you can chain some methods together. For example:</p>\\n<pre class=\\\"lang:java decode:true\\\">aMethodWithParameters(aMethodWithAReturnValue(4,5,6),aMethodWithAReturnValue(4,5,6));</pre>\\n<p>What would be the result of the above code?? Try adding it to your main method and running it.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\\n<h3>Convention and Good Practice</h3>\\n<p>By convention, you should always start methods with a lower case letter and start the subsequent word with an uppercase value. You will see I have done this in these examples. Each method name must also have a unique name (not quite true we&#8217;ll discover a concept called polymorphism in the intermediate lessons).</p>\\n<p>Also for good practice and to allow other people to understand your code better try to use descriptive names. It should be easy to get a good idea of what a method does simply by reading the method name. In larger programs, this is especially important as it will save a lot of time versus having to go read and understand every method.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4><a href=\\\"https://www.codenerve.com/beginner-java/lesson-6-loops/\\\">Next: Loops</a></h4>\\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_column_text]Alright, it&#8217;s time now to learn about Methods. Methods are a collection of statements grouped to perform a specific operation. For example; return a file from your machine, add two numbers together or pass some value back to the code you are writing.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Setup</h3>\n<ol>\n<li>Create a new package called: <strong>com.codenerve.beginner.lesson5</strong></li>\n<li>Create a new class file called: <strong>Methods.java</strong></li>\n</ol>\n<p>If you need help creating these please go back and look at <a title=\"Lesson 2 – Primitive Types\" href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\">lesson 2</a></p>\n<h3>A Simple Method</h3>\n<p>Ok, let&#8217;s start off with something simple, our first method. In the new Methods class create the following method:</p>\n<pre class=\"lang:java decode:true\">private static void aSimpleMethod() {\r\n     System.out.println(\"Hello Methods\");\r\n}</pre>\n<p>If you haven&#8217;t already, create a main method inside your class also:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n\r\n}</pre>\n<p>Now if you run your code at this point (try it!) you&#8217;re going to find the output a bit disappointing!! So far our example program does nothing 🙁</p>\n<p>Why? We&#8217;ll because your <em>main</em> method is not yet using the <em>aSimpleMethod()</em> method you created. To fix this you need to <strong>call</strong> your new method:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n    aSimpleMethod();\r\n}</pre>\n<p>Run it again and you should see the contents of your new method executed in the console view.</p>\n<p><strong>private static void<br />\n</strong>We&#8217;ve discussed these keywords briefly in previous lessons but let&#8217;s recap on their meaning:</p>\n<ul>\n<li>private &#8211; means the method is only available from this class (Methods.java) and no other. It cannot be &#8216;called&#8217; from another class. We&#8217;ll discuss other options later in the lesson series.</li>\n<li>static &#8211; let&#8217;s leave this for now. For now, all of your methods will be static</li>\n<li>void &#8211; this is the return type of the method. <em>Void</em> means that the method does not <strong>return</strong> any value. We&#8217;ll show a method later in this lesson that passes values back to your main method.</li>\n</ul>\n<h3>Method with Parameters</h3>\n<p>Ok, let&#8217;s create another method. This time we are going to <strong>pass</strong> some parameters to your method. Add the following code to your class file:</p>\n<pre class=\"lang:java decode:true\">private static void aMethodWithParameters(int i, int j) {\r\n     System.out.println(i + j);\r\n}</pre>\n<p>Again like the previous example, we must call this from our main method:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n     aSimpleMethod();\r\n     aMethodWithParameters(4,5);\r\n}</pre>\n<p>Run the program again. This time you will see the second method is <strong>called</strong> by your main method and printing the sum of the two numbers you passed in. It&#8217;s important to note that you can also reuse these methods as many times as you like:</p>\n<pre class=\"lang:java decode:true\">public static void main(String[] args) {\r\n     aSimpleMethod();\r\n     aMethodWithParameters(4 , 5);\r\n     aMethodWithParameters(1 , 5);\r\n     aMethodWithParameters(100 , 5);\r\n     aMethodWithParameters(4 , 500);\r\n}</pre>\n<h3>Methods that return values</h3>\n<p>Alright, let&#8217;s try something else now. What if we don&#8217;t just want to print a result but instead we want to get that value back and do something else with it. To do this we can <strong>return</strong> the result of a method. Add the following class to our code:</p>\n<pre class=\"lang:java decode:true\">private static int aMethodWithAReturnValue(int i, int j, int k) {\r\n      return i + j + k;\r\n}</pre>\n<p>You&#8217;ll notice something different about this method. No, I&#8217;m not talking about the extra parameter <em>int k.</em> That was added just to show you that methods can take as many parameters as you require. I&#8217;m referring to the <em>int</em> return type. Previously we used void meaning return nothing. This time we want to return an int. To do this you will also notice the <strong>return</strong> keyword used inside the method.</p>\n<p>Alternatively, we could write:</p>\n<pre class=\"lang:java decode:true\">private static int aMethodWithAReturnValue(int i, int j, int k) {\r\n      int result = i + j + k;\r\n      return result;\r\n}</pre>\n<p>This is just a more verbose way of writing the same thing as the previous example.</p>\n<p>Ok, again like before, we need to call this from our main method but this time we need to capture the result. And lastly, we will print the result out so you can see the result in the console view:</p>\n<pre class=\"lang:java decode:true\">int result = aMethodWithAReturnValue(4,5,6);\r\nSystem.out.println(result);</pre>\n<h3>Try writing your own Methods</h3>\n<p>As with all my lessons, try writing your own methods. Try using different primitive types or Strings instead of <em>ints</em>. Also, see if you can chain some methods together. For example:</p>\n<pre class=\"lang:java decode:true\">aMethodWithParameters(aMethodWithAReturnValue(4,5,6),aMethodWithAReturnValue(4,5,6));</pre>\n<p>What would be the result of the above code?? Try adding it to your main method and running it.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\n<h3>Convention and Good Practice</h3>\n<p>By convention, you should always start methods with a lower case letter and start the subsequent word with an uppercase value. You will see I have done this in these examples. Each method name must also have a unique name (not quite true we&#8217;ll discover a concept called polymorphism in the intermediate lessons).</p>\n<p>Also for good practice and to allow other people to understand your code better try to use descriptive names. It should be easy to get a good idea of what a method does simply by reading the method name. In larger programs, this is especially important as it will save a lot of time versus having to go read and understand every method.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4><a href=\"https://www.codenerve.com/beginner-java/lesson-6-loops/\">Next: Loops</a></h4>\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"230","plaintext":"[vc_row][vc_column][vc_column_text]Alright, it’s time now to learn about\nMethods. Methods are a collection of statements grouped to perform a specific\noperation. For example; return a file from your machine, add two numbers\ntogether or pass some value back to the code you are\nwriting.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nsize=”small” show_line=”1″ icon=”fas|code”][vc_column_text]Setup\n 1. Create a new package called:com.codenerve.beginner.lesson5\n 2. Create a new class file called: Methods.java\n\nIf you need help creating these please go back and look atlesson 2\n[https://www.codenerve.com/beginner-java/lesson-2-primitive-types/]\n\nA Simple Method\nOk, let’s start off with something simple, our first method. In the new Methods\nclass create the following method:\n\nprivate static void aSimpleMethod() {\r\n     System.out.println(\"Hello Methods\");\r\n}\n\nIf you haven’t already, create a main method inside your class also:\n\npublic static void main(String[] args) {\r\n\r\n}\n\nNow if you run your code at this point (try it!) you’re going to find the output\na bit disappointing!! So far our example program does nothing 🙁\n\nWhy? We’ll because yourmain method is not yet using theaSimpleMethod()method you\ncreated. To fix this you need to call your new method:\n\npublic static void main(String[] args) {\r\n    aSimpleMethod();\r\n}\n\nRun it again and you should see the contents of your new method executed in the\nconsole view.\n\nprivate static void\nWe’ve discussed these keywords briefly in previous lessons but let’s recap on\ntheir meaning:\n\n * private – means the method is only available from this class (Methods.java)\n   and no other. It cannot be ‘called’ from another class. We’ll discuss other\n   options later in the lesson series.\n * static – let’s leave this for now. For now, all of your methods will be\n   static\n * void – this is the return type of the method. Void means that the method does\n   not return any value. We’ll show a method later in this lesson that passes\n   values back to your main method.\n\nMethod with Parameters\nOk, let’s create another method. This time we are going to pass some parameters\nto your method. Add the following code to your class file:\n\nprivate static void aMethodWithParameters(int i, int j) {\r\n     System.out.println(i + j);\r\n}\n\nAgain like the previous example, we must call this from our main method:\n\npublic static void main(String[] args) {\r\n     aSimpleMethod();\r\n     aMethodWithParameters(4,5);\r\n}\n\nRun the program again. This time you will see the second method is called by\nyour main method and printing the sum of the two numbers you passed in. It’s\nimportant to note that you can also reuse these methods as many times as you\nlike:\n\npublic static void main(String[] args) {\r\n     aSimpleMethod();\r\n     aMethodWithParameters(4 , 5);\r\n     aMethodWithParameters(1 , 5);\r\n     aMethodWithParameters(100 , 5);\r\n     aMethodWithParameters(4 , 500);\r\n}\n\nMethods that return values\nAlright, let’s try something else now. What if we don’t just want to print a\nresult but instead we want to get that value back and do something else with it.\nTo do this we can return the result of a method. Add the following class to our\ncode:\n\nprivate static int aMethodWithAReturnValue(int i, int j, int k) {\r\n      return i + j + k;\r\n}\n\nYou’ll notice something different about this method. No, I’m not talking about\nthe extra parameter int k. That was added just to show you that methods can take\nas many parameters as you require. I’m referring to the int return type.\nPreviously we used void meaning return nothing. This time we want to return an\nint. To do this you will also notice the return keyword used inside the method.\n\nAlternatively, we could write:\n\nprivate static int aMethodWithAReturnValue(int i, int j, int k) {\r\n      int result = i + j + k;\r\n      return result;\r\n}\n\nThis is just a more verbose way of writing the same thing as the previous\nexample.\n\nOk, again like before, we need to call this from our main method but this time\nwe need to capture the result. And lastly, we will print the result out so you\ncan see the result in the console view:\n\nint result = aMethodWithAReturnValue(4,5,6);\r\nSystem.out.println(result);\n\nTry writing your own Methods\nAs with all my lessons, try writing your own methods. Try using different\nprimitive types or Strings instead of ints. Also, see if you can chain some\nmethods together. For example:\n\naMethodWithParameters(aMethodWithAReturnValue(4,5,6),aMethodWithAReturnValue(4,5,6));\n\nWhat would be the result of the above code?? Try adding it to your main method\nand running it.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\n\nConvention and Good Practice\nBy convention, you should always start methods with a lower case letter and\nstart the subsequent word with an uppercase value. You will see I have done this\nin these examples. Each method name must also have a unique name (not quite true\nwe’ll discover a concept called polymorphism in the intermediate lessons).\n\nAlso for good practice and to allow other people to understand your code better\ntry to use descriptive names. It should be easy to get a good idea of what a\nmethod does simply by reading the method name. In larger programs, this is\nespecially important as it will save a lot of time versus having to go read and\nunderstand every method.[/vc_column_text][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nNext: Loops [https://www.codenerve.com/beginner-java/lesson-6-loops/]\n[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/02/block-cube-foam-1340185.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-02-10 02:08:05","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:53","updated_by":"1","published_at":"2018-02-10 02:08:05","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed2","uuid":"3dbb47ec-611d-4f60-aacc-9cdaf06149d6","title":"Lesson 6 - Loops","slug":"lesson-6-loops","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last lesson we learnt how to use Methods, pass parameters to them and get return values. But what if we want to call something many times consecutively.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;info&#8221;]The programming you have done so far in this lesson series is known as &#8216;sequential programming&#8217;. Sequential programming means that the code has executed from the top of the class to bottom. Each line of code will be read and fulfilled in sequential order.</p>\\n<p>In the next few lessons of the series, we are going to show you that code can be executed only if certain &#8216;conditions&#8217; are met. First, we&#8217;ll look at loops and in the next lesson conditional statements.[/us_message][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]There are three main loops we can use in Java:</p>\\n<ul>\\n<li>while</li>\\n<li>do while</li>\\n<li>for</li>\\n</ul>\\n<p>Since Java version 5, we also have the &#8216;<em>enhanced&#8217; version of the for loop</em>. We&#8217;ll be covering each loop in this lesson and when to use them. Let&#8217;s get started.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>The Stupid Way</h3>\\n<p>Ok, Let&#8217;s have a look at something you have already learnt in previous lessons and how we can improve upon it using loops. Have a look at the following code:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void theStupidWay() {\\r\\n    System.out.println(1);\\r\\n    System.out.println(2);\\r\\n    System.out.println(3);\\r\\n}</pre>\\n<p>So fairly basic right. Create a class called &#8216;Loops&#8217;, copy this into your starter project, create a main method and run the code to view its output.</p>\\n<p>So there&#8217;s nothing particularly wrong with this, but what if we wanted to print a thousand numbers? The code would get long and unreadable to say the very least. Thankfully there&#8217;s a way to tell java to stop executing sequentially (one line after another, always downwards until the end) and instead, perform the same section of code more than once. <span style=\\\"text-decoration: underline;\\\">This is the powerful concept of a loop.</span>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>The While Loop</h3>\\n<p>The first loop in this lesson is the while loop. The while loop reads in plain English as:</p>\\n<p><strong>While </strong><b>some expression is true; execute the code inside the loop. Then recheck the expression.</b></p>\\n<p>Let&#8217;s see an example:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void basicWhileLoop() {\\r\\n   int i = 1;\\r\\n\\r\\nwhile (i &lt; 4){\\r\\n   System.out.println(i);\\r\\n   i++;\\r\\n}</pre>\\n<p>Ok as usual try it out, copy the method into your Loops class and make sure to call it from your main method. You should notice that when you run the code, you get the same output as the previous code example.</p>\\n<p>So what&#8217;s happening? Let&#8217;s take it step by step:</p>\\n<ol>\\n<li>When the code is called, i is created and initialized with a value of 1.</li>\\n<li>The code then goes to the while expression and says: if i (i equals 1) is less than 4 return true</li>\\n<li>The expression is true so we go inside the loop and i is printed</li>\\n<li>i is then incremented by 1 (i now equals 2) and the code jumps back up to the while expression</li>\\n<li>This time i is still less than 4 so again i is printed and incremented by 1</li>\\n<li>This continues in a loop until i = 4</li>\\n<li>The while expression is evaluated one more time. i (4) &lt; 4 now gives a result of false, since 4 is not less than 4. The loop finishes without printing again and moves on downwards.</li>\\n</ol>\\n<p>Try changing the number 4 inside the while expression and run the code. Note the larger the number is, the longer the code will take to execute. This is due to the number of cycles the loop will go through until the code reaches its end.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Another While Loop</h3>\\n<p>Ok, we&#8217;re going to have a look at another while loop. This time we are going to use our knowledge of methods and their ability to take in parameters. In this case, the parameter is going to be the number of times the loop is to be executed:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void anotherWhileLoop(int maxValue) {\\r\\n    int i = 1;\\r\\n\\r\\n    while (i &lt; maxValue){\\r\\n        System.out.println(i);\\r\\n        i++;\\r\\n    }\\r\\n}</pre>\\n<p>Copy the code, call it from your main method and run it. To call the code, you&#8217;ll need to call the method and pass a value for the <em>maxValue</em>:</p>\\n<pre class=\\\"lang:java decode:true\\\">anotherWhileLoop(4);</pre>\\n<p>This parameterised version of the method is now much more useful to us as we can call the same code as before but with different results depending on how many times we loop through the code. Real-life applications could be adding charges to someones account based on how many days late they have returned a book. Or calculating compound interest over x number of months. The possibilities here are endless.</p>\\n<p>Ok, let&#8217;s move on.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>The Do &#8230; While Loop</h3>\\n<p>Time to look at the do while loop. This loop is very similar to the while loop. Let&#8217;s look at the syntax and see if you can see what the difference is:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void aDoLoop() {\\r\\n    int i = 5;\\r\\n\\r\\n    do {\\r\\n        System.out.println(i);\\r\\n        i++;\\r\\n    } while (i &lt; 4);\\r\\n}</pre>\\n<p>So there is a clear difference regarding the syntax of the Do loop. But the actual difference between these loops is a bit more subtle. Notice the While condition is at the end of the code block. This means the code is executed once before we evaluate whether i &lt; 4. If i equalled 5, for example, the code would print 5 before deciding not to loop. Try it for yourself![/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>The For Loop</h3>\\n<p>Ok, next up its the for loop. Let&#8217;s check it out:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void theForLoop() {\\r\\n\\r\\n    for (int i = 0; i &lt; 5; i++) {\\r\\n        System.out.println(i);\\r\\n    }\\r\\n}</pre>\\n<p>Copy the code, run it, etc. The first thing most people will think is whats the difference!? We used a while loop to do the same thing just a few minutes ago. And your right to believe that, there are ways to implement either loop and obtain the same results.</p>\\n<p>In general, however, we use this rule of thumb to decide which loop to use: <span style=\\\"text-decoration: underline;\\\">For loops are used when you know how many times you need to loop. While loops are used to loop until an event occurs</span>. So use a for loop if you always want to loop 100 times. And, a while loop if you want to loop until some condition or event occurs (i.e. i is no longer less than some number).[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>The enhanced For Loop</h3>\\n<p>Let&#8217;s take a very brief look at the enhanced loop. We&#8217;re not going to go into much detail into this loop as it covers &#8216;Collections&#8217; which is something we will learn about in our intermediate course. But let&#8217;s just be aware of this loop and its syntax:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void theEnhancedForLoop() {\\r\\n\\r\\n    List&lt;Integer&gt; array = new ArrayList&lt;Integer&gt;();\\r\\n    array.add(1);\\r\\n    array.add(2);\\r\\n    array.add(3);\\r\\n    array.add(4);\\r\\n    array.add(5);\\r\\n\\r\\n    for (int x : array){\\r\\n         System.out.println(x);\\r\\n    }\\r\\n}</pre>\\n<p>So in this method, we have created a Collection called an ArrayList. In this case, it is a list of Integers, but it can hold any type. The last few lines of the method is our enhanced for loop. This loop is capable of looping (or iterating) through each item (x) in our collection (array). We will use this more in the collections lessons.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3><a href=\\\"https://www.codenerve.com/beginner-java/lesson-7-conditional-statements/\\\">Next: Conditional Expressions</a></h3>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last lesson we learnt how to use Methods, pass parameters to them and get return values. But what if we want to call something many times consecutively.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;info&#8221;]The programming you have done so far in this lesson series is known as &#8216;sequential programming&#8217;. Sequential programming means that the code has executed from the top of the class to bottom. Each line of code will be read and fulfilled in sequential order.</p>\n<p>In the next few lessons of the series, we are going to show you that code can be executed only if certain &#8216;conditions&#8217; are met. First, we&#8217;ll look at loops and in the next lesson conditional statements.[/us_message][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]There are three main loops we can use in Java:</p>\n<ul>\n<li>while</li>\n<li>do while</li>\n<li>for</li>\n</ul>\n<p>Since Java version 5, we also have the &#8216;<em>enhanced&#8217; version of the for loop</em>. We&#8217;ll be covering each loop in this lesson and when to use them. Let&#8217;s get started.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>The Stupid Way</h3>\n<p>Ok, Let&#8217;s have a look at something you have already learnt in previous lessons and how we can improve upon it using loops. Have a look at the following code:</p>\n<pre class=\"lang:java decode:true\">private static void theStupidWay() {\r\n    System.out.println(1);\r\n    System.out.println(2);\r\n    System.out.println(3);\r\n}</pre>\n<p>So fairly basic right. Create a class called &#8216;Loops&#8217;, copy this into your starter project, create a main method and run the code to view its output.</p>\n<p>So there&#8217;s nothing particularly wrong with this, but what if we wanted to print a thousand numbers? The code would get long and unreadable to say the very least. Thankfully there&#8217;s a way to tell java to stop executing sequentially (one line after another, always downwards until the end) and instead, perform the same section of code more than once. <span style=\"text-decoration: underline;\">This is the powerful concept of a loop.</span>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>The While Loop</h3>\n<p>The first loop in this lesson is the while loop. The while loop reads in plain English as:</p>\n<p><strong>While </strong><b>some expression is true; execute the code inside the loop. Then recheck the expression.</b></p>\n<p>Let&#8217;s see an example:</p>\n<pre class=\"lang:java decode:true\">private static void basicWhileLoop() {\r\n   int i = 1;\r\n\r\nwhile (i &lt; 4){\r\n   System.out.println(i);\r\n   i++;\r\n}</pre>\n<p>Ok as usual try it out, copy the method into your Loops class and make sure to call it from your main method. You should notice that when you run the code, you get the same output as the previous code example.</p>\n<p>So what&#8217;s happening? Let&#8217;s take it step by step:</p>\n<ol>\n<li>When the code is called, i is created and initialized with a value of 1.</li>\n<li>The code then goes to the while expression and says: if i (i equals 1) is less than 4 return true</li>\n<li>The expression is true so we go inside the loop and i is printed</li>\n<li>i is then incremented by 1 (i now equals 2) and the code jumps back up to the while expression</li>\n<li>This time i is still less than 4 so again i is printed and incremented by 1</li>\n<li>This continues in a loop until i = 4</li>\n<li>The while expression is evaluated one more time. i (4) &lt; 4 now gives a result of false, since 4 is not less than 4. The loop finishes without printing again and moves on downwards.</li>\n</ol>\n<p>Try changing the number 4 inside the while expression and run the code. Note the larger the number is, the longer the code will take to execute. This is due to the number of cycles the loop will go through until the code reaches its end.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Another While Loop</h3>\n<p>Ok, we&#8217;re going to have a look at another while loop. This time we are going to use our knowledge of methods and their ability to take in parameters. In this case, the parameter is going to be the number of times the loop is to be executed:</p>\n<pre class=\"lang:java decode:true\">private static void anotherWhileLoop(int maxValue) {\r\n    int i = 1;\r\n\r\n    while (i &lt; maxValue){\r\n        System.out.println(i);\r\n        i++;\r\n    }\r\n}</pre>\n<p>Copy the code, call it from your main method and run it. To call the code, you&#8217;ll need to call the method and pass a value for the <em>maxValue</em>:</p>\n<pre class=\"lang:java decode:true\">anotherWhileLoop(4);</pre>\n<p>This parameterised version of the method is now much more useful to us as we can call the same code as before but with different results depending on how many times we loop through the code. Real-life applications could be adding charges to someones account based on how many days late they have returned a book. Or calculating compound interest over x number of months. The possibilities here are endless.</p>\n<p>Ok, let&#8217;s move on.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>The Do &#8230; While Loop</h3>\n<p>Time to look at the do while loop. This loop is very similar to the while loop. Let&#8217;s look at the syntax and see if you can see what the difference is:</p>\n<pre class=\"lang:java decode:true\">private static void aDoLoop() {\r\n    int i = 5;\r\n\r\n    do {\r\n        System.out.println(i);\r\n        i++;\r\n    } while (i &lt; 4);\r\n}</pre>\n<p>So there is a clear difference regarding the syntax of the Do loop. But the actual difference between these loops is a bit more subtle. Notice the While condition is at the end of the code block. This means the code is executed once before we evaluate whether i &lt; 4. If i equalled 5, for example, the code would print 5 before deciding not to loop. Try it for yourself![/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>The For Loop</h3>\n<p>Ok, next up its the for loop. Let&#8217;s check it out:</p>\n<pre class=\"lang:java decode:true\">private static void theForLoop() {\r\n\r\n    for (int i = 0; i &lt; 5; i++) {\r\n        System.out.println(i);\r\n    }\r\n}</pre>\n<p>Copy the code, run it, etc. The first thing most people will think is whats the difference!? We used a while loop to do the same thing just a few minutes ago. And your right to believe that, there are ways to implement either loop and obtain the same results.</p>\n<p>In general, however, we use this rule of thumb to decide which loop to use: <span style=\"text-decoration: underline;\">For loops are used when you know how many times you need to loop. While loops are used to loop until an event occurs</span>. So use a for loop if you always want to loop 100 times. And, a while loop if you want to loop until some condition or event occurs (i.e. i is no longer less than some number).[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>The enhanced For Loop</h3>\n<p>Let&#8217;s take a very brief look at the enhanced loop. We&#8217;re not going to go into much detail into this loop as it covers &#8216;Collections&#8217; which is something we will learn about in our intermediate course. But let&#8217;s just be aware of this loop and its syntax:</p>\n<pre class=\"lang:java decode:true\">private static void theEnhancedForLoop() {\r\n\r\n    List&lt;Integer&gt; array = new ArrayList&lt;Integer&gt;();\r\n    array.add(1);\r\n    array.add(2);\r\n    array.add(3);\r\n    array.add(4);\r\n    array.add(5);\r\n\r\n    for (int x : array){\r\n         System.out.println(x);\r\n    }\r\n}</pre>\n<p>So in this method, we have created a Collection called an ArrayList. In this case, it is a list of Integers, but it can hold any type. The last few lines of the method is our enhanced for loop. This loop is capable of looping (or iterating) through each item (x) in our collection (array). We will use this more in the collections lessons.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3><a href=\"https://www.codenerve.com/beginner-java/lesson-7-conditional-statements/\">Next: Conditional Expressions</a></h3>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"550","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the\nlast lesson we learnt how to use Methods, pass parameters to them and get return\nvalues. But what if we want to call something many times\nconsecutively.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_message type=”info”]The programming you have done so far in\nthis lesson series is known as ‘sequential programming’. Sequential programming\nmeans that the code has executed from the top of the class to bottom. Each line\nof code will be read and fulfilled in sequential order.\n\nIn the next few lessons of the series, we are going to show you that code can be\nexecuted only if certain ‘conditions’ are met. First, we’ll look at loops and in\nthe next lesson conditional statements.[/us_message][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][us_iconbox icon=”fas|code” size=”48px”\niconpos=”left” title=”Downloads” alignment=”left”]To get started you can use the\nbasic starter project [/content/images/wordpress/2016/01/StarterProject.zip] and\nfollow the steps to compile the code examples for the\nlesson.[/us_iconbox][us_separator size=”small” show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]There\nare three main loops we can use in Java:\n\n * while\n * do while\n * for\n\nSince Java version 5, we also have the ‘enhanced’ version of the for loop. We’ll\nbe covering each loop in this lesson and when to use them. Let’s get\nstarted.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n\nThe Stupid Way\nOk, Let’s have a look at something you have already learnt in previous lessons\nand how we can improve upon it using loops. Have a look at the following code:\n\nprivate static void theStupidWay() {\r\n    System.out.println(1);\r\n    System.out.println(2);\r\n    System.out.println(3);\r\n}\n\nSo fairly basic right. Create a class called ‘Loops’, copy this into your\nstarter project, create a main method and run the code to view its output.\n\nSo there’s nothing particularly wrong with this, but what if we wanted to print\na thousand numbers? The code would get long and unreadable to say the very\nleast. Thankfully there’s a way to tell java to stop executing sequentially (one\nline after another, always downwards until the end) and instead, perform the\nsame section of code more than once. This is the powerful concept of a loop.\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nThe While Loop\nThe first loop in this lesson is the while loop. The while loop reads in plain\nEnglish as:\n\nWhilesome expression is true; execute the code inside the loop. Then recheck the\nexpression.\n\nLet’s see an example:\n\nprivate static void basicWhileLoop() {\r\n   int i = 1;\r\n\r\nwhile (i < 4){\r\n   System.out.println(i);\r\n   i++;\r\n}\n\nOk as usual try it out, copy the method into your Loops class and make sure to\ncall it from your main method. You should notice that when you run the code, you\nget the same output as the previous code example.\n\nSo what’s happening? Let’s take it step by step:\n\n 1. When the code is called, i is created and initialized with a value of 1.\n 2. The code then goes to the while expression and says: if i (i equals 1) is\n    less than 4 return true\n 3. The expression is true so we go inside the loop and i is printed\n 4. i is then incremented by 1 (i now equals 2) and the code jumps back up to\n    the while expression\n 5. This time i is still less than 4 so again i is printed and incremented by 1\n 6. This continues in a loop until i = 4\n 7. The while expression is evaluated one more time. i (4) < 4 now gives a\n    result of false, since 4 is not less than 4. The loop finishes without\n    printing again and moves on downwards.\n\nTry changing the number 4 inside the while expression and run the code. Note the\nlarger the number is, the longer the code will take to execute. This is due to\nthe number of cycles the loop will go through until the code reaches its\nend.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nAnother While Loop\nOk, we’re going to have a look at another while loop. This time we are going to\nuse our knowledge of methods and their ability to take in parameters. In this\ncase, the parameter is going to be the number of times the loop is to be\nexecuted:\n\nprivate static void anotherWhileLoop(int maxValue) {\r\n    int i = 1;\r\n\r\n    while (i < maxValue){\r\n        System.out.println(i);\r\n        i++;\r\n    }\r\n}\n\nCopy the code, call it from your main method and run it. To call the code,\nyou’ll need to call the method and pass a value for the maxValue:\n\nanotherWhileLoop(4);\n\nThis parameterised version of the method is now much more useful to us as we can\ncall the same code as before but with different results depending on how many\ntimes we loop through the code. Real-life applications could be adding charges\nto someones account based on how many days late they have returned a book. Or\ncalculating compound interest over x number of months. The possibilities here\nare endless.\n\nOk, let’s move on.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nThe Do … While Loop\nTime to look at the do while loop. This loop is very similar to the while loop.\nLet’s look at the syntax and see if you can see what the difference is:\n\nprivate static void aDoLoop() {\r\n    int i = 5;\r\n\r\n    do {\r\n        System.out.println(i);\r\n        i++;\r\n    } while (i < 4);\r\n}\n\nSo there is a clear difference regarding the syntax of the Do loop. But the\nactual difference between these loops is a bit more subtle. Notice the While\ncondition is at the end of the code block. This means the code is executed once\nbefore we evaluate whether i < 4. If i equalled 5, for example, the code would\nprint 5 before deciding not to loop. Try it for\nyourself![/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nThe For Loop\nOk, next up its the for loop. Let’s check it out:\n\nprivate static void theForLoop() {\r\n\r\n    for (int i = 0; i < 5; i++) {\r\n        System.out.println(i);\r\n    }\r\n}\n\nCopy the code, run it, etc. The first thing most people will think is whats the\ndifference!? We used a while loop to do the same thing just a few minutes ago.\nAnd your right to believe that, there are ways to implement either loop and\nobtain the same results.\n\nIn general, however, we use this rule of thumb to decide which loop to use:For\nloops are used when you know how many times you need to loop. While loops are\nused to loop until an event occurs. So use a for loop if you always want to loop\n100 times. And, a while loop if you want to loop until some condition or event\noccurs (i.e. i is no longer less than some\nnumber).[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nThe enhanced For Loop\nLet’s take a very brief look at the enhanced loop. We’re not going to go into\nmuch detail into this loop as it covers ‘Collections’ which is something we will\nlearn about in our intermediate course. But let’s just be aware of this loop and\nits syntax:\n\nprivate static void theEnhancedForLoop() {\r\n\r\n    List<Integer> array = new ArrayList<Integer>();\r\n    array.add(1);\r\n    array.add(2);\r\n    array.add(3);\r\n    array.add(4);\r\n    array.add(5);\r\n\r\n    for (int x : array){\r\n         System.out.println(x);\r\n    }\r\n}\n\nSo in this method, we have created a Collection called an ArrayList. In this\ncase, it is a list of Integers, but it can hold any type. The last few lines of\nthe method is our enhanced for loop. This loop is capable of looping (or\niterating) through each item (x) in our collection (array). We will use this\nmore in the collections\nlessons.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nNext: Conditional Expressions\n[https://www.codenerve.com/beginner-java/lesson-7-conditional-statements/]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2018/03/architecture-engineering-entertainment-106155.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2018-03-05 18:32:08","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:48","updated_by":"1","published_at":"2018-03-05 18:32:08","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed5","uuid":"28b92c9b-4877-408b-9c41-453333ab858a","title":"Lesson 7 - Conditional Statements","slug":"lesson-7-conditional-statements","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last lesson we learnt how to use the different types of Loops. But there is another way to change the control flow of our program called branching.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;info&#8221;]Whats control flow?</p>\\n<p>Most of the code you have written so far gets executed from top to bottom in the order that you have written it. Control flow statements, however, break up this flow by employing decision making, looping, and branching, enabling your program to execute particular blocks of code depending on whether or not certain conditions are met.[/us_message][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>If Statements</h3>\\n<p>Let&#8217;s dive straight in and set up a new class with a main method. The first example is a basic for loop:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static void anIfStatement() {\\r\\n   int x = 1;\\r\\n\\r\\n   if (x &gt;=0){\\r\\n     System.out.println(\\\"X is a positive number\\\");\\r\\n   }\\r\\n}</pre>\\n<p>So hopefully the syntax is familiar from the last lesson on <a href=\\\"https://www.codenerve.com/beginner-java/lesson-6-loops/\\\">loops</a>. In plain English this code can be read:</p>\\n<p>&#8220;If x is greater or equal to zero. Execute the code inside the if statement (the curly braces {})&#8221;. If it is not greater or equal to zero don&#8217;t.</p>\\n<p>As always copy the code, call it from your main method and run it. Change the value of x to say -2 and rerun it. Do you see the output this time?</p>\\n<h6>Another If statement</h6>\\n<p>Ok, before we continue let&#8217;s have a look at another if condition. This one is going to pass a parameter into a method and based on the result of the if condition inside, return one of the two possible results:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static String anotherIfStatement(int grade) {\\r\\n\\r\\n    if (grade &gt;=40){\\r\\n        return \\\"Congratulations you have passed the exam!\\\";\\r\\n    }\\r\\n    return \\\"Unfortunately you have failed.\\\";\\r\\n}</pre>\\n<p><span style=\\\"color: #999999;\\\"><em>If you have forgotten about the keyword &#8216;return&#8217; or passing parameters to methods, please revisit <a title=\\\"Lesson 5 – Methods\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-5-methods/\\\"><span style=\\\"color: #999999;\\\">lesson 5</span></a> on methods.</em></span></p>\\n<p>As you can see, this method takes in an <em>int</em> called grade and returns a String. Which string depends on the grade parameters value. If the grade is greater or equal to 40, then the if condition is true and it will execute the code inside the if condition. Thus returning the first string. If it is not &gt;=40, then the if the condition is false, it will skip over the code enclosed in the if condition and it will return the second string.</p>\\n<p>To run the code add the following to the main method and change the grade parameter to return the different strings:</p>\\n<pre class=\\\"lang:java decode:true\\\">String passOrFail = anotherIfStatement(10);\\r\\nSystem.out.println(passOrFail);</pre>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>If &#8230; Else Statements</h3>\\n<p>Ok, time for another conditional. This time, let&#8217;s look at the If .. Else condition:</p>\\n<pre class=\\\"lang:java decode:true\\\">\\tprivate static String anIfElseStatement(int grade) {\\r\\n\\r\\n\\t\\tif (grade &gt;=40){\\r\\n\\t\\t\\treturn \\\"Congratulations you have passed the exam!\\\";\\r\\n\\t\\t} else {\\r\\n\\t\\t\\treturn \\\"Unfortunately you have failed.\\\";\\r\\n\\t\\t}\\r\\n\\t}</pre>\\n<p>Run the code from your main method and change the grade parameter. After you do this, you may be wondering what the difference is between the if else and the if condition we looked at previously.</p>\\n<p>The difference is that the if statement either executes or does not depending on the condition. Whereas, the if else condition must execute one of the two possible branches. i.e. it must print one of the two strings inside the if else condition.</p>\\n<p>Therefore if conditions give you the option to run something or not. If else&#8217;s make a choice which code block to execute.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>If else if conditions</h3>\\n<p>Following on from the &#8216;if else&#8217; condition we are now going to have a look at the &#8216;if else if&#8217; condition! This construct follows on quite naturally from the last example so let&#8217;s just take a look first:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static String anotherIfElseIfStatement(int grade) {\\r\\n\\r\\n     if (grade &gt;=70){\\r\\n         return \\\"Congratulations you have aced the exam!\\\";\\r\\n     } else if (grade &gt;=40) {\\r\\n         return \\\"Congratulations you have passed the exam!\\\";\\r\\n     } else {\\r\\n         return \\\"Unfortunately you have failed.\\\";\\r\\n     }\\r\\n}</pre>\\n<p>So as you can see we can effectively join <em>if else</em> statements together. It&#8217;s important to know here however that only one <em>if</em> condition (or the final else) will ever be executed. In the case above thats a bit obvious since the code block inside each <em>if</em> has a return statement. Therefore once one <em>if</em> is true and the code is executed. It will return a value from the method.</p>\\n<p>But what about the following method?</p>\\n<pre class=\\\"lang:java decode:true\\\">private static String anotherIfElseIfStatement(int grade) {\\r\\n\\r\\n   String result;\\r\\n\\r\\n   if (grade &gt;=70){\\r\\n       result = \\\"Congratulations you have aced the exam!\\\";\\r\\n   } else if (grade &gt;=40) {\\r\\n       result = \\\"Congratulations you have passed the exam!\\\";\\r\\n   } else {\\r\\n       result = \\\"Unfortunately you have failed.\\\";\\r\\n   }\\r\\n   return result;\\r\\n}</pre>\\n<p>If I pass in a grade of 80, you could easily be confused into thinking that the first <em>if</em> would set the String <em>result</em> then the second <em>if</em> would set the String <em>result</em> again. Since both of these <em>if</em> conditions are true. But, this is not the case. Java will execute the first true <em>if</em> condition and skip over the rest. Or, if no <em>if</em> condition is true only run the <em>else</em> block[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Switch Statement</h3>\\n<p>Switch statements are useful when there are many finite paths the code can go down. Unlike if and if else statements switch statements do not evaluate expressions such as greater than. A switch works with the byte, short, char, and int primitive data types. As well as Strings and Enums(we will cover these later). So let us take a look at our example:</p>\\n<pre class=\\\"lang:java decode:true\\\">private static String aSwitchStatement(int monthOfTheYear) {\\r\\n\\r\\n        String month;\\r\\n\\r\\n        switch (monthOfTheYear){\\r\\n            case 1:\\r\\n                month = \\\"January\\\";\\r\\n                break;\\r\\n            case 2:\\r\\n                month = \\\"February\\\";\\r\\n                break;\\r\\n            case 3:\\r\\n                month = \\\"March\\\";\\r\\n                break;\\r\\n            case 4:\\r\\n                month = \\\"April\\\";\\r\\n                break;\\r\\n            case 5:\\r\\n                month = \\\"May\\\";\\r\\n                break;\\r\\n            case 6:\\r\\n                month = \\\"June\\\";\\r\\n                break;\\r\\n            case 7:\\r\\n                month = \\\"July\\\";\\r\\n                break;\\r\\n            case 8:\\r\\n                month = \\\"August\\\";\\r\\n                break;\\r\\n            case 9:\\r\\n                month = \\\"September\\\";\\r\\n                break;\\r\\n            case 10:\\r\\n                month = \\\"October\\\";\\r\\n                break;\\r\\n            case 11:\\r\\n                month = \\\"November\\\";\\r\\n                break;\\r\\n            case 12:\\r\\n                month = \\\"December\\\";\\r\\n                break;\\r\\n            default:\\r\\n                month = \\\"Unknown\\\";\\r\\n                break;\\r\\n        }\\r\\n        return month;\\r\\n}</pre>\\n<p>This method converts a numerical representation of a Month and returns the name of the month as a string. So in this example, we are &#8216;switching&#8217; on an int called <em>monthOfTheYear.</em> You can see there are 12 possible cases and one default case. This means that if we enter 1, case 1 will be matched and the month string will be set to January. If you enter the value 13, no case will be matched and the default case will be used.</p>\\n<p>When a pattern is matched and the code inside the case is executed we call <em>break;</em> This is something that we need to look out for. If we do not call break the code will move down into the next case statement! For example:</p>\\n<pre class=\\\"lang:java decode:true\\\">            case 5:\\r\\n                month = \\\"May\\\";\\r\\n                // falls through here\\r\\n            case 6:\\r\\n                month = \\\"June\\\";</pre>\\n<p>If we enter 5 we expect the method to return May. But in fact, case 5 will match and <i>month</i> will be set to May, then it will fall through into case 6 and set <i>month</i> to June and continue until there is a break or we have reached the end!</p>\\n<p>In some cases, this is perfectly acceptable, and we may want to use this behaviour. However, it is also the source of potential bugs in the real world.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]At this stage, I would encourage you to spend some time writing your own conditional statements. There was a lot of information in this lesson and practice and hands on experience are the best way to learn.</p>\\n<p>Think of some real world problems and try to find the most suitable construct to implement it. Here are some examples to get you started:</p>\\n<ul>\\n<li>Calculating Tax using bands that are based on a persons salary</li>\\n<li>Charge someone for a late return</li>\\n<li>Calculating postage based on distance</li>\\n<li>Converting months to seasons</li>\\n</ul>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3><a href=\\\"https://www.codenerve.com/beginner-java/lesson-8-arrays/\\\">Next: Arrays</a></h3>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last lesson we learnt how to use the different types of Loops. But there is another way to change the control flow of our program called branching.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;info&#8221;]Whats control flow?</p>\n<p>Most of the code you have written so far gets executed from top to bottom in the order that you have written it. Control flow statements, however, break up this flow by employing decision making, looping, and branching, enabling your program to execute particular blocks of code depending on whether or not certain conditions are met.[/us_message][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>If Statements</h3>\n<p>Let&#8217;s dive straight in and set up a new class with a main method. The first example is a basic for loop:</p>\n<pre class=\"lang:java decode:true\">private static void anIfStatement() {\r\n   int x = 1;\r\n\r\n   if (x &gt;=0){\r\n     System.out.println(\"X is a positive number\");\r\n   }\r\n}</pre>\n<p>So hopefully the syntax is familiar from the last lesson on <a href=\"https://www.codenerve.com/beginner-java/lesson-6-loops/\">loops</a>. In plain English this code can be read:</p>\n<p>&#8220;If x is greater or equal to zero. Execute the code inside the if statement (the curly braces {})&#8221;. If it is not greater or equal to zero don&#8217;t.</p>\n<p>As always copy the code, call it from your main method and run it. Change the value of x to say -2 and rerun it. Do you see the output this time?</p>\n<h6>Another If statement</h6>\n<p>Ok, before we continue let&#8217;s have a look at another if condition. This one is going to pass a parameter into a method and based on the result of the if condition inside, return one of the two possible results:</p>\n<pre class=\"lang:java decode:true\">private static String anotherIfStatement(int grade) {\r\n\r\n    if (grade &gt;=40){\r\n        return \"Congratulations you have passed the exam!\";\r\n    }\r\n    return \"Unfortunately you have failed.\";\r\n}</pre>\n<p><span style=\"color: #999999;\"><em>If you have forgotten about the keyword &#8216;return&#8217; or passing parameters to methods, please revisit <a title=\"Lesson 5 – Methods\" href=\"https://www.codenerve.com/beginner-java/lesson-5-methods/\"><span style=\"color: #999999;\">lesson 5</span></a> on methods.</em></span></p>\n<p>As you can see, this method takes in an <em>int</em> called grade and returns a String. Which string depends on the grade parameters value. If the grade is greater or equal to 40, then the if condition is true and it will execute the code inside the if condition. Thus returning the first string. If it is not &gt;=40, then the if the condition is false, it will skip over the code enclosed in the if condition and it will return the second string.</p>\n<p>To run the code add the following to the main method and change the grade parameter to return the different strings:</p>\n<pre class=\"lang:java decode:true\">String passOrFail = anotherIfStatement(10);\r\nSystem.out.println(passOrFail);</pre>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>If &#8230; Else Statements</h3>\n<p>Ok, time for another conditional. This time, let&#8217;s look at the If .. Else condition:</p>\n<pre class=\"lang:java decode:true\">\tprivate static String anIfElseStatement(int grade) {\r\n\r\n\t\tif (grade &gt;=40){\r\n\t\t\treturn \"Congratulations you have passed the exam!\";\r\n\t\t} else {\r\n\t\t\treturn \"Unfortunately you have failed.\";\r\n\t\t}\r\n\t}</pre>\n<p>Run the code from your main method and change the grade parameter. After you do this, you may be wondering what the difference is between the if else and the if condition we looked at previously.</p>\n<p>The difference is that the if statement either executes or does not depending on the condition. Whereas, the if else condition must execute one of the two possible branches. i.e. it must print one of the two strings inside the if else condition.</p>\n<p>Therefore if conditions give you the option to run something or not. If else&#8217;s make a choice which code block to execute.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>If else if conditions</h3>\n<p>Following on from the &#8216;if else&#8217; condition we are now going to have a look at the &#8216;if else if&#8217; condition! This construct follows on quite naturally from the last example so let&#8217;s just take a look first:</p>\n<pre class=\"lang:java decode:true\">private static String anotherIfElseIfStatement(int grade) {\r\n\r\n     if (grade &gt;=70){\r\n         return \"Congratulations you have aced the exam!\";\r\n     } else if (grade &gt;=40) {\r\n         return \"Congratulations you have passed the exam!\";\r\n     } else {\r\n         return \"Unfortunately you have failed.\";\r\n     }\r\n}</pre>\n<p>So as you can see we can effectively join <em>if else</em> statements together. It&#8217;s important to know here however that only one <em>if</em> condition (or the final else) will ever be executed. In the case above thats a bit obvious since the code block inside each <em>if</em> has a return statement. Therefore once one <em>if</em> is true and the code is executed. It will return a value from the method.</p>\n<p>But what about the following method?</p>\n<pre class=\"lang:java decode:true\">private static String anotherIfElseIfStatement(int grade) {\r\n\r\n   String result;\r\n\r\n   if (grade &gt;=70){\r\n       result = \"Congratulations you have aced the exam!\";\r\n   } else if (grade &gt;=40) {\r\n       result = \"Congratulations you have passed the exam!\";\r\n   } else {\r\n       result = \"Unfortunately you have failed.\";\r\n   }\r\n   return result;\r\n}</pre>\n<p>If I pass in a grade of 80, you could easily be confused into thinking that the first <em>if</em> would set the String <em>result</em> then the second <em>if</em> would set the String <em>result</em> again. Since both of these <em>if</em> conditions are true. But, this is not the case. Java will execute the first true <em>if</em> condition and skip over the rest. Or, if no <em>if</em> condition is true only run the <em>else</em> block[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Switch Statement</h3>\n<p>Switch statements are useful when there are many finite paths the code can go down. Unlike if and if else statements switch statements do not evaluate expressions such as greater than. A switch works with the byte, short, char, and int primitive data types. As well as Strings and Enums(we will cover these later). So let us take a look at our example:</p>\n<pre class=\"lang:java decode:true\">private static String aSwitchStatement(int monthOfTheYear) {\r\n\r\n        String month;\r\n\r\n        switch (monthOfTheYear){\r\n            case 1:\r\n                month = \"January\";\r\n                break;\r\n            case 2:\r\n                month = \"February\";\r\n                break;\r\n            case 3:\r\n                month = \"March\";\r\n                break;\r\n            case 4:\r\n                month = \"April\";\r\n                break;\r\n            case 5:\r\n                month = \"May\";\r\n                break;\r\n            case 6:\r\n                month = \"June\";\r\n                break;\r\n            case 7:\r\n                month = \"July\";\r\n                break;\r\n            case 8:\r\n                month = \"August\";\r\n                break;\r\n            case 9:\r\n                month = \"September\";\r\n                break;\r\n            case 10:\r\n                month = \"October\";\r\n                break;\r\n            case 11:\r\n                month = \"November\";\r\n                break;\r\n            case 12:\r\n                month = \"December\";\r\n                break;\r\n            default:\r\n                month = \"Unknown\";\r\n                break;\r\n        }\r\n        return month;\r\n}</pre>\n<p>This method converts a numerical representation of a Month and returns the name of the month as a string. So in this example, we are &#8216;switching&#8217; on an int called <em>monthOfTheYear.</em> You can see there are 12 possible cases and one default case. This means that if we enter 1, case 1 will be matched and the month string will be set to January. If you enter the value 13, no case will be matched and the default case will be used.</p>\n<p>When a pattern is matched and the code inside the case is executed we call <em>break;</em> This is something that we need to look out for. If we do not call break the code will move down into the next case statement! For example:</p>\n<pre class=\"lang:java decode:true\">            case 5:\r\n                month = \"May\";\r\n                // falls through here\r\n            case 6:\r\n                month = \"June\";</pre>\n<p>If we enter 5 we expect the method to return May. But in fact, case 5 will match and <i>month</i> will be set to May, then it will fall through into case 6 and set <i>month</i> to June and continue until there is a break or we have reached the end!</p>\n<p>In some cases, this is perfectly acceptable, and we may want to use this behaviour. However, it is also the source of potential bugs in the real world.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]At this stage, I would encourage you to spend some time writing your own conditional statements. There was a lot of information in this lesson and practice and hands on experience are the best way to learn.</p>\n<p>Think of some real world problems and try to find the most suitable construct to implement it. Here are some examples to get you started:</p>\n<ul>\n<li>Calculating Tax using bands that are based on a persons salary</li>\n<li>Charge someone for a late return</li>\n<li>Calculating postage based on distance</li>\n<li>Converting months to seasons</li>\n</ul>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3><a href=\"https://www.codenerve.com/beginner-java/lesson-8-arrays/\">Next: Arrays</a></h3>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"597","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the\nlast lesson we learnt how to use the different types of Loops. But there is\nanother way to change the control flow of our program called\nbranching.[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_message type=”info”]Whats control flow?\n\nMost of the code you have written so far gets executed from top to bottom in the\norder that you have written it. Control flow statements, however, break up this\nflow by employing decision making, looping, and branching, enabling your program\nto execute particular blocks of code depending on whether or not certain\nconditions are met.[/us_message][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nshow_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n\nIf Statements\nLet’s dive straight in and set up a new class with a main method. The first\nexample is a basic for loop:\n\nprivate static void anIfStatement() {\r\n   int x = 1;\r\n\r\n   if (x >=0){\r\n     System.out.println(\"X is a positive number\");\r\n   }\r\n}\n\nSo hopefully the syntax is familiar from the last lesson on loops\n[https://www.codenerve.com/beginner-java/lesson-6-loops/]. In plain English this\ncode can be read:\n\n“If x is greater or equal to zero. Execute the code inside the if statement (the\ncurly braces {})”. If it is not greater or equal to zero don’t.\n\nAs always copy the code, call it from your main method and run it. Change the\nvalue of x to say -2 and rerun it. Do you see the output this time?\n\nAnother If statement\nOk, before we continue let’s have a look at another if condition. This one is\ngoing to pass a parameter into a method and based on the result of the if\ncondition inside, return one of the two possible results:\n\nprivate static String anotherIfStatement(int grade) {\r\n\r\n    if (grade >=40){\r\n        return \"Congratulations you have passed the exam!\";\r\n    }\r\n    return \"Unfortunately you have failed.\";\r\n}\n\nIf you have forgotten about the keyword ‘return’ or passing parameters to\nmethods, please revisit lesson 5\n[https://www.codenerve.com/beginner-java/lesson-5-methods/] on methods.\n\nAs you can see, this method takes in anint called grade and returns a String.\nWhich string depends on the grade parameters value. If the grade is greater or\nequal to 40, then the if condition is true and it will execute the code inside\nthe if condition. Thus returning the first string. If it is not >=40, then the\nif the condition is false, it will skip over the code enclosed in the if\ncondition and it will return the second string.\n\nTo run the code add the following to the main method and change the grade\nparameter to return the different strings:\n\nString passOrFail = anotherIfStatement(10);\r\nSystem.out.println(passOrFail);\n\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]If\n… Else Statements\nOk, time for another conditional. This time, let’s look at the If .. Else\ncondition:\n\n\tprivate static String anIfElseStatement(int grade) {\r\n\r\n\t\tif (grade >=40){\r\n\t\t\treturn \"Congratulations you have passed the exam!\";\r\n\t\t} else {\r\n\t\t\treturn \"Unfortunately you have failed.\";\r\n\t\t}\r\n\t}\n\nRun the code from your main method and change the grade parameter. After you do\nthis, you may be wondering what the difference is between the if else and the if\ncondition we looked at previously.\n\nThe difference is that the if statement either executes or does not depending on\nthe condition. Whereas, the if else condition must execute one of the two\npossible branches. i.e. it must print one of the two strings inside the if else\ncondition.\n\nTherefore if conditions give you the option to run something or not. If else’s\nmake a choice which code block to execute.[/vc_column_text][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nIf else if conditions\nFollowing on from the ‘if else’ condition we are now going to have a look at the\n‘if else if’ condition! This construct follows on quite naturally from the last\nexample so let’s just take a look first:\n\nprivate static String anotherIfElseIfStatement(int grade) {\r\n\r\n     if (grade >=70){\r\n         return \"Congratulations you have aced the exam!\";\r\n     } else if (grade >=40) {\r\n         return \"Congratulations you have passed the exam!\";\r\n     } else {\r\n         return \"Unfortunately you have failed.\";\r\n     }\r\n}\n\nSo as you can see we can effectively join if else statements together. It’s\nimportant to know here however that only one if condition (or the final else)\nwill ever be executed. In the case above thats a bit obvious since the code\nblock inside each if has a return statement. Therefore once one if is true and\nthe code is executed. It will return a value from the method.\n\nBut what about the following method?\n\nprivate static String anotherIfElseIfStatement(int grade) {\r\n\r\n   String result;\r\n\r\n   if (grade >=70){\r\n       result = \"Congratulations you have aced the exam!\";\r\n   } else if (grade >=40) {\r\n       result = \"Congratulations you have passed the exam!\";\r\n   } else {\r\n       result = \"Unfortunately you have failed.\";\r\n   }\r\n   return result;\r\n}\n\nIf I pass in a grade of 80, you could easily be confused into thinking that the\nfirst if would set the String result then the second if would set the String \nresult again. Since both of these if conditions are true. But, this is not the\ncase. Java will execute the first true if condition and skip over the rest. Or,\nif no if condition is true only run the else block[/vc_column_text][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nSwitch Statement\nSwitch statements are useful when there are many finite paths the code can go\ndown. Unlike if and if else statements switch statements do not evaluate\nexpressions such as greater than. A switch works with the byte, short, char, and\nint primitive data types. As well as Strings and Enums(we will cover these\nlater). So let us take a look at our example:\n\nprivate static String aSwitchStatement(int monthOfTheYear) {\r\n\r\n        String month;\r\n\r\n        switch (monthOfTheYear){\r\n            case 1:\r\n                month = \"January\";\r\n                break;\r\n            case 2:\r\n                month = \"February\";\r\n                break;\r\n            case 3:\r\n                month = \"March\";\r\n                break;\r\n            case 4:\r\n                month = \"April\";\r\n                break;\r\n            case 5:\r\n                month = \"May\";\r\n                break;\r\n            case 6:\r\n                month = \"June\";\r\n                break;\r\n            case 7:\r\n                month = \"July\";\r\n                break;\r\n            case 8:\r\n                month = \"August\";\r\n                break;\r\n            case 9:\r\n                month = \"September\";\r\n                break;\r\n            case 10:\r\n                month = \"October\";\r\n                break;\r\n            case 11:\r\n                month = \"November\";\r\n                break;\r\n            case 12:\r\n                month = \"December\";\r\n                break;\r\n            default:\r\n                month = \"Unknown\";\r\n                break;\r\n        }\r\n        return month;\r\n}\n\nThis method converts a numerical representation of a Month and returns the name\nof the month as a string. So in this example, we are ‘switching’ on an int\ncalled monthOfTheYear.You can see there are 12 possible cases and one default\ncase. This means that if we enter 1, case 1 will be matched and the month string\nwill be set to January. If you enter the value 13, no case will be matched and\nthe default case will be used.\n\nWhen a pattern is matched and the code inside the case is executed we call \nbreak;This is something that we need to look out for. If we do not call break\nthe code will move down into the next case statement! For example:\n\n            case 5:\r\n                month = \"May\";\r\n                // falls through here\r\n            case 6:\r\n                month = \"June\";\n\nIf we enter 5 we expect the method to return May. But in fact, case 5 will match\nandmonth will be set to May, then it will fall through into case 6 and set month \nto June and continue until there is a break or we have reached the end!\n\nIn some cases, this is perfectly acceptable, and we may want to use this\nbehaviour. However, it is also the source of potential bugs in the real\nworld.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]At this stage, I would encourage you to spend\nsome time writing your own conditional statements. There was a lot of\ninformation in this lesson and practice and hands on experience are the best way\nto learn.\n\nThink of some real world problems and try to find the most suitable construct to\nimplement it. Here are some examples to get you started:\n\n * Calculating Tax using bands that are based on a persons salary\n * Charge someone for a late return\n * Calculating postage based on distance\n * Converting months to seasons\n\n[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]Next: Arrays\n[https://www.codenerve.com/beginner-java/lesson-8-arrays/]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2019/04/business-code-codes-207580.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2019-04-03 21:18:19","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:44","updated_by":"1","published_at":"2019-04-03 21:18:19","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed6","uuid":"1eda206f-d35b-4137-9ec7-ef2a125af4a7","title":"Mortgage Driven Developement","slug":"temp-slug-20","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column width=&#8221;1/1&#8243;][vc_column_text]\\n<p class=\\\"js-clip_title\\\">Matt Wynne and skills matter&#8217;s video in Mortgage driven development.</p>\\n[/vc_column_text][vc_video link=&#8221;https://vimeo.com/39660655&#8243;][us_separator icon=&#8221;fas|video&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]Having worked in the industry for ~5 years now this resonated with me. As well as getting a good laugh, I thought of various individuals that I have encountered or worked with that seemed to behave in a mortgage driven way.</p>\\n<p>Knowledge sharing with people who practice MDD is like pulling teeth.</p>\\n<ul>\\n<li>Confluence! no way!</li>\\n<li>Self documenting and maintainable code, no chance!</li>\\n<li>Taking the time to reduce technical debt!? Good one!</li>\\n</ul>\\n<p>All of this is considered a risky business for a mortgage driven developer. They way they seem to work is the hard way, but its the way they are best at and thats that.</p>\\n<p>But my question is why? Is there a genuine fear? or is it simply a bad attitude?</p>\\n<p>Personally I see value (as well as my own value) in good practice&#8217;s and doing all of the good things above. Surely an employer would never get rid of a good developer over one that is good at &#8216;getting things done&#8217; but not good at working in the team?[/vc_column_text][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column width=&#8221;1/1&#8243;][vc_column_text]\n<p class=\"js-clip_title\">Matt Wynne and skills matter&#8217;s video in Mortgage driven development.</p>\n[/vc_column_text][vc_video link=&#8221;https://vimeo.com/39660655&#8243;][us_separator icon=&#8221;fas|video&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]Having worked in the industry for ~5 years now this resonated with me. As well as getting a good laugh, I thought of various individuals that I have encountered or worked with that seemed to behave in a mortgage driven way.</p>\n<p>Knowledge sharing with people who practice MDD is like pulling teeth.</p>\n<ul>\n<li>Confluence! no way!</li>\n<li>Self documenting and maintainable code, no chance!</li>\n<li>Taking the time to reduce technical debt!? Good one!</li>\n</ul>\n<p>All of this is considered a risky business for a mortgage driven developer. They way they seem to work is the hard way, but its the way they are best at and thats that.</p>\n<p>But my question is why? Is there a genuine fear? or is it simply a bad attitude?</p>\n<p>Personally I see value (as well as my own value) in good practice&#8217;s and doing all of the good things above. Surely an employer would never get rid of a good developer over one that is good at &#8216;getting things done&#8217; but not good at working in the team?[/vc_column_text][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"913","plaintext":"[vc_row][vc_column width=”1/1″][vc_column_text]Matt Wynne and skills\nmatter’s video in Mortgage driven development.\n\n[/vc_column_text][vc_video link=”https://vimeo.com/39660655″][us_separator\nicon=”fas|video” show_line=”1″ line_width=”default”][vc_column_text]Having\nworked in the industry for ~5 years now this resonated with me. As well as\ngetting a good laugh, I thought of various individuals that I have encountered\nor worked with that seemed to behave in a mortgage driven way.\n\nKnowledge sharing with people who practice MDD is like pulling teeth.\n\n * Confluence! no way!\n * Self documenting and maintainable code, no chance!\n * Taking the time to reduce technical debt!? Good one!\n\nAll of this is considered a risky business for a mortgage driven developer. They\nway they seem to work is the hard way, but its the way they are best at and\nthats that.\n\nBut my question is why? Is there a genuine fear? or is it simply a bad attitude?\n\nPersonally I see value (as well as my own value) in good practice’s and doing\nall of the good things above. Surely an employer would never get rid of a good\ndeveloper over one that is good at ‘getting things done’ but not good at working\nin the team?[/vc_column_text][/vc_column][/vc_row]","feature_image":null,"featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2019-04-03 22:32:38","created_by":"5f1203ad07a62a995513aebd","updated_at":"2019-04-03 22:32:38","updated_by":"5f1203ad07a62a995513aebd","published_at":"2020-07-17 20:01:49","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed7","uuid":"4e08abb6-6e81-40b0-8720-c2bfa61c6047","title":"Lesson 8 - Arrays","slug":"lesson-8-arrays","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last few lessons we learn&#8217;t how to use Conditional statements and loops which we are going to build upon in this lesson. However, so far in the lesson series we have used the <a title=\\\"Lesson 2 – Primitive Types\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">basic primitive types</a> and <a title=\\\"Lesson 4 – Strings\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-4-strings/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">Strings</a> to hold data for us. In this lesson its time to cover a new data type called an <em>Array.</em>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>What are Arrays?</h3>\\n<p>An array is a container that holds a number of values of a particular type. Imagine we had to declare a number of book titles for example. With the variables you&#8217;ve been taught in previous lessons we could write:</p>\\n<pre class=\\\"lang:java decode:true\\\">        String title1 = \\\"a\\\";\\r\\n        String title2 = \\\"b\\\";\\r\\n        String title3 = \\\"c\\\";\\r\\n        String title4 = \\\"d\\\";</pre>\\n<p>This isn&#8217;t a bad solution if there are only 2 or 3 books but what if there&#8217;s ten or a hundred book&#8217;s? For this we are better using an array that can hold large numbers of related data.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Creating Arrays</h3>\\n<p>Ok so let&#8217;s create one! First off let&#8217;s create a new class called Arrays.[/vc_column_text][vc_column_text]To create an array we use the following syntax:</p>\\n<pre class=\\\"lang:java decode:true\\\">String[] books = {\\\"1984\\\", \\\"Hitchhikers Guide to the galaxy\\\", \\\"Harry Potter\\\", \\\"A tale of two cities\\\"};</pre>\\n<p>Here we have an array of four elements. The elements are of type String, there values are our book titles. To find out the length of an array we can use the .length variable contained inside an array object. For example:</p>\\n<pre class=\\\"lang:java decode:true\\\">System.out.println(\\\"There are \\\" + books.length + \\\" books in the array\\\");</pre>\\n<p>Will output:</p>\\n<pre class=\\\"lang:java decode:true \\\">\\\"There are 4 books in the array\\\"</pre>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Accessing elements in Arrays</h3>\\n<p>To access one of our titles we can use the elements numerical index. But first let me explain this a little more. To help do this I&#8217;m going to visualise the array we created above:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png\\\"><img class=\\\"wp-image-717 size-full alignleft\\\" src=\\\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png\\\" alt=\\\"arrays\\\" width=\\\"694\\\" height=\\\"290\\\" srcset=\\\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png 694w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17-300x125.png 300w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17-600x251.png 600w\\\" sizes=\\\"(max-width: 694px) 100vw, 694px\\\" /></a></p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n<p>An array consists of a number of elements. The number of elements depends on the number of values you inserted when you created the array. You should note that the first elements index is zero. So to access the first element in the array we would use:</p>\\n<pre class=\\\"lang:java decode:true \\\">books[0]</pre>\\n<p>Try it! Create our array above and use the following to print out the second element in the array:</p>\\n<pre class=\\\"lang:java decode:true \\\">System.out.println(\\\"Our second title is: \\\" + books[1]);</pre>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Iterating through Arrays</h3>\\n<p>So now you&#8217;re able to extract values from the array which is great. But now were going to combine our knowledge of arrays with an older lesson on <a title=\\\"Lesson 6 – Loops\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-6-loops/\\\">loops</a>. Iterating through an array is a very common pattern in programming and will be a very powerful tool to have. Lets look at the following code:</p>\\n<pre class=\\\"lang:java decode:true \\\">    private static void iteratingThroughAnArray() {\\r\\n\\r\\n        String[] books = {\\\"1984\\\", \\\"Hitchhikers Guide to the galaxy\\\", \\\"Harry Potter\\\", \\\"A tale of two cities\\\"};\\r\\n\\r\\n        for (int i = 0; i &lt; books.length; i++) {\\r\\n            System.out.println(\\\"Book \\\" + i + \\\" Title: \\\" + books[i]);\\r\\n        }\\r\\n    }</pre>\\n<p>Add this method to your Arrays class and call it from your main method. You will see in the console output it will loop through every element in the array you created and print each title out.</p>\\n<p>Whats interesting here is the use of the loops <em>i</em> variable. As the for loop steps through each loop, <em>i</em> is incremented. As you can see it starts at zero. Which is perfect for accessing the first element in the array. We also set the upper limit of the array to be <em>&lt; books.length. </em>This is very important! I encourage you to try to access an element in the array that doesn&#8217;t exist to see why! Try books[99] for example (Hint: You will see lots of red!).[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Reminder of the Java 5 Enhanced For loop</h3>\\n<p>So now were going to remind ourselves of the enhanced for loop. We briefly covered this in the <a title=\\\"Lesson 6 – Loops\\\" href=\\\"https://www.codenerve.com/beginner-java/lesson-6-loops/\\\">loops lesson</a>. Lets have a look at another method which does the same thing as the previous example only using the enhanced loop:</p>\\n<pre class=\\\"lang:java decode:true \\\">    private static void usingTheEnhancedForLoop() {\\r\\n\\r\\n        String[] books = {\\\"1984\\\", \\\"Hitchhikers Guide to the galaxy\\\", \\\"Harry Potter\\\", \\\"A tale of two cities\\\"};\\r\\n\\r\\n        for (String book : books) {\\r\\n            System.out.println(\\\"Title: \\\" + book);\\r\\n        }\\r\\n\\r\\n    }</pre>\\n<p>You&#8217;ll see from the output this is (almost) the same method as before. An advantage however is the i variable and the books.length are not required. This is therefore less prone to errors (like the ArrayIndexOutOfBoundsException you would have seen if you&#8217;d tried to access an element that doesn&#8217;t exist).</p>\\n<p>It also has a few drawbacks. You cannot access the numerical index of the current element in the array because there is no i variable and also these loops can only go in one direction. In the previous loop you could have declared your array like:</p>\\n<pre class=\\\"lang:java decode:true\\\">    private static void iteratingThroughAnArray_backwards() {\\r\\n\\r\\n        String[] books = {\\\"1984\\\", \\\"Hitchhikers Guide to the galaxy\\\", \\\"Harry Potter\\\", \\\"A tale of two cities\\\"};\\r\\n\\r\\n        for (int i = books.length -1; i &gt;= 0; i--) {\\r\\n            System.out.println(\\\"Book \\\" + i + \\\" Title: \\\" + books[i]);\\r\\n        }\\r\\n    }</pre>\\n<p>This array will print the titles in the reverse order. This is why its useful to learn both arrays depending on what you need to do with your array.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Arrays With Methods</h3>\\n<p>As with all the other types you have learnt, arrays can be passed into and returned from methods.</p>\\n<p>Passing in arrays:</p>\\n<pre class=\\\"lang:java decode:true\\\">    private static void usingArraysInMethods(String[] anotherStringArray) {\\r\\n        // arrays like other data types can be passed into methods and used\\r\\n\\r\\n        for (String book : anotherStringArray) {\\r\\n            System.out.println(\\\"Title: \\\" + book);\\r\\n        }\\r\\n    }</pre>\\n<p>Passing in and returning arrays:</p>\\n<pre class=\\\"lang:java decode:true \\\">    private static String[] returningArraysFromMethods(String[] anotherStringArray) {\\r\\n\\r\\n        // arrays like other data types can be passed into methods and also returned\\r\\n\\r\\n        for (String book : anotherStringArray) {\\r\\n            // lets make all items in the array lower case\\r\\n            book = book.toLowerCase();\\r\\n\\r\\n            System.out.println(\\\"Title: \\\" + book);\\r\\n        }\\r\\n        return anotherStringArray;\\r\\n    }</pre>\\n<p>The example above takes in the array makes all values lower case and returns the array.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>2D Arrays</h3>\\n<p>Are last example in the lesson is the Two Dimensional array. So far in this lesson we have just been using strings but you can use any type. We could create arrays of type int, boolean OR another array!</p>\\n<p>The easiest way to think of a 2D array is an array of arrays. Lets have a look at creating one:</p>\\n<pre class=\\\"lang:java decode:true\\\">    private static void AnotherTwoDimensionalArray() {\\r\\n        String[][] books = {\\r\\n                {\\\"1984\\\", \\\"George Orwell\\\", \\\"£9.99\\\"},\\r\\n                {\\\"Hitchhikers Guide to the galaxy\\\", \\\"Douglas Adams\\\", \\\"£9.99\\\"}};\\r\\n\\r\\n        for (int i = 0; i &lt; books.length; i++) {\\r\\n\\r\\n            System.out.println(\\\"Title: \\\" + books[i][0] + \\\" Author: \\\" + books[i][1] + \\\" Price: \\\" + books[i][2]);\\r\\n        }\\r\\n    }</pre>\\n<p>Creating the array you will see we use two groups of square brackets instead of one to declare a 2d array:</p>\\n<pre class=\\\"lang:java decode:true\\\">String[][] books</pre>\\n<p>You will also see that when adding our values to the 2d array there are arrays inside of the main array:</p>\\n<pre class=\\\"lang:java decode:true\\\">{\\r\\n    {\\\"1984\\\", \\\"George Orwell\\\", \\\"£9.99\\\"},\\r\\n    {\\\"Hitchhikers Guide to the galaxy\\\", \\\"Douglas Adams\\\", \\\"£9.99\\\"}\\r\\n};</pre>\\n<p>Accessing values in the array is also different. We again need to use two square brackets with two numerical indexes:</p>\\n<pre class=\\\"lang:java decode:true\\\">books[x][y]</pre>\\n<p>To explain this lets use another diagram:</p>\\n<p><a ref=\\\"magnificPopup\\\" href=\\\"https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-21.55.36.png\\\"><img class=\\\"aligncenter wp-image-752 size-large\\\" src=\\\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-1024x209.png\\\" alt=\\\"Screen Shot 2014-09-23 at 21.55.36\\\" width=\\\"1024\\\" height=\\\"209\\\" srcset=\\\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-1024x209.png 1024w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-300x61.png 300w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-768x157.png 768w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-600x123.png 600w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36.png 1048w\\\" sizes=\\\"(max-width: 1024px) 100vw, 1024px\\\" /></a></p>\\n<p>As mentioned we can access a 2d with a two numerical indexes x and y in this case. The diagram shows the x index accessing the first element in the outside array and the y accessing an element in the array that is referred to by x.</p>\\n<p>Surprisingly the java spec limits the amount of dimensions you can create on an array to 255! I have yet to need anything beyond 3 and I can only imagine that to require a 255d array you would need to be a physics genius!</p>\\n<p>As always try to get the code running and play around with it. See if you can iterate through the 2d array above and access the elements within it.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3><a href=\\\"https://www.codenerve.com/beginner-java/lesson-9-reading-console-input/\\\">Next: Reading Console Input</a></h3>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the last few lessons we learn&#8217;t how to use Conditional statements and loops which we are going to build upon in this lesson. However, so far in the lesson series we have used the <a title=\"Lesson 2 – Primitive Types\" href=\"https://www.codenerve.com/beginner-java/lesson-2-primitive-types/\" target=\"_blank\" rel=\"noopener noreferrer\">basic primitive types</a> and <a title=\"Lesson 4 – Strings\" href=\"https://www.codenerve.com/beginner-java/lesson-4-strings/\" target=\"_blank\" rel=\"noopener noreferrer\">Strings</a> to hold data for us. In this lesson its time to cover a new data type called an <em>Array.</em>[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>What are Arrays?</h3>\n<p>An array is a container that holds a number of values of a particular type. Imagine we had to declare a number of book titles for example. With the variables you&#8217;ve been taught in previous lessons we could write:</p>\n<pre class=\"lang:java decode:true\">        String title1 = \"a\";\r\n        String title2 = \"b\";\r\n        String title3 = \"c\";\r\n        String title4 = \"d\";</pre>\n<p>This isn&#8217;t a bad solution if there are only 2 or 3 books but what if there&#8217;s ten or a hundred book&#8217;s? For this we are better using an array that can hold large numbers of related data.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Creating Arrays</h3>\n<p>Ok so let&#8217;s create one! First off let&#8217;s create a new class called Arrays.[/vc_column_text][vc_column_text]To create an array we use the following syntax:</p>\n<pre class=\"lang:java decode:true\">String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};</pre>\n<p>Here we have an array of four elements. The elements are of type String, there values are our book titles. To find out the length of an array we can use the .length variable contained inside an array object. For example:</p>\n<pre class=\"lang:java decode:true\">System.out.println(\"There are \" + books.length + \" books in the array\");</pre>\n<p>Will output:</p>\n<pre class=\"lang:java decode:true \">\"There are 4 books in the array\"</pre>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Accessing elements in Arrays</h3>\n<p>To access one of our titles we can use the elements numerical index. But first let me explain this a little more. To help do this I&#8217;m going to visualise the array we created above:</p>\n<p><a ref=\"magnificPopup\" href=\"https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png\"><img class=\"wp-image-717 size-full alignleft\" src=\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png\" alt=\"arrays\" width=\"694\" height=\"290\" srcset=\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png 694w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17-300x125.png 300w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-18.34.17-600x251.png 600w\" sizes=\"(max-width: 694px) 100vw, 694px\" /></a></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>An array consists of a number of elements. The number of elements depends on the number of values you inserted when you created the array. You should note that the first elements index is zero. So to access the first element in the array we would use:</p>\n<pre class=\"lang:java decode:true \">books[0]</pre>\n<p>Try it! Create our array above and use the following to print out the second element in the array:</p>\n<pre class=\"lang:java decode:true \">System.out.println(\"Our second title is: \" + books[1]);</pre>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Iterating through Arrays</h3>\n<p>So now you&#8217;re able to extract values from the array which is great. But now were going to combine our knowledge of arrays with an older lesson on <a title=\"Lesson 6 – Loops\" href=\"https://www.codenerve.com/beginner-java/lesson-6-loops/\">loops</a>. Iterating through an array is a very common pattern in programming and will be a very powerful tool to have. Lets look at the following code:</p>\n<pre class=\"lang:java decode:true \">    private static void iteratingThroughAnArray() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (int i = 0; i &lt; books.length; i++) {\r\n            System.out.println(\"Book \" + i + \" Title: \" + books[i]);\r\n        }\r\n    }</pre>\n<p>Add this method to your Arrays class and call it from your main method. You will see in the console output it will loop through every element in the array you created and print each title out.</p>\n<p>Whats interesting here is the use of the loops <em>i</em> variable. As the for loop steps through each loop, <em>i</em> is incremented. As you can see it starts at zero. Which is perfect for accessing the first element in the array. We also set the upper limit of the array to be <em>&lt; books.length. </em>This is very important! I encourage you to try to access an element in the array that doesn&#8217;t exist to see why! Try books[99] for example (Hint: You will see lots of red!).[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Reminder of the Java 5 Enhanced For loop</h3>\n<p>So now were going to remind ourselves of the enhanced for loop. We briefly covered this in the <a title=\"Lesson 6 – Loops\" href=\"https://www.codenerve.com/beginner-java/lesson-6-loops/\">loops lesson</a>. Lets have a look at another method which does the same thing as the previous example only using the enhanced loop:</p>\n<pre class=\"lang:java decode:true \">    private static void usingTheEnhancedForLoop() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (String book : books) {\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n\r\n    }</pre>\n<p>You&#8217;ll see from the output this is (almost) the same method as before. An advantage however is the i variable and the books.length are not required. This is therefore less prone to errors (like the ArrayIndexOutOfBoundsException you would have seen if you&#8217;d tried to access an element that doesn&#8217;t exist).</p>\n<p>It also has a few drawbacks. You cannot access the numerical index of the current element in the array because there is no i variable and also these loops can only go in one direction. In the previous loop you could have declared your array like:</p>\n<pre class=\"lang:java decode:true\">    private static void iteratingThroughAnArray_backwards() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (int i = books.length -1; i &gt;= 0; i--) {\r\n            System.out.println(\"Book \" + i + \" Title: \" + books[i]);\r\n        }\r\n    }</pre>\n<p>This array will print the titles in the reverse order. This is why its useful to learn both arrays depending on what you need to do with your array.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Arrays With Methods</h3>\n<p>As with all the other types you have learnt, arrays can be passed into and returned from methods.</p>\n<p>Passing in arrays:</p>\n<pre class=\"lang:java decode:true\">    private static void usingArraysInMethods(String[] anotherStringArray) {\r\n        // arrays like other data types can be passed into methods and used\r\n\r\n        for (String book : anotherStringArray) {\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n    }</pre>\n<p>Passing in and returning arrays:</p>\n<pre class=\"lang:java decode:true \">    private static String[] returningArraysFromMethods(String[] anotherStringArray) {\r\n\r\n        // arrays like other data types can be passed into methods and also returned\r\n\r\n        for (String book : anotherStringArray) {\r\n            // lets make all items in the array lower case\r\n            book = book.toLowerCase();\r\n\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n        return anotherStringArray;\r\n    }</pre>\n<p>The example above takes in the array makes all values lower case and returns the array.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>2D Arrays</h3>\n<p>Are last example in the lesson is the Two Dimensional array. So far in this lesson we have just been using strings but you can use any type. We could create arrays of type int, boolean OR another array!</p>\n<p>The easiest way to think of a 2D array is an array of arrays. Lets have a look at creating one:</p>\n<pre class=\"lang:java decode:true\">    private static void AnotherTwoDimensionalArray() {\r\n        String[][] books = {\r\n                {\"1984\", \"George Orwell\", \"£9.99\"},\r\n                {\"Hitchhikers Guide to the galaxy\", \"Douglas Adams\", \"£9.99\"}};\r\n\r\n        for (int i = 0; i &lt; books.length; i++) {\r\n\r\n            System.out.println(\"Title: \" + books[i][0] + \" Author: \" + books[i][1] + \" Price: \" + books[i][2]);\r\n        }\r\n    }</pre>\n<p>Creating the array you will see we use two groups of square brackets instead of one to declare a 2d array:</p>\n<pre class=\"lang:java decode:true\">String[][] books</pre>\n<p>You will also see that when adding our values to the 2d array there are arrays inside of the main array:</p>\n<pre class=\"lang:java decode:true\">{\r\n    {\"1984\", \"George Orwell\", \"£9.99\"},\r\n    {\"Hitchhikers Guide to the galaxy\", \"Douglas Adams\", \"£9.99\"}\r\n};</pre>\n<p>Accessing values in the array is also different. We again need to use two square brackets with two numerical indexes:</p>\n<pre class=\"lang:java decode:true\">books[x][y]</pre>\n<p>To explain this lets use another diagram:</p>\n<p><a ref=\"magnificPopup\" href=\"https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-21.55.36.png\"><img class=\"aligncenter wp-image-752 size-large\" src=\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-1024x209.png\" alt=\"Screen Shot 2014-09-23 at 21.55.36\" width=\"1024\" height=\"209\" srcset=\"/content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-1024x209.png 1024w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-300x61.png 300w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-768x157.png 768w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36-600x123.png 600w, /content/images/wordpress/2014/08/Screen-Shot-2014-09-23-at-21.55.36.png 1048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" /></a></p>\n<p>As mentioned we can access a 2d with a two numerical indexes x and y in this case. The diagram shows the x index accessing the first element in the outside array and the y accessing an element in the array that is referred to by x.</p>\n<p>Surprisingly the java spec limits the amount of dimensions you can create on an array to 255! I have yet to need anything beyond 3 and I can only imagine that to require a 255d array you would need to be a physics genius!</p>\n<p>As always try to get the code running and play around with it. See if you can iterate through the 2d array above and access the elements within it.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3><a href=\"https://www.codenerve.com/beginner-java/lesson-9-reading-console-input/\">Next: Reading Console Input</a></h3>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"679","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In the\nlast few lessons we learn’t how to use Conditional statements and loops which we\nare going to build upon in this lesson. However, so far in the lesson series we\nhave used the basic primitive types\n[https://www.codenerve.com/beginner-java/lesson-2-primitive-types/]and Strings\n[https://www.codenerve.com/beginner-java/lesson-4-strings/]to hold data for\nus. In this lesson its time to cover a new data type called an Array.\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]What are Arrays?\nAn array is a container that holds a number of values of a particular type.\nImagine we had to declare a number of book titles for example. With the\nvariables you’ve been taught in previous lessons we could write:\n\n        String title1 = \"a\";\r\n        String title2 = \"b\";\r\n        String title3 = \"c\";\r\n        String title4 = \"d\";\n\nThis isn’t a bad solution if there are only 2 or 3 books but what if there’s ten\nor a hundred book’s? For this we are better using an array that can hold large\nnumbers of related data.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nCreating Arrays\nOk so let’s create one! First off let’s create a new class called\nArrays.[/vc_column_text][vc_column_text]To create an array we use the following\nsyntax:\n\nString[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\n\nHere we have an array of four elements. The elements are of type String, there\nvalues are our book titles. To find out the length of an array we can use the\n.length variable contained inside an array object. For example:\n\nSystem.out.println(\"There are \" + books.length + \" books in the array\");\n\nWill output:\n\n\"There are 4 books in the array\"\n\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]\nAccessing elements in Arrays\nTo access one of our titles we can use the elements numerical index. But first\nlet me explain this a little more. To help do this I’m going to visualise the\narray we created above:\n\n \n[https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-18.34.17.png]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAn array consists of a number of elements. The number of elements depends on the\nnumber of values you inserted when you created the array. You should note that\nthe first elements index is zero. So to access the first element in the array we\nwould use:\n\nbooks[0]\n\nTry it! Create our array above and use the following to print out the\nsecond element in the array:\n\nSystem.out.println(\"Our second title is: \" + books[1]);\n\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]\nIterating through Arrays\nSo now you’re able to extract values from the array which is great. But now were\ngoing to combine our knowledge of arrays with an older lesson on loops\n[https://www.codenerve.com/beginner-java/lesson-6-loops/]. Iterating through an\narray is a very common pattern in programming and will be a very powerful tool\nto have. Lets look at the following code:\n\n    private static void iteratingThroughAnArray() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (int i = 0; i < books.length; i++) {\r\n            System.out.println(\"Book \" + i + \" Title: \" + books[i]);\r\n        }\r\n    }\n\nAdd this method to your Arrays class and call it from your main method. You will\nsee in the console output it will loop through every element in the array you\ncreated and print each title out.\n\nWhats interesting here is the use of the loops i variable. As the for loop steps\nthrough each loop, i is incremented. As you can see it starts at zero. Which is\nperfect for accessing the first element in the array. We also set the upper\nlimit of the array to be < books.length. This is very important! I encourage you\nto try to access an element in the array that doesn’t exist to see why! Try\nbooks[99] for example (Hint: You will see lots of\nred!).[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nReminder of the Java 5 Enhanced For loop\nSo now were going to remind ourselves of the enhanced for loop. We briefly\ncovered this in the loops lesson\n[https://www.codenerve.com/beginner-java/lesson-6-loops/]. Lets have a look at\nanother method which does the same thing as the previous example only using the\nenhanced loop:\n\n    private static void usingTheEnhancedForLoop() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (String book : books) {\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n\r\n    }\n\nYou’ll see from the output this is (almost) the same method as before.\nAn advantage however is the i variable and the books.length are not required.\nThis is therefore less prone to errors (like the ArrayIndexOutOfBoundsException\nyou would have seen if you’d tried to access an element that doesn’t exist).\n\nIt also has a few drawbacks. You cannot access the numerical index of the\ncurrent element in the array because there is no i variable and also these loops\ncan only go in one direction. In the previous loop you could have declared your\narray like:\n\n    private static void iteratingThroughAnArray_backwards() {\r\n\r\n        String[] books = {\"1984\", \"Hitchhikers Guide to the galaxy\", \"Harry Potter\", \"A tale of two cities\"};\r\n\r\n        for (int i = books.length -1; i >= 0; i--) {\r\n            System.out.println(\"Book \" + i + \" Title: \" + books[i]);\r\n        }\r\n    }\n\nThis array will print the titles in the reverse order. This is why its useful to\nlearn both arrays depending on what you need to do with your\narray.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nArrays With Methods\nAs with all the other types you have learnt, arrays can be passed into and\nreturned from methods.\n\nPassing in arrays:\n\n    private static void usingArraysInMethods(String[] anotherStringArray) {\r\n        // arrays like other data types can be passed into methods and used\r\n\r\n        for (String book : anotherStringArray) {\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n    }\n\nPassing in and returning arrays:\n\n    private static String[] returningArraysFromMethods(String[] anotherStringArray) {\r\n\r\n        // arrays like other data types can be passed into methods and also returned\r\n\r\n        for (String book : anotherStringArray) {\r\n            // lets make all items in the array lower case\r\n            book = book.toLowerCase();\r\n\r\n            System.out.println(\"Title: \" + book);\r\n        }\r\n        return anotherStringArray;\r\n    }\n\nThe example above takes in the array makes all values lower case and returns the\narray.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\n2D Arrays\nAre last example in the lesson is the Two Dimensional array. So far in this\nlesson we have just been using strings but you can use any type. We could create\narrays of type int, boolean OR another array!\n\nThe easiest way to think of a 2D array is an array of arrays. Lets have a look\nat creating one:\n\n    private static void AnotherTwoDimensionalArray() {\r\n        String[][] books = {\r\n                {\"1984\", \"George Orwell\", \"£9.99\"},\r\n                {\"Hitchhikers Guide to the galaxy\", \"Douglas Adams\", \"£9.99\"}};\r\n\r\n        for (int i = 0; i < books.length; i++) {\r\n\r\n            System.out.println(\"Title: \" + books[i][0] + \" Author: \" + books[i][1] + \" Price: \" + books[i][2]);\r\n        }\r\n    }\n\nCreating the array you will see we use two groups of square brackets instead of\none to declare a 2d array:\n\nString[][] books\n\nYou will also see that when adding our values to the 2d array there are arrays\ninside of the main array:\n\n{\r\n    {\"1984\", \"George Orwell\", \"£9.99\"},\r\n    {\"Hitchhikers Guide to the galaxy\", \"Douglas Adams\", \"£9.99\"}\r\n};\n\nAccessing values in the array is also different. We again need to use two square\nbrackets with two numerical indexes:\n\nbooks[x][y]\n\nTo explain this lets use another diagram:\n\n \n[https://www.ni-geeks.com/wp-content/uploads/2014/08/Screen-Shot-2014-09-23-at-21.55.36.png]\n\nAs mentioned we can access a 2d with a two numerical indexes x and y in this\ncase. The diagram shows the x index accessing the first element in the outside\narray and the y accessing an element in the array that is referred to by x.\n\nSurprisingly the java spec limits the amount of dimensions you can create on an\narray to 255! I have yet to need anything beyond 3 and I can only imagine that\nto require a 255d array you would need to be a physics genius!\n\nAs always try to get the code running and play around with it. See if you can\niterate through the 2d array above and access the elements within\nit.[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nNext: Reading Console Input\n[https://www.codenerve.com/beginner-java/lesson-9-reading-console-input/]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2019/04/array-bright-cloth-5872.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2019-04-04 18:20:27","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:40","updated_by":"1","published_at":"2019-04-04 18:20:27","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aed8","uuid":"fdd39578-2a02-44c8-bc61-2b57820ad759","title":"Lesson 9 - Reading console input and import statements","slug":"lesson-9-reading-console-input","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]\\n<p>Ok, In this short double lesson we are going to learn how to read input into our program from the console and use some new features from another java package using an import statement.</p>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h3>Reading basic input</h3>\\n<p>The first thing we are going to look at is reading in a string from the console view in our IDE using a Buffered reader. This will allow us to interact with the program during it&#8217;s execution.</p>\\n<p>First create a new class called &#8216;ReadingInput&#8217; with a main method.</p>\\n<p>Then, within the main method copy the following:</p>\\n<pre class=\\\"lang:java decode:true\\\">BufferedReader br = new BufferedReader(new InputStreamReader(System.in));</pre>\\n<p>You will notice some compilation errors, ignore these for a moment. Next, paste the following code underneath:</p>\\n<pre class=\\\"lang:java decode:true\\\">        System.out.print(\\\"Enter a string: \\\");\\r\\n        String s = br.readLine();\\r\\n        System.out.println(\\\"You entered \\\" + s);</pre>\\n<p>So what about all those nasty errors? For that we need to learn the concept of Imports.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Imports</h3>\\n<p>Up until now, everything we have learn&#8217;t has been using a collection of classes in a package called java.lang.</p>\\n[/vc_column_text][us_message type=&#8221;info&#8221;]Forgot what a package is?</p>\\n<p>A package is a directory to hold and organise java classes (java files). Classes can be grouped together in packages in some sort of logical order.<br />\\n[/us_message][vc_column_text]\\n<p>An example of something we have used from the java.lang package is printing to our console:</p>\\n<pre class=\\\"lang:java decode:true\\\"> \\r\\nSystem.out.println();</pre>\\n<p>However, the package <em>java.lang</em> is automatically imported into each java file(or class) that we create so we haven&#8217;t had to use imports yet.</p>\\n<p>The <em>BufferedReader</em> and the <em>InputStreamReader</em> used in the example above are in another package called <em>java.io </em>(IO = Input / Output). This package contains classes for reading and writing to and from a number of different sources such as files, network connections and you guessed it user input.</p>\\n<p>So for our example to work we will need to use the following import:</p>\\n<pre class=\\\"lang:java decode:true \\\">import java.io.*;</pre>\\n<p>Imports are written between the package of the class we are in and the creation of the class itself. So the example so far looks like:</p>\\n<pre class=\\\"striped:true lang:java decode:true\\\">package com.codenerve.beginner.lesson9;\\r\\n\\r\\nimport java.io.*;\\r\\n\\r\\npublic class ReadingInput {\\r\\n\\r\\n    public static void main(String[] args)  throws IOException {\\r\\n\\r\\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\\r\\n\\r\\n        System.out.print(\\\"Enter a string: \\\");\\r\\n        String s = br.readLine();\\r\\n        System.out.println(\\\"You entered \\\" + s);\\r\\n    }\\r\\n}</pre>\\n<p>Once the import is declared we are able to access all the features of the IO package.</p>\\n<p>We will cover imports in more detail through the lesson series but for now just know that there are lots of packages which contain many classes that we can re-use depending on our needs. These are all part of the JRE.</p>\\n<p><em><span style=\\\"color: #999999;\\\">If you would like to start looking at other packages check out the official <a href=\\\"http://docs.oracle.com/javase/7/docs/api/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">java docs</a>.</span></em></p>\\n<p>You&#8217;ll also notice that I have added <em>throws IOException</em> to the main method signature. This is simply saying that if the user inputs some unknown data, raise an error and close the program. Exceptions will be covered extensively in the intermediate tutorials.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h5>Ok lets continue</h5>\\n<p>Wether using Eclipse or IntelliJ have a look at the short video clips below on how to run the code and enter some input:[/vc_column_text][vc_tta_tabs][vc_tta_section active=&#8221;1&#8243; title=&#8221;Eclipse&#8221;][vc_video link=&#8221;https://www.youtube.com/watch?v=ltvamMqTPrg&amp;hd=1&#8243;][/vc_tta_section][vc_tta_section title=&#8221;IntelliJ&#8221;][vc_video link=&#8221;https://www.youtube.com/watch?v=r3wo7bc-bmU&amp;hd=1&#8243;][/vc_tta_section][/vc_tta_tabs][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>So what are these new classes doing?</h3>\\n<h6>System.in</h6>\\n<p>This is the standard input stream for any incoming data. This stream by default is open and ready to read input once declared. The most common use of this stream is to capture keyboard input or user input.</p>\\n<h6>InputStreamReader</h6>\\n<p>An InputStreamReader converts byte streams to character streams.</p>\\n<h6>BufferedReader</h6>\\n<p>Lastly, the BufferedRedaer reads text from a character-input stream (in out case an InputStreamReader), buffering characters so as to provide for the efficient reading of characters.</p>\\n<p>readLine() simply reads a line of text.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Another example of reading input</h3>\\n<p>Lets take another example for reading in a string and converting it to an integer. Copy the following code to your example. You can replace the code under the buffered reader or just add it below the previous example:</p>\\n<pre class=\\\"lang:java decode:true \\\">        System.out.print(\\\"Enter an Integer: \\\");\\r\\n        int i = Integer.parseInt(br.readLine());\\r\\n        System.out.println(\\\"You entered \\\" + i);</pre>\\n<p>This time when running the example enter a number. You will see that the input is converted to an Integer using the parseInt method which is inside the Integer class (The Integer class is part of the java.lang package so no need for any imports).</p>\\n<p>Although we are not covering exceptions until the next lesson series I would also encourage you to run this example and input a string which is not a number. You will see an example of a possible &#8216;Exception&#8217;.</p>\\n<p>For more examples see my <a title=\\\"Beginner Java Source code\\\" href=\\\"https://www.codenerve.com/product/beginner-java-source-code/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">course downloads</a>[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3><a href=\\\"https://www.codenerve.com/beginner-java/lesson-10-date-time-api/\\\">Next up: Date &amp; Time library</a></h3>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]\n<p>Ok, In this short double lesson we are going to learn how to read input into our program from the console and use some new features from another java package using an import statement.</p>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h3>Reading basic input</h3>\n<p>The first thing we are going to look at is reading in a string from the console view in our IDE using a Buffered reader. This will allow us to interact with the program during it&#8217;s execution.</p>\n<p>First create a new class called &#8216;ReadingInput&#8217; with a main method.</p>\n<p>Then, within the main method copy the following:</p>\n<pre class=\"lang:java decode:true\">BufferedReader br = new BufferedReader(new InputStreamReader(System.in));</pre>\n<p>You will notice some compilation errors, ignore these for a moment. Next, paste the following code underneath:</p>\n<pre class=\"lang:java decode:true\">        System.out.print(\"Enter a string: \");\r\n        String s = br.readLine();\r\n        System.out.println(\"You entered \" + s);</pre>\n<p>So what about all those nasty errors? For that we need to learn the concept of Imports.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Imports</h3>\n<p>Up until now, everything we have learn&#8217;t has been using a collection of classes in a package called java.lang.</p>\n[/vc_column_text][us_message type=&#8221;info&#8221;]Forgot what a package is?</p>\n<p>A package is a directory to hold and organise java classes (java files). Classes can be grouped together in packages in some sort of logical order.<br />\n[/us_message][vc_column_text]\n<p>An example of something we have used from the java.lang package is printing to our console:</p>\n<pre class=\"lang:java decode:true\"> \r\nSystem.out.println();</pre>\n<p>However, the package <em>java.lang</em> is automatically imported into each java file(or class) that we create so we haven&#8217;t had to use imports yet.</p>\n<p>The <em>BufferedReader</em> and the <em>InputStreamReader</em> used in the example above are in another package called <em>java.io </em>(IO = Input / Output). This package contains classes for reading and writing to and from a number of different sources such as files, network connections and you guessed it user input.</p>\n<p>So for our example to work we will need to use the following import:</p>\n<pre class=\"lang:java decode:true \">import java.io.*;</pre>\n<p>Imports are written between the package of the class we are in and the creation of the class itself. So the example so far looks like:</p>\n<pre class=\"striped:true lang:java decode:true\">package com.codenerve.beginner.lesson9;\r\n\r\nimport java.io.*;\r\n\r\npublic class ReadingInput {\r\n\r\n    public static void main(String[] args)  throws IOException {\r\n\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\r\n        System.out.print(\"Enter a string: \");\r\n        String s = br.readLine();\r\n        System.out.println(\"You entered \" + s);\r\n    }\r\n}</pre>\n<p>Once the import is declared we are able to access all the features of the IO package.</p>\n<p>We will cover imports in more detail through the lesson series but for now just know that there are lots of packages which contain many classes that we can re-use depending on our needs. These are all part of the JRE.</p>\n<p><em><span style=\"color: #999999;\">If you would like to start looking at other packages check out the official <a href=\"http://docs.oracle.com/javase/7/docs/api/\" target=\"_blank\" rel=\"noopener noreferrer\">java docs</a>.</span></em></p>\n<p>You&#8217;ll also notice that I have added <em>throws IOException</em> to the main method signature. This is simply saying that if the user inputs some unknown data, raise an error and close the program. Exceptions will be covered extensively in the intermediate tutorials.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h5>Ok lets continue</h5>\n<p>Wether using Eclipse or IntelliJ have a look at the short video clips below on how to run the code and enter some input:[/vc_column_text][vc_tta_tabs][vc_tta_section active=&#8221;1&#8243; title=&#8221;Eclipse&#8221;][vc_video link=&#8221;https://www.youtube.com/watch?v=ltvamMqTPrg&amp;hd=1&#8243;][/vc_tta_section][vc_tta_section title=&#8221;IntelliJ&#8221;][vc_video link=&#8221;https://www.youtube.com/watch?v=r3wo7bc-bmU&amp;hd=1&#8243;][/vc_tta_section][/vc_tta_tabs][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>So what are these new classes doing?</h3>\n<h6>System.in</h6>\n<p>This is the standard input stream for any incoming data. This stream by default is open and ready to read input once declared. The most common use of this stream is to capture keyboard input or user input.</p>\n<h6>InputStreamReader</h6>\n<p>An InputStreamReader converts byte streams to character streams.</p>\n<h6>BufferedReader</h6>\n<p>Lastly, the BufferedRedaer reads text from a character-input stream (in out case an InputStreamReader), buffering characters so as to provide for the efficient reading of characters.</p>\n<p>readLine() simply reads a line of text.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Another example of reading input</h3>\n<p>Lets take another example for reading in a string and converting it to an integer. Copy the following code to your example. You can replace the code under the buffered reader or just add it below the previous example:</p>\n<pre class=\"lang:java decode:true \">        System.out.print(\"Enter an Integer: \");\r\n        int i = Integer.parseInt(br.readLine());\r\n        System.out.println(\"You entered \" + i);</pre>\n<p>This time when running the example enter a number. You will see that the input is converted to an Integer using the parseInt method which is inside the Integer class (The Integer class is part of the java.lang package so no need for any imports).</p>\n<p>Although we are not covering exceptions until the next lesson series I would also encourage you to run this example and input a string which is not a number. You will see an example of a possible &#8216;Exception&#8217;.</p>\n<p>For more examples see my <a title=\"Beginner Java Source code\" href=\"https://www.codenerve.com/product/beginner-java-source-code/\" target=\"_blank\" rel=\"noopener noreferrer\">course downloads</a>[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3><a href=\"https://www.codenerve.com/beginner-java/lesson-10-date-time-api/\">Next up: Date &amp; Time library</a></h3>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"782","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In this\nshort double lesson we are going to learn how to read input into our program\nfrom the console and use some new features from another java package using an\nimport statement.\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nshow_line=”1″\nicon=”fas|code”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nReading basic input\nThe first thing we are going to look at is reading in a string from the console\nview in our IDE using a Buffered reader. This will allow us to interact with the\nprogram during it’s execution.\n\nFirst create a new class called ‘ReadingInput’ with a main method.\n\nThen, within the main method copy the following:\n\nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\nYou will notice some compilation errors, ignore these for a moment. Next, paste\nthe following code underneath:\n\n        System.out.print(\"Enter a string: \");\r\n        String s = br.readLine();\r\n        System.out.println(\"You entered \" + s);\n\nSo what about all those nasty errors? For that we need to learn the concept of\nImports.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nImports\nUp until now, everything we have learn’t has been using a collection of classes\nin a package called java.lang.\n\n[/vc_column_text][us_message type=”info”]Forgot what a package is?\n\nA package is a directory to hold and organise java classes (java files). Classes\ncan be grouped together in packages in some sort of logical order.\n[/us_message][vc_column_text]\n\nAn example of something we have used from the java.lang package is printing to\nour console:\n\n \r\nSystem.out.println();\n\nHowever, the package java.langis automatically imported into each java file(or\nclass) that we create so we haven’t had to use imports yet.\n\nThe BufferedReader and the InputStreamReader used in the example above are in\nanother package called java.io (IO = Input / Output). This package contains\nclasses for reading and writing to and from a number of different sources such\nas files, network connections and you guessed it user input.\n\nSo for our example to work we will need to use the following import:\n\nimport java.io.*;\n\nImports are written between the package of the class we are in and the creation\nof the class itself. So the example so far looks like:\n\npackage com.codenerve.beginner.lesson9;\r\n\r\nimport java.io.*;\r\n\r\npublic class ReadingInput {\r\n\r\n    public static void main(String[] args)  throws IOException {\r\n\r\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\r\n        System.out.print(\"Enter a string: \");\r\n        String s = br.readLine();\r\n        System.out.println(\"You entered \" + s);\r\n    }\r\n}\n\nOnce the import is declared we are able to access all the features of the IO\npackage.\n\nWe will cover imports in more detail through the lesson series but for now just\nknow that there are lots of packages which contain many classes that we can\nre-use depending on our needs. These are all part of the JRE.\n\nIf you would like to start looking at other packages check out the official \njava\ndocs [http://docs.oracle.com/javase/7/docs/api/].\n\nYou’ll also notice that I have added throws IOException to the main method\nsignature. This is simply saying that if the user inputs some unknown data,\nraise an error and close the program. Exceptions will be covered extensively in\nthe intermediate tutorials.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nOk lets continue\nWether using Eclipse or IntelliJ have a look at the short video clips below on\nhow to run the code and enter some\ninput:[/vc_column_text][vc_tta_tabs][vc_tta_section active=”1″\ntitle=”Eclipse”][vc_video\nlink=”https://www.youtube.com/watch?v=ltvamMqTPrg&hd=1″][/vc_tta_section][vc_tta_section\ntitle=”IntelliJ”][vc_video\nlink=”https://www.youtube.com/watch?v=r3wo7bc-bmU&hd=1″][/vc_tta_section][/vc_tta_tabs][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nSo what are these new classes doing?\nSystem.in\nThis is the standard input stream for any incoming data. This stream by default\nis open and ready to read input once declared. The most common use of\nthis stream is to capture keyboard input or user input.\n\nInputStreamReader\nAn InputStreamReader converts byte streams to character streams.\n\nBufferedReader\nLastly, the BufferedRedaer reads text from a character-input stream (in out case\nan InputStreamReader), buffering characters so as to provide for the efficient\nreading of characters.\n\nreadLine() simply reads a line of text.[/vc_column_text][us_separator\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nAnother example of reading input\nLets take another example for reading in a string and converting it to an\ninteger. Copy the following code to your example. You can replace the code under\nthe buffered reader or just add it below the previous example:\n\n        System.out.print(\"Enter an Integer: \");\r\n        int i = Integer.parseInt(br.readLine());\r\n        System.out.println(\"You entered \" + i);\n\nThis time when running the example enter a number. You will see that the input\nis converted to an Integer using the parseInt method which is inside the Integer\nclass (The Integer class is part of the java.lang package so no need for any\nimports).\n\nAlthough we are not covering exceptions until the next lesson series I would\nalso encourage you to run this example and input a string which is not a number.\nYou will see an example of a possible ‘Exception’.\n\nFor more examples see my course downloads\n[https://www.codenerve.com/product/beginner-java-source-code/]\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]\n\nNext up: Date & Time library\n[https://www.codenerve.com/beginner-java/lesson-10-date-time-api/]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided”][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2014/10/console-controller-gamer-21067.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2019-04-06 22:36:30","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:34","updated_by":"1","published_at":"2019-04-06 22:36:30","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aeda","uuid":"38b017f0-fa80-4157-815a-78281410d520","title":"Lesson 10 - New Date & Time Library","slug":"lesson-10-date-time-api","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]\\n<p>Ok, In this lesson we will cover the Java date &amp; time library. We can use this to create, edit and manipulate dates in our programs. This is something which no data type we have learnt so far is particularly good at. We will also briefly cover the old Date and time classes and why these were upgraded in Java 8.</p>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\\\"/content/images/wordpress/2016/01/StarterProject.zip\\\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;error&#8221;]\\nPlease note that the Date and Time library covered in this lesson is new to java 8. Therefore you will need to be using a minimum version of the java 8 JDK or JRE. If you have an older version installed please upgrade <a href=\\\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">here</a>. For info on how to do this please revisit my <a href=\\\"https://www.codenerve.com/beginner-java/setting-up/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">setting up guide</a></p>\\n[/us_message][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h4>The old date library</h4>\\n<p>Up to and including Java 7 there was still the ability to create Date and time functionality mainly through the <em>java.util.Date</em> and the <em>java.util.Calendar </em>classes. These classes where poorly written and became even more difficult to use from version to version. The main issues with the old Date and Time classes are:</p>\\n<ul>\\n<li>Poor naming &#8211; a Date was actually a timestamp and a Calendar was actually a mixture of date&#8217;s and times.</li>\\n<li>Limited ability to support different timezones</li>\\n<li>Concurrency issues &#8211; we will cover this subject in the advanced course</li>\\n<li>Months starting with zero instead of 1, Dates must have a year etc</li>\\n<li>Inoperability with other &#8216;Date&#8217; type classes</li>\\n</ul>\\n<p>All in all using the standard Date classes in java up until java 8 was extremely troublesome. For this reason many developers choose to use another library called <em>Joda time</em> instead of the default classes.</p>\\n<p>Thankfully <em>Joda&#8217;s</em> approach has now been taken onboard and a new Date and Time library has been created in java 8.</p>\\n[/vc_column_text][us_message type=&#8221;info&#8221;]What is a library?</p>\\n<p>A library is a collection of prewritten classes which can be specified and used by a programmer when developing a program<br />\\n[/us_message][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]Ok, lets start to learn the main classes of the new Date and Time Library.</p>\\n<h4>Clock</h4>\\n<p>The easiest way to get the time &#8216;right now&#8217; is with the Clock class.</p>\\n<pre class=\\\"lang:java decode:true\\\">Clock clock = Clock.systemUTC();</pre>\\n<p>Notice that we don&#8217;t use the <em>new </em>keyword. This is because this class is known as <em>abstract </em>which means we cant create (or instantiate) it. Instead we use special methods which return copies of Clocks to us.</p>\\n<p>systemUTC() is a method which returns the date and time &#8216;right now&#8217; using the UTC timezone.</p>\\n<p>UTC &#8211; the time standard used commonly across the world. The world&#8217;s timing centers have agreed to keep their time scales closely synchronized &#8211; or coordinated &#8211; therefore the name Coordinated Universal Time.</p>\\n<p>To use the default time zone on the machine the code is being run on we can also use systemDefaultZone().</p>\\n<pre class=\\\"lang:java decode:true\\\">Clock clock2 = Clock.systemDefaultZone();</pre>\\n<p>It is important to realise that this has a dependency to the timezone the machine running your code is set to. Java recommends that instead you explicitly state which timezone you want to be in. This way the behaviour of your code will not change if you&#8217;re running the program in different locations of the world.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4>LocalDateTime</h4>\\n<p>The LocalDateTime class is a time without a timezone. This class is simply a way to describe a date and does not represent an actual exact time anywhere. We use it to describe a date and time such as a birthday or anniversaries.</p>\\n<p>There are many ways to create these. Here are some examples:</p>\\n<pre class=\\\"lang:java decode:true \\\">LocalDateTime localDateTime = LocalDateTime.now();\\r\\n\\r\\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50);\\r\\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51);\\r\\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51, 19000);\\r\\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50);\\r\\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51);\\r\\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51, 19000);\\r\\nlocalDateTime = LocalDateTime.of( Year.now().getValue(), Month.FEBRUARY, DayOfWeek.SATURDAY.getValue(), 1, 1, 1 );</pre>\\n<p>You&#8217;ll notice that again we do not use the new keyword. Instead we use special helper methods to create the LocalDateTime for us. You&#8217;ll also notice in the last few examples that we have other helper classes/methods we can use to create Years, Months and DayOfWeeks for us.</p>\\n<p>For a full list of the parameters we pass to the of method above practice creating LocalDateTimes in your IDE with auto complete and/or use Oracle&#8217;s official <a href=\\\"https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#of-int-int-int-int-int-\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">documentation</a>[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4>LocalDate</h4>\\n<p>LocalDate is similar to LocalDateTime but with out the time or timezone. To create this we have various methods we can use on the LocalDate class:</p>\\n<pre class=\\\"lang:java decode:true\\\">LocalDate date = LocalDate.now();\\r\\nLocalDate ofDate = LocalDate.of(2014,1,1);\\r\\nLocalDate epochDate = LocalDate.ofEpochDay(0l);</pre>\\n<p>Again this can be used for things like birthdays and other dates that do not require times or timezones.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4>LocalTime</h4>\\n<p>Conversely, LocalTime is similar to LocalDateTime but with out the Date or timezone added. To create this we have various methods we can use on the LocalTime class:</p>\\n<pre class=\\\"lang:java decode:true \\\">LocalTime timeNow = LocalTime.now();\\r\\nLocalTime timeOf = LocalTime.of(12, 00);</pre>\\n<p>All of the above classes (LocalDateTime, LocalDate and LocalTime) cannot be used to find an exact point in time due to there lack of timezone functionality. So these are just used to represent date and times in a human readable way.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h4>Instant</h4>\\n<p>To represent an exact point in time we can use the Instant class:</p>\\n<pre class=\\\"lang:java decode:true \\\">Instant instant = Instant.now();</pre>\\n<p>You can also convert Strings into Instants:</p>\\n<pre class=\\\"lang:java decode:true \\\">instant = Instant.parse(\\\"2015-11-20T11:10:59Z\\\");</pre>\\n<p>&nbsp;</p>\\n<p>&nbsp;</p>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]As always play around with the examples and try to use them in your own basic program.[/vc_column_text][vc_column_text]\\n<h4>Next: Primitive types vs wrapper classes</h4>\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221; in_same_term=&#8221;1&#8243;][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]\n<p>Ok, In this lesson we will cover the Java date &amp; time library. We can use this to create, edit and manipulate dates in our programs. This is something which no data type we have learnt so far is particularly good at. We will also briefly cover the old Date and time classes and why these were upgraded in Java 8.</p>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_iconbox icon=&#8221;fas|code&#8221; size=&#8221;48px&#8221; iconpos=&#8221;left&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can use the basic <a href=\"/content/images/wordpress/2016/01/StarterProject.zip\">starter project</a> and follow the steps to compile the code examples for the lesson.[/us_iconbox][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][us_message type=&#8221;error&#8221;]\nPlease note that the Date and Time library covered in this lesson is new to java 8. Therefore you will need to be using a minimum version of the java 8 JDK or JRE. If you have an older version installed please upgrade <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. For info on how to do this please revisit my <a href=\"https://www.codenerve.com/beginner-java/setting-up/\" target=\"_blank\" rel=\"noopener noreferrer\">setting up guide</a></p>\n[/us_message][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h4>The old date library</h4>\n<p>Up to and including Java 7 there was still the ability to create Date and time functionality mainly through the <em>java.util.Date</em> and the <em>java.util.Calendar </em>classes. These classes where poorly written and became even more difficult to use from version to version. The main issues with the old Date and Time classes are:</p>\n<ul>\n<li>Poor naming &#8211; a Date was actually a timestamp and a Calendar was actually a mixture of date&#8217;s and times.</li>\n<li>Limited ability to support different timezones</li>\n<li>Concurrency issues &#8211; we will cover this subject in the advanced course</li>\n<li>Months starting with zero instead of 1, Dates must have a year etc</li>\n<li>Inoperability with other &#8216;Date&#8217; type classes</li>\n</ul>\n<p>All in all using the standard Date classes in java up until java 8 was extremely troublesome. For this reason many developers choose to use another library called <em>Joda time</em> instead of the default classes.</p>\n<p>Thankfully <em>Joda&#8217;s</em> approach has now been taken onboard and a new Date and Time library has been created in java 8.</p>\n[/vc_column_text][us_message type=&#8221;info&#8221;]What is a library?</p>\n<p>A library is a collection of prewritten classes which can be specified and used by a programmer when developing a program<br />\n[/us_message][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]Ok, lets start to learn the main classes of the new Date and Time Library.</p>\n<h4>Clock</h4>\n<p>The easiest way to get the time &#8216;right now&#8217; is with the Clock class.</p>\n<pre class=\"lang:java decode:true\">Clock clock = Clock.systemUTC();</pre>\n<p>Notice that we don&#8217;t use the <em>new </em>keyword. This is because this class is known as <em>abstract </em>which means we cant create (or instantiate) it. Instead we use special methods which return copies of Clocks to us.</p>\n<p>systemUTC() is a method which returns the date and time &#8216;right now&#8217; using the UTC timezone.</p>\n<p>UTC &#8211; the time standard used commonly across the world. The world&#8217;s timing centers have agreed to keep their time scales closely synchronized &#8211; or coordinated &#8211; therefore the name Coordinated Universal Time.</p>\n<p>To use the default time zone on the machine the code is being run on we can also use systemDefaultZone().</p>\n<pre class=\"lang:java decode:true\">Clock clock2 = Clock.systemDefaultZone();</pre>\n<p>It is important to realise that this has a dependency to the timezone the machine running your code is set to. Java recommends that instead you explicitly state which timezone you want to be in. This way the behaviour of your code will not change if you&#8217;re running the program in different locations of the world.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4>LocalDateTime</h4>\n<p>The LocalDateTime class is a time without a timezone. This class is simply a way to describe a date and does not represent an actual exact time anywhere. We use it to describe a date and time such as a birthday or anniversaries.</p>\n<p>There are many ways to create these. Here are some examples:</p>\n<pre class=\"lang:java decode:true \">LocalDateTime localDateTime = LocalDateTime.now();\r\n\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50);\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51);\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51, 19000);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51, 19000);\r\nlocalDateTime = LocalDateTime.of( Year.now().getValue(), Month.FEBRUARY, DayOfWeek.SATURDAY.getValue(), 1, 1, 1 );</pre>\n<p>You&#8217;ll notice that again we do not use the new keyword. Instead we use special helper methods to create the LocalDateTime for us. You&#8217;ll also notice in the last few examples that we have other helper classes/methods we can use to create Years, Months and DayOfWeeks for us.</p>\n<p>For a full list of the parameters we pass to the of method above practice creating LocalDateTimes in your IDE with auto complete and/or use Oracle&#8217;s official <a href=\"https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#of-int-int-int-int-int-\" target=\"_blank\" rel=\"noopener noreferrer\">documentation</a>[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4>LocalDate</h4>\n<p>LocalDate is similar to LocalDateTime but with out the time or timezone. To create this we have various methods we can use on the LocalDate class:</p>\n<pre class=\"lang:java decode:true\">LocalDate date = LocalDate.now();\r\nLocalDate ofDate = LocalDate.of(2014,1,1);\r\nLocalDate epochDate = LocalDate.ofEpochDay(0l);</pre>\n<p>Again this can be used for things like birthdays and other dates that do not require times or timezones.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4>LocalTime</h4>\n<p>Conversely, LocalTime is similar to LocalDateTime but with out the Date or timezone added. To create this we have various methods we can use on the LocalTime class:</p>\n<pre class=\"lang:java decode:true \">LocalTime timeNow = LocalTime.now();\r\nLocalTime timeOf = LocalTime.of(12, 00);</pre>\n<p>All of the above classes (LocalDateTime, LocalDate and LocalTime) cannot be used to find an exact point in time due to there lack of timezone functionality. So these are just used to represent date and times in a human readable way.[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h4>Instant</h4>\n<p>To represent an exact point in time we can use the Instant class:</p>\n<pre class=\"lang:java decode:true \">Instant instant = Instant.now();</pre>\n<p>You can also convert Strings into Instants:</p>\n<pre class=\"lang:java decode:true \">instant = Instant.parse(\"2015-11-20T11:10:59Z\");</pre>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]As always play around with the examples and try to use them in your own basic program.[/vc_column_text][vc_column_text]\n<h4>Next: Primitive types vs wrapper classes</h4>\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation layout=&#8221;sided&#8221; in_same_term=&#8221;1&#8243;][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"847","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][vc_column_text]Ok, In this\nlesson we will cover the Java date & time library. We can use this to create,\nedit and manipulate dates in our programs. This is something which no data type\nwe have learnt so far is particularly good at. We will also briefly cover the\nold Date and time classes and why these were upgraded in Java 8.\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][us_iconbox icon=”fas|code” size=”48px” iconpos=”left”\ntitle=”Downloads” alignment=”left”]To get started you can use the basic starter\nproject [/content/images/wordpress/2016/01/StarterProject.zip] and follow the\nsteps to compile the code examples for the lesson.[/us_iconbox][us_separator\nshow_line=”1″ icon=”fas|code”][us_message type=”error”]\nPlease note that the Date and Time library covered in this lesson is new to java\n8. Therefore you will need to be using a minimum version of the java 8 JDK or\nJRE. If you have an older version installed please upgrade here\n[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html]\n. For info on how to do this please revisit my setting up guide\n[https://www.codenerve.com/beginner-java/setting-up/]\n\n[/us_message][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nThe old date library\nUp to and including Java 7 there was still the ability to create Date and time\nfunctionality mainly through thejava.util.Dateand thejava.util.Calendar classes.\nThese classes where poorly written and became even more difficult to use from\nversion to version. The main issues with the old Date and Time classes are:\n\n * Poor naming – a Date was actually a timestamp and a Calendar was actually a\n   mixture of date’s and times.\n * Limited ability to support different timezones\n * Concurrency issues – we will cover this subject in the advanced course\n * Months starting with zero instead of 1, Dates must have a year etc\n * Inoperability with other ‘Date’ type classes\n\nAll in all using the standard Date classes in java up until java 8 was extremely\ntroublesome. For this reason many developers choose to use another library\ncalled Joda time instead of the default classes.\n\nThankfully Joda’s approach has now been taken onboard and a new Date and Time\nlibrary has been created in java 8.\n\n[/vc_column_text][us_message type=”info”]What is a library?\n\nA library is a collection of prewritten classes which can be specified and used\nby a programmer when developing a program\n[/us_message][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]Ok,\nlets start to learn the main classes of the new Date and Time Library.\n\nClock\nThe easiest way to get the time ‘right now’ is with the Clock class.\n\nClock clock = Clock.systemUTC();\n\nNotice that we don’t use the newkeyword. This is because this class is known as \nabstractwhich means we cant create (or instantiate) it. Instead we use special\nmethods which return copies of Clocks to us.\n\nsystemUTC() is a method which returns the date and time ‘right now’ using the\nUTC timezone.\n\nUTC – the time standard used commonly across the world. The world’s timing\ncenters have agreed to keep their time scales closely synchronized – or\ncoordinated – therefore the name Coordinated Universal Time.\n\nTo use the default time zone on the machine the code is being run on we can also\nuse systemDefaultZone().\n\nClock clock2 = Clock.systemDefaultZone();\n\nIt is important to realise that this has a dependency to the timezone the\nmachine running your code is set to. Java recommends that instead you explicitly\nstate which timezone you want to be in. This way the behaviour of your code will\nnot change if you’re running the program in different locations of the\nworld.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nLocalDateTime\nThe LocalDateTime class is a time without a timezone. This class is simply a way\nto describe a date and does not represent an actual exact time anywhere. We use\nit to describe a date and time such as a birthday or anniversaries.\n\nThere are many ways to create these. Here are some examples:\n\nLocalDateTime localDateTime = LocalDateTime.now();\r\n\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50);\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51);\r\nlocalDateTime = LocalDateTime.of(2014, 12, 25, 12, 50, 51, 19000);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51);\r\nlocalDateTime = LocalDateTime.of(2014, Month.DECEMBER, 25, 12, 50, 51, 19000);\r\nlocalDateTime = LocalDateTime.of( Year.now().getValue(), Month.FEBRUARY, DayOfWeek.SATURDAY.getValue(), 1, 1, 1 );\n\nYou’ll notice that again we do not use the new keyword. Instead we use special\nhelper methods to create the LocalDateTime for us. You’ll also notice in the\nlast few examples that we have other helper classes/methods we can use to create\nYears, Months and DayOfWeeks for us.\n\nFor a full list of the parameters we pass to the of method above practice\ncreating LocalDateTimes in your IDE with auto complete and/or use Oracle’s\nofficial documentation\n[https://docs.oracle.com/javase/8/docs/api/java/time/LocalDateTime.html#of-int-int-int-int-int-]\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]\n\nLocalDate\nLocalDate is similar to LocalDateTime but with out the time or timezone. To\ncreate this we have various methods we can use on the LocalDate class:\n\nLocalDate date = LocalDate.now();\r\nLocalDate ofDate = LocalDate.of(2014,1,1);\r\nLocalDate epochDate = LocalDate.ofEpochDay(0l);\n\nAgain this can be used for things like birthdays and other dates that do not\nrequire times or timezones.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nLocalTime\nConversely, LocalTime is similar to LocalDateTime but with out the Date or\ntimezone added. To create this we have various methods we can use on the\nLocalTime class:\n\nLocalTime timeNow = LocalTime.now();\r\nLocalTime timeOf = LocalTime.of(12, 00);\n\nAll of the above classes (LocalDateTime, LocalDate and LocalTime) cannot be used\nto find an exact point in time due to there lack of timezone functionality. So\nthese are just used to represent date and times in a human readable\nway.[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]\n\nInstant\nTo represent an exact point in time we can use the Instant class:\n\nInstant instant = Instant.now();\n\nYou can also convert Strings into Instants:\n\ninstant = Instant.parse(\"2015-11-20T11:10:59Z\");\n\n\n\n\n\n[/vc_column_text][us_separator show_line=”1″ icon=”fas|code”][vc_column_text]As\nalways play around with the examples and try to use them in your own basic\nprogram.[/vc_column_text][vc_column_text]Next: Primitive types vs wrapper\nclasses\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][us_post_navigation\nlayout=”sided” in_same_term=”1″][/vc_column][/vc_row]","feature_image":"/content/images/wordpress/2019/04/background-black-and-white-blackboard-745365.jpg","featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2019-04-07 21:02:25","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:19:30","updated_by":"1","published_at":"2019-04-07 21:02:25","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aedb","uuid":"fd5dc2eb-1be5-408f-a0a8-f8fef1203622","title":"Spring Security - Basic Login Form","slug":"spring-security-basic-login-form","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}],[\"soft-return\",\"\",{}]],\"cards\":[[\"bookmark\",{\"url\":\"https://github.com/codenerve-com/spring-security\",\"metadata\":{\"url\":\"https://github.com/codenerve-com/spring-security\",\"title\":\"codenerve-com/spring-security\",\"description\":\"An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.\",\"author\":\"codenerve-com\",\"publisher\":\"GitHub\",\"thumbnail\":\"https://avatars3.githubusercontent.com/u/58404900?s=400&v=4\",\"icon\":\"https://github.githubassets.com/favicons/favicon.svg\"}}],[\"hr\",{}],[\"hr\",{}],[\"code\",{\"code\":\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<project xmlns=\\\"http://maven.apache.org/POM/4.0.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n\\t\\t xsi:schemaLocation=\\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\\">\\n\\t<modelVersion>4.0.0</modelVersion>\\n\\n\\t<groupId>com.codenerve</groupId>\\n\\t<artifactId>spring-security-basic</artifactId>\\n\\t<version>0.0.1-SNAPSHOT</version>\\n\\n\\t<name>spring-security-basic</name>\\n\\t<description>An introduction to spring security</description>\\n\\n\\t<parent>\\n\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t<artifactId>spring-boot-starter-parent</artifactId>\\n\\t\\t<version>2.1.5.RELEASE</version>\\n\\t</parent>\\n\\n\\t<properties>\\n\\t\\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\\n\\t\\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\\n\\t\\t<java.version>1.8</java.version>\\n\\t</properties>\\n\\n\\t<dependencies>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-web</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-security</artifactId>\\n\\t\\t</dependency>\\n\\n\\n\\t\\t<!-- TEST -->\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t<artifactId>spring-boot-starter-test</artifactId>\\n\\t\\t\\t<scope>test</scope>\\n\\t\\t</dependency>\\n\\t\\t<dependency>\\n\\t\\t\\t<groupId>org.springframework.security</groupId>\\n\\t\\t\\t<artifactId>spring-security-test</artifactId>\\n\\t\\t\\t<scope>test</scope>\\n\\t\\t</dependency>\\n\\t</dependencies>\\n\\n\\t<build>\\n\\t\\t<plugins>\\n\\t\\t\\t<plugin>\\n\\t\\t\\t\\t<groupId>org.springframework.boot</groupId>\\n\\t\\t\\t\\t<artifactId>spring-boot-maven-plugin</artifactId>\\n\\t\\t\\t</plugin>\\n\\t\\t</plugins>\\n\\t</build>\\n</project>\",\"language\":\"xml\"}],[\"code\",{\"code\":\"@Configuration\\npublic class MvcConfig implements WebMvcConfigurer {\\n\\n    @Override\\n    public void addViewControllers(ViewControllerRegistry registry) {\\n        registry.addViewController(\\\"/\\\").setViewName(\\\"login\\\");\\n        registry.addViewController(\\\"/index\\\").setViewName(\\\"index\\\");\\n        registry.addViewController(\\\"/login\\\").setViewName(\\\"login\\\");\\n    }\\n}\",\"language\":\"java\"}],[\"code\",{\"code\":\"@Configuration\\n@EnableWebSecurity\\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\\n    @Override\\n    protected void configure(HttpSecurity http) throws Exception {\\n        http\\n                .authorizeRequests()\\n                .antMatchers( \\\"/css/**\\\").permitAll()\\n                .anyRequest().authenticated()\\n                .and()\\n                .formLogin()\\n                .loginPage(\\\"/login\\\")\\n                .defaultSuccessUrl(\\\"/index\\\")\\n                .permitAll()\\n                .and()\\n                .logout()\\n                .permitAll()\\n                .and().csrf().disable(); // we'll enable this in a later blog post\\n    }\\n\\n    @Autowired\\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\\n        auth\\n                .inMemoryAuthentication()\\n                .withUser(\\\"user\\\").password(\\\"{noop}pass\\\").roles(\\\"USER\\\");\\n    }\\n}\",\"language\":\"java\"}],[\"code\",{\"code\":\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\"  \\nxmlns:th=\\\"http://www.thymeleaf.org\\\"    \\nxmlns:sec=\\\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity3\\\">\",\"language\":\"html\"}],[\"code\",{\"code\":\"<form th:action=\\\"@{/login}\\\" method=\\\"post\\\" class=\\\"form login\\\">\",\"language\":\"html\"}],[\"code\",{\"code\":\"<div class=\\\"text--center\\\" th:if=\\\"${param.error}\\\">\\n    Invalid username and password.\\n</div>\\n<div class=\\\"text--center\\\" th:if=\\\"${param.logout}\\\">\\n     You have been logged out.\\n</div>\",\"language\":\"html\"}],[\"markdown\",{\"markdown\":\"```html\\nserver.port=8081\\n```\\n\"}],[\"embed\",{\"url\":\"https://www.youtube.com/watch?v=aQ6QTQdCfeQ&feature=emb_logo\",\"html\":\"<iframe width=\\\"612\\\" height=\\\"344\\\" src=\\\"https://www.youtube.com/embed/aQ6QTQdCfeQ?feature=oembed\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\",\"type\":\"video\",\"metadata\":{\"title\":\"Spring Security – Basic Login Form\",\"height\":344,\"author_url\":\"https://www.youtube.com/channel/UCjaYB7yCUJ7APLHAtknY6sA\",\"author_name\":\"codenerve.com\",\"provider_name\":\"YouTube\",\"thumbnail_url\":\"https://i.ytimg.com/vi/aQ6QTQdCfeQ/hqdefault.jpg\",\"provider_url\":\"https://www.youtube.com/\",\"thumbnail_width\":480,\"width\":612,\"thumbnail_height\":360,\"version\":\"1.0\"}}],[\"hr\",{}],[\"code\",{\"code\":\"@RunWith(SpringRunner.class)\\n@SpringBootTest\\n@AutoConfigureMockMvc\\npublic class ApplicationTests {\\n\\n    @Autowired\\n    private MockMvc mockMvc;\\n\\n    @Test\\n    public void loginWithValidUserThenAuthenticated() throws Exception {\\n        FormLoginRequestBuilder login = formLogin()\\n                .user(\\\"user\\\")\\n                .password(\\\"pass\\\");\\n\\n        mockMvc.perform(login)\\n                .andExpect(authenticated().withUsername(\\\"user\\\"));\\n    }\\n\\n    @Test\\n    public void loginWithInvalidUserThenUnauthenticated() throws Exception {\\n        FormLoginRequestBuilder login = formLogin()\\n                .user(\\\"invalid\\\")\\n                .password(\\\"invalidpassword\\\");\\n\\n        mockMvc.perform(login)\\n                .andExpect(unauthenticated());\\n    }\\n\\n    @Test\\n    public void accessUnsecuredResourceThenOk() throws Exception {\\n        mockMvc.perform(get(\\\"/css/style.css\\\"))\\n                .andExpect(status().isOk());\\n    }\\n\\n    @Test\\n    public void accessSecuredResourceUnauthenticatedThenRedirectsToLogin() throws Exception {\\n        mockMvc.perform(get(\\\"/hello\\\"))\\n                .andExpect(status().is3xxRedirection())\\n                .andExpect(redirectedUrlPattern(\\\"**/login\\\"));\\n    }\\n\\n    @Test\\n    @WithMockUser\\n    public void accessSecuredResourceAuthenticatedThenOk() throws Exception {\\n        mockMvc.perform(get(\\\"/index\\\"))\\n                .andExpect(status().isOk());\\n    }\\n}\",\"language\":\"java\"}]],\"markups\":[[\"em\"],[\"a\",[\"href\",\"https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html\"]],[\"a\",[\"href\",\"http://www.thymeleaf.org/\",\"rel\",\"noopener nofollow\"]],[\"a\",[\"href\",\"http://hamcrest.org/\",\"rel\",\"noopener nofollow\"]],[\"a\",[\"href\",\"https://site.mockito.org/\",\"rel\",\"noopener nofollow\"]],[\"strong\"],[\"a\",[\"href\",\"http://www.thymeleaf.org/doc/tutorials/2.1/thymeleafspring.html#handling-the-command-object\",\"rel\",\"noopener nofollow\"]],[\"a\",[\"href\",\"/spring-security-thymeleaf-extras/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"In this series, I hope to show you some techniques for using spring security and the broader spring ecosystem to build and develop secure application web servers.\"]]],[1,\"p\",[[0,[],0,\"Today, we’ll be looking at building a basic login form page using:\"]]],[3,\"ul\",[[[0,[],0,\"Spring Boot\"]],[[0,[],0,\"Spring Security, and\"]],[[0,[],0,\"Thymeleaf\"]]]],[1,\"blockquote\",[[0,[],0,\"Source code for this example can be found on github:\"]]],[10,0],[10,1],[1,\"p\",[[0,[],0,\"First off lets briefly cover some of the project files that are of less interest:\"]]],[3,\"ul\",[[[0,[0,0],2,\"Application.java\"],[0,[],0,\" — contains our main method and the \"],[0,[0,0],2,\"@SpringBootApplication \"],[0,[],0,\"annotation.\"]],[[0,[],0,\"A CSS stylesheet is located under src/main/resources/static/css/ to make the demo pretty\"]],[[0,[],0,\"Some Thymeleaf HTML templates are located under src/main/resources/ for demo purposes also\"]],[[0,[],0,\"An \"],[0,[0,0],2,\"application.properties\"],[0,[],0,\" file is located under src/main/resources where we can pass configuration parameters to our spring boot application. A full list of options can be found \"],[0,[1],1,\"here\"]]]],[10,2],[1,\"h3\",[[0,[],0,\"Dependencies\"]]],[1,\"p\",[[0,[],0,\"As with all Spring boot application’s, there are a number of ‘Starter’ libraries that make it easy to add jars to your classpath.\"],[1,[],0,0],[0,[],0,\"In addition, these can auto-configure various spring beans and behaviours that we can make use of:\"]]],[10,3],[3,\"ul\",[[[0,[],0,\"spring-boot-starter-parent — brings in all the required spring dependencies and manages there versions\"]],[[0,[],0,\"spring-boot-starter-thymeleaf — adds thymeleaf-spring5 and thymeleaf-extras-java8time dependencies (\"],[0,[2],1,\"more on thymeleaf\"],[0,[],0,\")\"]],[[0,[],0,\"spring-boot-starter-security — adds spring-security-config, spring-security-web and spring-aop dependencies\"]],[[0,[],0,\"spring-boot-starter-test — adds spring-boot-test, junit, \"],[0,[3],1,\"hamcrest\"],[0,[],0,\" and \"],[0,[4],1,\"mockito\"]],[[0,[],0,\"spring-security-test — adds the ability to mock user and user roles\"]]]],[1,\"h3\",[[0,[],0,\"MvcConfig\"]]],[10,4],[1,\"p\",[[0,[],0,\"This class implements spring’s \"],[0,[0,0],2,\"WebMvcConfigurer \"],[0,[],0,\"interface. This allows you to override the method \"],[0,[0,0],2,\"addViewControllers\"],[0,[],0,\" (as well as others) which is a way to configure simple automated controllers. In this example, we have mapped them to our Thymeleaf views (under src/main/resources).\"]]],[1,\"h3\",[[0,[],0,\"WebSecurityConfig\"]]],[10,5],[1,\"p\",[[0,[],0,\"There’s a lot going on in this class as it contains the main security configuration to enable and configure our basic login form.\"]]],[1,\"p\",[[0,[5,5],2,\"@EnableWebSecurity\"],[1,[],0,1],[0,[],0,\"A Marker which allows spring to find your custom web application security configuration\"]]],[1,\"p\",[[0,[5,5],2,\"WebSecurityConfigurerAdapter\"],[1,[],0,2],[0,[],0,\"Another abstract base class that allows you to override certain aspects of spring security’s default configuration. In our case, we are going to override the methods \"],[0,[0,0],2,\"configure\"],[0,[],0,\" and \"],[0,[0,0],2,\"configureGlobal\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[5,5],2,\"configure(HttpSecurity http) method\"],[1,[],0,3],[0,[],0,\"Note the parameter passed to this method. There are several different configure methods. We will be overriding and configuring \"],[0,[0,0],2,\"HttpSecurity \"],[0,[],0,\"specifically\"],[0,[0,0],2,\".\"]]],[3,\"ul\",[[[0,[0,0],2,\"authorizeRequests()\"],[0,[],0,\" — Allows us to configure which resources on our web server to secure. You can see from our example code we have allowed un-secured access to our CSS directory and requested that all other resources are secured and can only be accessed by an authenticated user.\"]],[[0,[0,0],2,\"formLogin()\"],[0,[],0,\" — Tells spring security that we wish to use a login form. We provide the login URL, the URL we want to redirect to if the authentication is successful and finally permit access to the login and logout endpoints.\"]],[[0,[0,0],2,\"csrf()\"],[0,[],0,\" — For now we are disabling cross-site request forgery protection which by default is enabled. We will cover this later in the series.\"]]]],[1,\"p\",[[0,[5,5],2,\"configureGlobal method\"],[1,[],0,4],[0,[],0,\"Allows us to autowire an \"],[0,[0,0],2,\"AuthenticationManager\"],[0,[],0,\" which will be used globally throughout our application. For this example, we are using a basic in-memory approach with one user and one user role.\"]]],[1,\"h3\",[[0,[],0,\"Thymeleaf namespace\"]]],[1,\"p\",[[0,[],0,\"A few things to note in our \"],[0,[0,0],2,\"login.html\"],[1,[],0,5],[0,[],0,\"The thymeleaf spring security namespace:\"]]],[10,6],[1,\"p\",[[0,[],0,\"The thymeleaf action which instructs the form to do a POST request to the URL provided (/login):\"]]],[10,7],[1,\"p\",[[0,[],0,\"The thymeleaf if condition can check for URL parameters, error and log out responses and display content if they return true:\"]]],[10,8],[1,\"p\",[[0,[],0,\"Full list of what's available on the thymeleaf \"],[0,[6],1,\"website\"]]],[1,\"h3\",[[0,[],0,\"Demo\"]]],[1,\"p\",[[0,[],0,\"To run the demo open the \"],[0,[0,0],2,\"Application.java\"],[0,[],0,\" class and right click run. In order to start the example, port 8080 will need to be available on your machine. If it is not you can change this default in the application.properties file using:\"]]],[10,9],[1,\"p\",[[0,[],0,\"Set this to whatever value you wish.\"]]],[10,10],[10,11],[1,\"h3\",[[0,[],0,\"Unit Testing\"]]],[10,12],[1,\"p\",[[0,[5,5],2,\"@RunWith(SpringRunner.class)\"],[1,[],0,6],[0,[],0,\"Tells JUnit to run unit tests with Spring’s testing support\"]]],[1,\"p\",[[0,[5,5],2,\"@SpringBootTest\"],[1,[],0,7],[0,[],0,\"Run as spring boot app. i.e. load application.properties and spring beans\"]]],[1,\"p\",[[0,[5,5],2,\"@AutoConfigureMockMvc\"],[1,[],0,8],[0,[],0,\"Creates a Test helper class called MockMvc. From this, we can imitate a front-end client making requests to the server.\"]]],[1,\"p\",[[0,[5,5],2,\"@WithMockUser\"],[1,[],0,9],[0,[],0,\"Provides the ability to mock certain users. An authenticated user in our case.\"]]],[1,\"p\",[[0,[5,5],2,\"FormLoginRequestBuilder\"],[1,[],0,10],[0,[],0,\"A utility class that allows us to create a form based login request.\"]]],[1,\"h1\",[[0,[7],1,\"Next\"]]],[1,\"p\",[[0,[],0,\"Next up, we will be covering spring security’s user roles and the ability to hide and show content on our site based on the user’s permissions.\"]]],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<p>In this series, I hope to show you some techniques for using spring security and the broader spring ecosystem to build and develop secure application web servers.</p><p>Today, we’ll be looking at building a basic login form page using:</p><ul><li>Spring Boot</li><li>Spring Security, and</li><li>Thymeleaf</li></ul><blockquote>Source code for this example can be found on github:</blockquote><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/codenerve-com/spring-security\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">codenerve-com/spring-security</div><div class=\"kg-bookmark-description\">An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicons/favicon.svg\"><span class=\"kg-bookmark-author\">codenerve-com</span><span class=\"kg-bookmark-publisher\">GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://avatars3.githubusercontent.com/u/58404900?s=400&amp;v=4\"></div></a></figure><hr><p>First off lets briefly cover some of the project files that are of less interest:</p><ul><li><em><em>Application.java</em></em> — contains our main method and the <em><em>@SpringBootApplication </em></em>annotation.</li><li>A CSS stylesheet is located under src/main/resources/static/css/ to make the demo pretty</li><li>Some Thymeleaf HTML templates are located under src/main/resources/ for demo purposes also</li><li>An <em><em>application.properties</em></em> file is located under src/main/resources where we can pass configuration parameters to our spring boot application. A full list of options can be found <a href=\"https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html\">here</a></li></ul><hr><h3 id=\"dependencies\">Dependencies</h3><p>As with all Spring boot application’s, there are a number of ‘Starter’ libraries that make it easy to add jars to your classpath.<br>In addition, these can auto-configure various spring beans and behaviours that we can make use of:</p><pre><code class=\"language-xml\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n\t&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n\t&lt;groupId&gt;com.codenerve&lt;/groupId&gt;\n\t&lt;artifactId&gt;spring-security-basic&lt;/artifactId&gt;\n\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n\n\t&lt;name&gt;spring-security-basic&lt;/name&gt;\n\t&lt;description&gt;An introduction to spring security&lt;/description&gt;\n\n\t&lt;parent&gt;\n\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n\t\t&lt;version&gt;2.1.5.RELEASE&lt;/version&gt;\n\t&lt;/parent&gt;\n\n\t&lt;properties&gt;\n\t\t&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;\n\t\t&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;\n\t\t&lt;java.version&gt;1.8&lt;/java.version&gt;\n\t&lt;/properties&gt;\n\n\t&lt;dependencies&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n\t\t&lt;/dependency&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n\t\t&lt;/dependency&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n\t\t&lt;/dependency&gt;\n\n\n\t\t&lt;!-- TEST --&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n\t\t\t&lt;scope&gt;test&lt;/scope&gt;\n\t\t&lt;/dependency&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.springframework.security&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;\n\t\t\t&lt;scope&gt;test&lt;/scope&gt;\n\t\t&lt;/dependency&gt;\n\t&lt;/dependencies&gt;\n\n\t&lt;build&gt;\n\t\t&lt;plugins&gt;\n\t\t\t&lt;plugin&gt;\n\t\t\t\t&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n\t\t\t\t&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n\t\t\t&lt;/plugin&gt;\n\t\t&lt;/plugins&gt;\n\t&lt;/build&gt;\n&lt;/project&gt;</code></pre><ul><li>spring-boot-starter-parent — brings in all the required spring dependencies and manages there versions</li><li>spring-boot-starter-thymeleaf — adds thymeleaf-spring5 and thymeleaf-extras-java8time dependencies (<a href=\"http://www.thymeleaf.org/\" rel=\"noopener nofollow\">more on thymeleaf</a>)</li><li>spring-boot-starter-security — adds spring-security-config, spring-security-web and spring-aop dependencies</li><li>spring-boot-starter-test — adds spring-boot-test, junit, <a href=\"http://hamcrest.org/\" rel=\"noopener nofollow\">hamcrest</a> and <a href=\"https://site.mockito.org/\" rel=\"noopener nofollow\">mockito</a></li><li>spring-security-test — adds the ability to mock user and user roles</li></ul><h3 id=\"mvcconfig\">MvcConfig</h3><pre><code class=\"language-java\">@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"login\");\n        registry.addViewController(\"/index\").setViewName(\"index\");\n        registry.addViewController(\"/login\").setViewName(\"login\");\n    }\n}</code></pre><p>This class implements spring’s <em><em>WebMvcConfigurer </em></em>interface. This allows you to override the method <em><em>addViewControllers</em></em> (as well as others) which is a way to configure simple automated controllers. In this example, we have mapped them to our Thymeleaf views (under src/main/resources).</p><h3 id=\"websecurityconfig\">WebSecurityConfig</h3><pre><code class=\"language-java\">@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                .antMatchers( \"/css/**\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginPage(\"/login\")\n                .defaultSuccessUrl(\"/index\")\n                .permitAll()\n                .and()\n                .logout()\n                .permitAll()\n                .and().csrf().disable(); // we'll enable this in a later blog post\n    }\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n                .inMemoryAuthentication()\n                .withUser(\"user\").password(\"{noop}pass\").roles(\"USER\");\n    }\n}</code></pre><p>There’s a lot going on in this class as it contains the main security configuration to enable and configure our basic login form.</p><p><strong><strong>@EnableWebSecurity</strong></strong><br>A Marker which allows spring to find your custom web application security configuration</p><p><strong><strong>WebSecurityConfigurerAdapter</strong></strong><br>Another abstract base class that allows you to override certain aspects of spring security’s default configuration. In our case, we are going to override the methods <em><em>configure</em></em> and <em><em>configureGlobal</em></em>.</p><p><strong><strong>configure(HttpSecurity http) method</strong></strong><br>Note the parameter passed to this method. There are several different configure methods. We will be overriding and configuring <em><em>HttpSecurity </em></em>specifically<em><em>.</em></em></p><ul><li><em><em>authorizeRequests()</em></em> — Allows us to configure which resources on our web server to secure. You can see from our example code we have allowed un-secured access to our CSS directory and requested that all other resources are secured and can only be accessed by an authenticated user.</li><li><em><em>formLogin()</em></em> — Tells spring security that we wish to use a login form. We provide the login URL, the URL we want to redirect to if the authentication is successful and finally permit access to the login and logout endpoints.</li><li><em><em>csrf()</em></em> — For now we are disabling cross-site request forgery protection which by default is enabled. We will cover this later in the series.</li></ul><p><strong><strong>configureGlobal method</strong></strong><br>Allows us to autowire an <em><em>AuthenticationManager</em></em> which will be used globally throughout our application. For this example, we are using a basic in-memory approach with one user and one user role.</p><h3 id=\"thymeleaf-namespace\">Thymeleaf namespace</h3><p>A few things to note in our <em><em>login.html</em></em><br>The thymeleaf spring security namespace:</p><pre><code class=\"language-html\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"  \nxmlns:th=\"http://www.thymeleaf.org\"    \nxmlns:sec=\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity3\"&gt;</code></pre><p>The thymeleaf action which instructs the form to do a POST request to the URL provided (/login):</p><pre><code class=\"language-html\">&lt;form th:action=\"@{/login}\" method=\"post\" class=\"form login\"&gt;</code></pre><p>The thymeleaf if condition can check for URL parameters, error and log out responses and display content if they return true:</p><pre><code class=\"language-html\">&lt;div class=\"text--center\" th:if=\"${param.error}\"&gt;\n    Invalid username and password.\n&lt;/div&gt;\n&lt;div class=\"text--center\" th:if=\"${param.logout}\"&gt;\n     You have been logged out.\n&lt;/div&gt;</code></pre><p>Full list of what's available on the thymeleaf <a href=\"http://www.thymeleaf.org/doc/tutorials/2.1/thymeleafspring.html#handling-the-command-object\" rel=\"noopener nofollow\">website</a></p><h3 id=\"demo\">Demo</h3><p>To run the demo open the <em><em>Application.java</em></em> class and right click run. In order to start the example, port 8080 will need to be available on your machine. If it is not you can change this default in the application.properties file using:</p><!--kg-card-begin: markdown--><pre><code class=\"language-html\">server.port=8081\n</code></pre>\n<!--kg-card-end: markdown--><p>Set this to whatever value you wish.</p><figure class=\"kg-card kg-embed-card\"><iframe width=\"612\" height=\"344\" src=\"https://www.youtube.com/embed/aQ6QTQdCfeQ?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><hr><h3 id=\"unit-testing\">Unit Testing</h3><pre><code class=\"language-java\">@RunWith(SpringRunner.class)\n@SpringBootTest\n@AutoConfigureMockMvc\npublic class ApplicationTests {\n\n    @Autowired\n    private MockMvc mockMvc;\n\n    @Test\n    public void loginWithValidUserThenAuthenticated() throws Exception {\n        FormLoginRequestBuilder login = formLogin()\n                .user(\"user\")\n                .password(\"pass\");\n\n        mockMvc.perform(login)\n                .andExpect(authenticated().withUsername(\"user\"));\n    }\n\n    @Test\n    public void loginWithInvalidUserThenUnauthenticated() throws Exception {\n        FormLoginRequestBuilder login = formLogin()\n                .user(\"invalid\")\n                .password(\"invalidpassword\");\n\n        mockMvc.perform(login)\n                .andExpect(unauthenticated());\n    }\n\n    @Test\n    public void accessUnsecuredResourceThenOk() throws Exception {\n        mockMvc.perform(get(\"/css/style.css\"))\n                .andExpect(status().isOk());\n    }\n\n    @Test\n    public void accessSecuredResourceUnauthenticatedThenRedirectsToLogin() throws Exception {\n        mockMvc.perform(get(\"/hello\"))\n                .andExpect(status().is3xxRedirection())\n                .andExpect(redirectedUrlPattern(\"**/login\"));\n    }\n\n    @Test\n    @WithMockUser\n    public void accessSecuredResourceAuthenticatedThenOk() throws Exception {\n        mockMvc.perform(get(\"/index\"))\n                .andExpect(status().isOk());\n    }\n}</code></pre><p><strong><strong>@RunWith(SpringRunner.class)</strong></strong><br>Tells JUnit to run unit tests with Spring’s testing support</p><p><strong><strong>@SpringBootTest</strong></strong><br>Run as spring boot app. i.e. load application.properties and spring beans</p><p><strong><strong>@AutoConfigureMockMvc</strong></strong><br>Creates a Test helper class called MockMvc. From this, we can imitate a front-end client making requests to the server.</p><p><strong><strong>@WithMockUser</strong></strong><br>Provides the ability to mock certain users. An authenticated user in our case.</p><p><strong><strong>FormLoginRequestBuilder</strong></strong><br>A utility class that allows us to create a form based login request.</p><h1 id=\"next\"><a href=\"/spring-security-thymeleaf-extras/\">Next</a></h1><p>Next up, we will be covering spring security’s user roles and the ability to hide and show content on our site based on the user’s permissions.</p><p></p>","comment_id":"1401","plaintext":"In this series, I hope to show you some techniques for using spring security and\nthe broader spring ecosystem to build and develop secure application web\nservers.\n\nToday, we’ll be looking at building a basic login form page using:\n\n * Spring Boot\n * Spring Security, and\n * Thymeleaf\n\n> Source code for this example can be found on github:\ncodenerve-com/spring-securityAn introduction to spring security. Contribute to\ncodenerve-com/spring-security development by creating an account on GitHub.\ncodenerve-comGitHub [https://github.com/codenerve-com/spring-security]\n--------------------------------------------------------------------------------\n\nFirst off lets briefly cover some of the project files that are of less\ninterest:\n\n * Application.java — contains our main method and the @SpringBootApplication \n   annotation.\n * A CSS stylesheet is located under src/main/resources/static/css/ to make the\n   demo pretty\n * Some Thymeleaf HTML templates are located under src/main/resources/ for demo\n   purposes also\n * An application.properties file is located under src/main/resources where we\n   can pass configuration parameters to our spring boot application. A full list\n   of options can be found here\n   [https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html]\n\n\n--------------------------------------------------------------------------------\n\nDependencies\nAs with all Spring boot application’s, there are a number of ‘Starter’ libraries\nthat make it easy to add jars to your classpath.\nIn addition, these can auto-configure various spring beans and behaviours that\nwe can make use of:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.codenerve</groupId>\n\t<artifactId>spring-security-basic</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\n\t<name>spring-security-basic</name>\n\t<description>An introduction to spring security</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>2.1.5.RELEASE</version>\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>1.8</java.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n\t\t</dependency>\n\n\n\t\t<!-- TEST -->\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.security</groupId>\n\t\t\t<artifactId>spring-security-test</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n\n * spring-boot-starter-parent — brings in all the required spring dependencies\n   and manages there versions\n * spring-boot-starter-thymeleaf — adds thymeleaf-spring5 and\n   thymeleaf-extras-java8time dependencies (more on thymeleaf\n   [http://www.thymeleaf.org/])\n * spring-boot-starter-security — adds spring-security-config,\n   spring-security-web and spring-aop dependencies\n * spring-boot-starter-test — adds spring-boot-test, junit, hamcrest\n   [http://hamcrest.org/] and mockito [https://site.mockito.org/]\n * spring-security-test — adds the ability to mock user and user roles\n\nMvcConfig\n@Configuration\npublic class MvcConfig implements WebMvcConfigurer {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"login\");\n        registry.addViewController(\"/index\").setViewName(\"index\");\n        registry.addViewController(\"/login\").setViewName(\"login\");\n    }\n}\n\nThis class implements spring’s WebMvcConfigurer interface. This allows you to\noverride the method addViewControllers (as well as others) which is a way to\nconfigure simple automated controllers. In this example, we have mapped them to\nour Thymeleaf views (under src/main/resources).\n\nWebSecurityConfig\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                .antMatchers( \"/css/**\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginPage(\"/login\")\n                .defaultSuccessUrl(\"/index\")\n                .permitAll()\n                .and()\n                .logout()\n                .permitAll()\n                .and().csrf().disable(); // we'll enable this in a later blog post\n    }\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n                .inMemoryAuthentication()\n                .withUser(\"user\").password(\"{noop}pass\").roles(\"USER\");\n    }\n}\n\nThere’s a lot going on in this class as it contains the main security\nconfiguration to enable and configure our basic login form.\n\n@EnableWebSecurity\nA Marker which allows spring to find your custom web application security\nconfiguration\n\nWebSecurityConfigurerAdapter\nAnother abstract base class that allows you to override certain aspects of\nspring security’s default configuration. In our case, we are going to override\nthe methods configure and configureGlobal.\n\nconfigure(HttpSecurity http) method\nNote the parameter passed to this method. There are several different configure\nmethods. We will be overriding and configuring HttpSecurity specifically.\n\n * authorizeRequests() — Allows us to configure which resources on our web\n   server to secure. You can see from our example code we have allowed\n   un-secured access to our CSS directory and requested that all other resources\n   are secured and can only be accessed by an authenticated user.\n * formLogin() — Tells spring security that we wish to use a login form. We\n   provide the login URL, the URL we want to redirect to if the authentication\n   is successful and finally permit access to the login and logout endpoints.\n * csrf() — For now we are disabling cross-site request forgery protection which\n   by default is enabled. We will cover this later in the series.\n\nconfigureGlobal method\nAllows us to autowire an AuthenticationManager which will be used globally\nthroughout our application. For this example, we are using a basic in-memory\napproach with one user and one user role.\n\nThymeleaf namespace\nA few things to note in our login.html\nThe thymeleaf spring security namespace:\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\"  \nxmlns:th=\"http://www.thymeleaf.org\"    \nxmlns:sec=\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity3\">\n\nThe thymeleaf action which instructs the form to do a POST request to the URL\nprovided (/login):\n\n<form th:action=\"@{/login}\" method=\"post\" class=\"form login\">\n\nThe thymeleaf if condition can check for URL parameters, error and log out\nresponses and display content if they return true:\n\n<div class=\"text--center\" th:if=\"${param.error}\">\n    Invalid username and password.\n</div>\n<div class=\"text--center\" th:if=\"${param.logout}\">\n     You have been logged out.\n</div>\n\nFull list of what's available on the thymeleaf website\n[http://www.thymeleaf.org/doc/tutorials/2.1/thymeleafspring.html#handling-the-command-object]\n\nDemo\nTo run the demo open the Application.java class and right click run. In order to\nstart the example, port 8080 will need to be available on your machine. If it is\nnot you can change this default in the application.properties file using:\n\nserver.port=8081\n\n\nSet this to whatever value you wish.\n\n\n--------------------------------------------------------------------------------\n\nUnit Testing\n@RunWith(SpringRunner.class)\n@SpringBootTest\n@AutoConfigureMockMvc\npublic class ApplicationTests {\n\n    @Autowired\n    private MockMvc mockMvc;\n\n    @Test\n    public void loginWithValidUserThenAuthenticated() throws Exception {\n        FormLoginRequestBuilder login = formLogin()\n                .user(\"user\")\n                .password(\"pass\");\n\n        mockMvc.perform(login)\n                .andExpect(authenticated().withUsername(\"user\"));\n    }\n\n    @Test\n    public void loginWithInvalidUserThenUnauthenticated() throws Exception {\n        FormLoginRequestBuilder login = formLogin()\n                .user(\"invalid\")\n                .password(\"invalidpassword\");\n\n        mockMvc.perform(login)\n                .andExpect(unauthenticated());\n    }\n\n    @Test\n    public void accessUnsecuredResourceThenOk() throws Exception {\n        mockMvc.perform(get(\"/css/style.css\"))\n                .andExpect(status().isOk());\n    }\n\n    @Test\n    public void accessSecuredResourceUnauthenticatedThenRedirectsToLogin() throws Exception {\n        mockMvc.perform(get(\"/hello\"))\n                .andExpect(status().is3xxRedirection())\n                .andExpect(redirectedUrlPattern(\"**/login\"));\n    }\n\n    @Test\n    @WithMockUser\n    public void accessSecuredResourceAuthenticatedThenOk() throws Exception {\n        mockMvc.perform(get(\"/index\"))\n                .andExpect(status().isOk());\n    }\n}\n\n@RunWith(SpringRunner.class)\nTells JUnit to run unit tests with Spring’s testing support\n\n@SpringBootTest\nRun as spring boot app. i.e. load application.properties and spring beans\n\n@AutoConfigureMockMvc\nCreates a Test helper class called MockMvc. From this, we can imitate a\nfront-end client making requests to the server.\n\n@WithMockUser\nProvides the ability to mock certain users. An authenticated user in our case.\n\nFormLoginRequestBuilder\nA utility class that allows us to create a form based login request.\n\nNext [/spring-security-thymeleaf-extras/]\nNext up, we will be covering spring security’s user roles and the ability to\nhide and show content on our site based on the user’s permissions.","feature_image":"https://images.unsplash.com/photo-1489875347897-49f64b51c1f8?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"1","created_at":"2019-04-25 22:20:29","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-24 23:25:46","updated_by":"1","published_at":"2019-04-25 22:20:29","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aedc","uuid":"159b0e9c-a06c-49fd-83fe-228201f90123","title":"Spring Security - User Roles and ThymeLeaf Extras","slug":"spring-security-thymeleaf-extras","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"bookmark\",{\"url\":\"https://github.com/codenerve-com/spring-security/tree/2.thymeleaf-extras\",\"metadata\":{\"url\":\"https://github.com/codenerve-com/spring-security\",\"title\":\"codenerve-com/spring-security\",\"description\":\"An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.\",\"author\":\"codenerve-com\",\"publisher\":\"GitHub\",\"thumbnail\":\"https://avatars3.githubusercontent.com/u/58404900?s=400&v=4\",\"icon\":\"https://github.githubassets.com/favicons/favicon.svg\"}}],[\"hr\",{}],[\"code\",{\"code\":\"@Autowired\\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\\n    auth\\n        .inMemoryAuthentication()\\n        .withUser(\\\"user\\\").password(\\\"{noop}pass\\\").roles(\\\"USER\\\")\\n        .and()\\n        .withUser(\\\"admin\\\").password(\\\"{noop}pass\\\").roles(\\\"ADMIN\\\");\\n}\",\"language\":\"java\",\"caption\":\"WebSecurityConfig.java\"}],[\"code\",{\"code\":\"<div sec:authorize=\\\"hasRole('ADMIN')\\\">\\n    This content is only shown to administrators.\\n</div>\\n\\n<div sec:authorize=\\\"hasRole('USER')\\\">\\n    This content is only shown to users.\\n</div>\",\"language\":\"html\",\"caption\":\"index.html\"}],[\"code\",{\"code\":\"<div>\\n    User: <span sec:authentication=\\\"name\\\">NOT FOUND</span>\\n    Spring Roles: <span sec:authentication=\\\"principal.authorities\\\">NOT FOUND</span>\\n</div>\",\"language\":\"html\",\"caption\":\"index.html\"}],[\"code\",{\"code\":\"server.port=8081\",\"language\":\"bash\"}],[\"embed\",{\"url\":\"https://www.youtube.com/watch?v=khAjDT9szTM\",\"html\":\"<iframe width=\\\"612\\\" height=\\\"344\\\" src=\\\"https://www.youtube.com/embed/khAjDT9szTM?feature=oembed\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\",\"type\":\"video\",\"metadata\":{\"provider_url\":\"https://www.youtube.com/\",\"thumbnail_height\":360,\"thumbnail_url\":\"https://i.ytimg.com/vi/khAjDT9szTM/hqdefault.jpg\",\"version\":\"1.0\",\"author_name\":\"codenerve.com\",\"height\":344,\"width\":612,\"provider_name\":\"YouTube\",\"author_url\":\"https://www.youtube.com/channel/UCjaYB7yCUJ7APLHAtknY6sA\",\"thumbnail_width\":480,\"title\":\"Spring Security – User Roles and ThymeLeaf Extras\"}}],[\"code\",{\"code\":\"@Test\\n@WithMockUser(roles = \\\"USER\\\")\\npublic void loginWithRoleUserThenExpectUserSpecificContent() throws Exception {\\n\\tmockMvc.perform(get(\\\"/index\\\"))\\n\\t\\t\\t.andExpect(status().isOk())\\n\\t\\t\\t.andExpect(content().string(containsString(\\\"This content is only shown to users.\\\")))\\n\\t\\t\\t.andExpect(content().string(doesNotContainString(\\\"This content is only shown to administrators.\\\")));\\n}\\n\\n@Test\\n@WithMockUser(roles = \\\"ADMIN\\\")\\npublic void loginWithRoleAdminThenExpectAdminSpecificContent() throws Exception {\\n\\tmockMvc.perform(get(\\\"/index\\\"))\\n\\t\\t\\t.andExpect(status().isOk())\\n\\t\\t\\t.andExpect(content().string(containsString(\\\"This content is only shown to administrators.\\\")))\\n\\t\\t\\t.andExpect(content().string(doesNotContainString(\\\"This content is only shown to users.\\\")));\\n}\\n\\nprivate Matcher<String> doesNotContainString(String s) {\\n\\treturn CoreMatchers.not(containsString(s));\\n}\",\"language\":\"java\",\"caption\":\"ApplicationTests.java\"}]],\"markups\":[[\"a\",[\"href\",\"https://www.codenerve.com/spring-security-basic-login-form/\"]],[\"strong\"],[\"em\"],[\"a\",[\"href\",\"https://github.com/thymeleaf/thymeleaf-extras-springsecurity\"]],[\"a\",[\"href\",\"/spring-security-user-role-redirect/\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"In the last lesson, we learnt how to use spring security to build a \"],[0,[0],1,\"basic login form\"],[0,[],0,\". \"]]],[1,\"p\",[[0,[],0,\"Today, we'll be looking at adding user roles and some nice feature's of the Thymeleaf library to show and hide content based on these roles.\"]]],[1,\"blockquote\",[[0,[1],1,\"Source code for this example can be found on github:\"]]],[10,0],[10,1],[1,\"h3\",[[0,[],0,\"Dependencies\"]]],[1,\"p\",[[0,[],0,\"As with all Spring boot application's, there are a number of starter libraries that make it easy to add jars to your classpath. In addition, these can auto-configure various spring beans and behaviours that we can make use of. Building upon the previous lesson we will be adding:\"]]],[3,\"ul\",[[[0,[],0,\"thymeleaf-extras-springsecurity4 - this has a number of additional features over the basic thymeleaf jar\"]]]],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"WebSecurityConfig\"]]],[1,\"p\",[[0,[],0,\"To begin this lesson we'll be adding another user to our application's WebSecurityConfig but this time giving them a new role 'admin':\"]]],[10,2],[1,\"p\",[[0,[],0,\"This now gives us two available user's to log in with. \"]]],[1,\"p\",[[0,[],0,\"Each is configured with a different role that we can now use to hide and show various content.\"]]],[1,\"h3\",[[0,[],0,\"Thymeleaf: Authorize\"]]],[1,\"p\",[[0,[],0,\"Next, we'll be using a Thymeleaf attribute \"],[0,[2],1,\"sec:authorize\"],[0,[],0,\" to check a users roles before rendering the div's in our index.html page.\"]]],[1,\"p\",[[0,[],0,\"To do this, go to the index.html page and add the following HTML inside the body tags:\"]]],[10,3],[1,\"p\",[[0,[],0,\"As you can see the \"],[0,[2],1,\"sec:authorize\"],[0,[],0,\" attribute is added to each div, and we use something called the spring security dialect to check users spring security roles. Content will only be rendered if the logged-in user has that role. i.e. \"],[0,[2],1,\"hasRole\"],[0,[],0,\" returns true.\"]]],[1,\"p\",[[0,[],0,\"It is important to note that content is not just hidden from view but will not be rendered at all when our application server returns the page to the browser.\"]]],[1,\"h3\",[[0,[],0,\"Thymeleaf: Authentication\"]]],[1,\"p\",[[0,[],0,\"Another useful Thymeleaf feature is the \"],[0,[2],1,\"sec:authentication\"],[0,[],0,\" attribute. This can return various security-related metadata. In the example below, we can retrieve the user's username and roles and display these in our HTML.\"]]],[10,4],[1,\"p\",[[0,[],0,\"For more useful attribute's see \"],[0,[3],1,\"the Thymeleaf documentation\"]]],[1,\"h3\",[[0,[],0,\"Demo\"]]],[1,\"p\",[[0,[],0,\"To run the demo, open the Application class and right click run. In order to start the example, the port 8080 will need to be available on your machine. If it is not you can change this default in the application.properties file using:\"]]],[10,5],[1,\"p\",[[0,[],0,\"Set this to whatever value you wish.\"]]],[10,6],[1,\"h3\",[[0,[],0,\"Unit Testing\"]]],[1,\"p\",[[0,[],0,\"We've added a few more unit tests to cover this new functionality:\"]]],[10,7],[1,\"p\",[[0,[],0,\"As you can see we've created a utility method \"],[0,[2],1,\"doesNotContainString\"],[0,[],0,\". Using this and Hamcrests \"],[0,[2],1,\"containsString\"],[0,[],0,\" method, we can check that content is rendered (or not) based on a particular user role.\"]]],[1,\"h3\",[[0,[4],1,\"Next\"]]],[1,\"p\",[[0,[],0,\"Next up, we will be continuing to cover spring security's user roles, but this time we will be redirecting admins to there own admin page (admin.html) and securing this page so that only admin users can access it.\"]]],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<p>In the last lesson, we learnt how to use spring security to build a <a href=\"https://www.codenerve.com/spring-security-basic-login-form/\">basic login form</a>. </p><p>Today, we'll be looking at adding user roles and some nice feature's of the Thymeleaf library to show and hide content based on these roles.</p><blockquote><strong>Source code for this example can be found on github:</strong></blockquote><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/codenerve-com/spring-security/tree/2.thymeleaf-extras\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">codenerve-com/spring-security</div><div class=\"kg-bookmark-description\">An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicons/favicon.svg\"><span class=\"kg-bookmark-author\">codenerve-com</span><span class=\"kg-bookmark-publisher\">GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://avatars3.githubusercontent.com/u/58404900?s=400&amp;v=4\"></div></a></figure><hr><h3 id=\"dependencies\">Dependencies</h3><p>As with all Spring boot application's, there are a number of starter libraries that make it easy to add jars to your classpath. In addition, these can auto-configure various spring beans and behaviours that we can make use of. Building upon the previous lesson we will be adding:</p><ul><li>thymeleaf-extras-springsecurity4 - this has a number of additional features over the basic thymeleaf jar</li></ul><p></p><h3 id=\"websecurityconfig\">WebSecurityConfig</h3><p>To begin this lesson we'll be adding another user to our application's WebSecurityConfig but this time giving them a new role 'admin':</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n    auth\n        .inMemoryAuthentication()\n        .withUser(\"user\").password(\"{noop}pass\").roles(\"USER\")\n        .and()\n        .withUser(\"admin\").password(\"{noop}pass\").roles(\"ADMIN\");\n}</code></pre><figcaption>WebSecurityConfig.java</figcaption></figure><p>This now gives us two available user's to log in with. </p><p>Each is configured with a different role that we can now use to hide and show various content.</p><h3 id=\"thymeleaf-authorize\">Thymeleaf: Authorize</h3><p>Next, we'll be using a Thymeleaf attribute <em>sec:authorize</em> to check a users roles before rendering the div's in our index.html page.</p><p>To do this, go to the index.html page and add the following HTML inside the body tags:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-html\">&lt;div sec:authorize=\"hasRole('ADMIN')\"&gt;\n    This content is only shown to administrators.\n&lt;/div&gt;\n\n&lt;div sec:authorize=\"hasRole('USER')\"&gt;\n    This content is only shown to users.\n&lt;/div&gt;</code></pre><figcaption>index.html</figcaption></figure><p>As you can see the <em>sec:authorize</em> attribute is added to each div, and we use something called the spring security dialect to check users spring security roles. Content will only be rendered if the logged-in user has that role. i.e. <em>hasRole</em> returns true.</p><p>It is important to note that content is not just hidden from view but will not be rendered at all when our application server returns the page to the browser.</p><h3 id=\"thymeleaf-authentication\">Thymeleaf: Authentication</h3><p>Another useful Thymeleaf feature is the <em>sec:authentication</em> attribute. This can return various security-related metadata. In the example below, we can retrieve the user's username and roles and display these in our HTML.</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-html\">&lt;div&gt;\n    User: &lt;span sec:authentication=\"name\"&gt;NOT FOUND&lt;/span&gt;\n    Spring Roles: &lt;span sec:authentication=\"principal.authorities\"&gt;NOT FOUND&lt;/span&gt;\n&lt;/div&gt;</code></pre><figcaption>index.html</figcaption></figure><p>For more useful attribute's see <a href=\"https://github.com/thymeleaf/thymeleaf-extras-springsecurity\">the Thymeleaf documentation</a></p><h3 id=\"demo\">Demo</h3><p>To run the demo, open the Application class and right click run. In order to start the example, the port 8080 will need to be available on your machine. If it is not you can change this default in the application.properties file using:</p><pre><code class=\"language-bash\">server.port=8081</code></pre><p>Set this to whatever value you wish.</p><figure class=\"kg-card kg-embed-card\"><iframe width=\"612\" height=\"344\" src=\"https://www.youtube.com/embed/khAjDT9szTM?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><h3 id=\"unit-testing\">Unit Testing</h3><p>We've added a few more unit tests to cover this new functionality:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Test\n@WithMockUser(roles = \"USER\")\npublic void loginWithRoleUserThenExpectUserSpecificContent() throws Exception {\n\tmockMvc.perform(get(\"/index\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"This content is only shown to users.\")))\n\t\t\t.andExpect(content().string(doesNotContainString(\"This content is only shown to administrators.\")));\n}\n\n@Test\n@WithMockUser(roles = \"ADMIN\")\npublic void loginWithRoleAdminThenExpectAdminSpecificContent() throws Exception {\n\tmockMvc.perform(get(\"/index\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"This content is only shown to administrators.\")))\n\t\t\t.andExpect(content().string(doesNotContainString(\"This content is only shown to users.\")));\n}\n\nprivate Matcher&lt;String&gt; doesNotContainString(String s) {\n\treturn CoreMatchers.not(containsString(s));\n}</code></pre><figcaption>ApplicationTests.java</figcaption></figure><p>As you can see we've created a utility method <em>doesNotContainString</em>. Using this and Hamcrests <em>containsString</em> method, we can check that content is rendered (or not) based on a particular user role.</p><h3 id=\"next\"><a href=\"/spring-security-user-role-redirect/\">Next</a></h3><p>Next up, we will be continuing to cover spring security's user roles, but this time we will be redirecting admins to there own admin page (admin.html) and securing this page so that only admin users can access it.</p><p></p>","comment_id":"1524","plaintext":"In the last lesson, we learnt how to use spring security to build a basic login\nform [https://www.codenerve.com/spring-security-basic-login-form/]. \n\nToday, we'll be looking at adding user roles and some nice feature's of the\nThymeleaf library to show and hide content based on these roles.\n\n> Source code for this example can be found on github:\ncodenerve-com/spring-securityAn introduction to spring security. Contribute to\ncodenerve-com/spring-security development by creating an account on GitHub.\ncodenerve-comGitHub\n[https://github.com/codenerve-com/spring-security/tree/2.thymeleaf-extras]\n--------------------------------------------------------------------------------\n\nDependencies\nAs with all Spring boot application's, there are a number of starter libraries\nthat make it easy to add jars to your classpath. In addition, these can\nauto-configure various spring beans and behaviours that we can make use of.\nBuilding upon the previous lesson we will be adding:\n\n * thymeleaf-extras-springsecurity4 - this has a number of additional features\n   over the basic thymeleaf jar\n\n\n\nWebSecurityConfig\nTo begin this lesson we'll be adding another user to our application's\nWebSecurityConfig but this time giving them a new role 'admin':\n\n@Autowired\npublic void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n    auth\n        .inMemoryAuthentication()\n        .withUser(\"user\").password(\"{noop}pass\").roles(\"USER\")\n        .and()\n        .withUser(\"admin\").password(\"{noop}pass\").roles(\"ADMIN\");\n}\n\nWebSecurityConfig.javaThis now gives us two available user's to log in with. \n\nEach is configured with a different role that we can now use to hide and show\nvarious content.\n\nThymeleaf: Authorize\nNext, we'll be using a Thymeleaf attribute sec:authorize to check a users roles\nbefore rendering the div's in our index.html page.\n\nTo do this, go to the index.html page and add the following HTML inside the body\ntags:\n\n<div sec:authorize=\"hasRole('ADMIN')\">\n    This content is only shown to administrators.\n</div>\n\n<div sec:authorize=\"hasRole('USER')\">\n    This content is only shown to users.\n</div>\n\nindex.htmlAs you can see the sec:authorize attribute is added to each div, and we use\nsomething called the spring security dialect to check users spring security\nroles. Content will only be rendered if the logged-in user has that role. i.e. \nhasRole returns true.\n\nIt is important to note that content is not just hidden from view but will not\nbe rendered at all when our application server returns the page to the browser.\n\nThymeleaf: Authentication\nAnother useful Thymeleaf feature is the sec:authentication attribute. This can\nreturn various security-related metadata. In the example below, we can retrieve\nthe user's username and roles and display these in our HTML.\n\n<div>\n    User: <span sec:authentication=\"name\">NOT FOUND</span>\n    Spring Roles: <span sec:authentication=\"principal.authorities\">NOT FOUND</span>\n</div>\n\nindex.htmlFor more useful attribute's see the Thymeleaf documentation\n[https://github.com/thymeleaf/thymeleaf-extras-springsecurity]\n\nDemo\nTo run the demo, open the Application class and right click run. In order to\nstart the example, the port 8080 will need to be available on your machine. If\nit is not you can change this default in the application.properties file using:\n\nserver.port=8081\n\nSet this to whatever value you wish.\n\nUnit Testing\nWe've added a few more unit tests to cover this new functionality:\n\n@Test\n@WithMockUser(roles = \"USER\")\npublic void loginWithRoleUserThenExpectUserSpecificContent() throws Exception {\n\tmockMvc.perform(get(\"/index\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"This content is only shown to users.\")))\n\t\t\t.andExpect(content().string(doesNotContainString(\"This content is only shown to administrators.\")));\n}\n\n@Test\n@WithMockUser(roles = \"ADMIN\")\npublic void loginWithRoleAdminThenExpectAdminSpecificContent() throws Exception {\n\tmockMvc.perform(get(\"/index\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"This content is only shown to administrators.\")))\n\t\t\t.andExpect(content().string(doesNotContainString(\"This content is only shown to users.\")));\n}\n\nprivate Matcher<String> doesNotContainString(String s) {\n\treturn CoreMatchers.not(containsString(s));\n}\n\nApplicationTests.javaAs you can see we've created a utility method doesNotContainString. Using this\nand Hamcrests containsString method, we can check that content is rendered (or\nnot) based on a particular user role.\n\nNext [/spring-security-user-role-redirect/]\nNext up, we will be continuing to cover spring security's user roles, but this\ntime we will be redirecting admins to there own admin page (admin.html) and\nsecuring this page so that only admin users can access it.","feature_image":"https://images.unsplash.com/photo-1517650862521-d580d5348145?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"1","created_at":"2019-04-30 22:18:14","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-24 23:25:33","updated_by":"1","published_at":"2019-04-30 22:18:14","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aedd","uuid":"ee763692-e5ae-4a76-8517-bf8df8ec3965","title":"Spring Security - Redirect based on User Roles","slug":"spring-security-user-role-redirect","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"bookmark\",{\"url\":\"https://github.com/codenerve-com/spring-security/tree/3.redirect-based-on-role\",\"metadata\":{\"url\":\"https://github.com/codenerve-com/spring-security\",\"title\":\"codenerve-com/spring-security\",\"description\":\"An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.\",\"author\":\"codenerve-com\",\"publisher\":\"GitHub\",\"thumbnail\":\"https://avatars3.githubusercontent.com/u/58404900?s=400&v=4\",\"icon\":\"https://github.githubassets.com/favicons/favicon.svg\"}}],[\"hr\",{}],[\"code\",{\"code\":\"<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xmlns:th=\\\"http://www.thymeleaf.org\\\"\\n      xmlns:sec=\\\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity4\\\">\\n\\n<head>\\n    <title>codenerve.com - Welcome!</title>\\n    <meta charset=\\\"UTF-8\\\">\\n    <title>Admin</title>\\n    <link href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\\\" rel=\\\"stylesheet\\\">\\n    <link rel=\\\"stylesheet\\\" href=\\\"css/style.css\\\">\\n</head>\\n    <body>\\n        <h1 th:inline=\\\"text\\\">Hello [[${#httpServletRequest.remoteUser}]]!</h1>\\n\\n        <div>\\n             Custom administrator page.\\n        </div>\\n\\n        <br/>\\n        <form th:action=\\\"@{/logout}\\\" method=\\\"post\\\">\\n            <input type=\\\"submit\\\" value=\\\"Sign Out\\\"/>\\n        </form>\\n    </body>\\n</html>\",\"language\":\"html\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/resources/templates/admin.html\\\">admin.html</a>\"}],[\"code\",{\"code\":\"@Configuration\\npublic class MvcConfig extends WebMvcConfigurerAdapter {\\n\\n    @Override\\n    public void addViewControllers(ViewControllerRegistry registry) {\\n        registry.addViewController(\\\"/\\\").setViewName(\\\"login\\\");\\n        registry.addViewController(\\\"/index\\\").setViewName(\\\"index\\\");\\n        registry.addViewController(\\\"/admin\\\").setViewName(\\\"admin\\\");\\n        registry.addViewController(\\\"/login\\\").setViewName(\\\"login\\\");\\n    }\\n}\",\"language\":\"java\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/MvcConfig.java\\\">MvcConfig.java</a>\"}],[\"code\",{\"code\":\".antMatchers(\\\"/admin\\\").hasRole(\\\"ADMIN\\\")\",\"language\":\"java\"}],[\"code\",{\"code\":\".successHandler(authenticationSuccessHandler)\",\"language\":\"java\"}],[\"code\",{\"code\":\"@Configuration\\n@EnableWebSecurity\\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\\n\\n    private AuthenticationSuccessHandler authenticationSuccessHandler;\\n\\n    @Autowired\\n    public WebSecurityConfig(AuthenticationSuccessHandler authenticationSuccessHandler) {\\n        this.authenticationSuccessHandler = authenticationSuccessHandler;\\n    }\\n\\n    @Override\\n    protected void configure(HttpSecurity http) throws Exception {\\n        http\\n                .authorizeRequests()\\n                .antMatchers( \\\"/css/**\\\").permitAll()\\n                .antMatchers(\\\"/admin\\\").hasRole(\\\"ADMIN\\\")\\n                .anyRequest().authenticated()\\n                .and()\\n                .formLogin()\\n                .loginPage(\\\"/login\\\")\\n                .successHandler(authenticationSuccessHandler)\\n                .permitAll()\\n                .and()\\n                .logout()\\n                .permitAll()\\n                .and().csrf().disable(); // we'll enable this in a later blog post\\n    }\\n\\n    @Autowired\\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\\n        auth\\n                .inMemoryAuthentication()\\n                .withUser(\\\"user\\\").password(\\\"pass\\\").roles(\\\"USER\\\")\\n                .and()\\n                .withUser(\\\"admin\\\").password(\\\"pass\\\").roles(\\\"ADMIN\\\");\\n    }\\n}\",\"language\":\"java\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/WebSecurityConfig.java\\\">WebSecurityConfig.java</a>\"}],[\"code\",{\"code\":\"@Configuration\\npublic class CustomAuthenticationSuccessHandler implements AuthenticationSuccessHandler {\\n\\n\\n    @Override\\n    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {\\n\\n        Set<String> roles = AuthorityUtils.authorityListToSet(authentication.getAuthorities());\\n\\n        if (roles.contains(\\\"ROLE_ADMIN\\\")) {\\n            httpServletResponse.sendRedirect(\\\"/admin\\\");\\n        } else {\\n            httpServletResponse.sendRedirect(\\\"/index\\\");\\n        }\\n    }\\n}\",\"language\":\"java\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/CustomAuthenticationSuccessHandler.java\\\">CustomAuthenticationSuccessHandler.java</a>\"}],[\"code\",{\"code\":\"server.port=8081\",\"language\":\"bash\"}],[\"embed\",{\"url\":\"https://www.youtube.com/watch?v=jTku174kytg&feature=youtu.be\",\"html\":\"<iframe width=\\\"459\\\" height=\\\"344\\\" src=\\\"https://www.youtube.com/embed/jTku174kytg?feature=oembed\\\" frameborder=\\\"0\\\" allow=\\\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\\\" allowfullscreen></iframe>\",\"type\":\"video\",\"metadata\":{\"provider_name\":\"YouTube\",\"author_url\":\"https://www.youtube.com/channel/UCjaYB7yCUJ7APLHAtknY6sA\",\"thumbnail_height\":360,\"thumbnail_width\":480,\"width\":459,\"height\":344,\"title\":\"Spring Security – Redirect based on User Roles\",\"version\":\"1.0\",\"author_name\":\"codenerve.com\",\"thumbnail_url\":\"https://i.ytimg.com/vi/jTku174kytg/hqdefault.jpg\",\"provider_url\":\"https://www.youtube.com/\"}}],[\"code\",{\"code\":\"@Test\\n@WithMockUser(roles = \\\"USER\\\")\\npublic void loginWithRoleUserThenExpectAdminPageForbidden() throws Exception {\\n\\tmockMvc.perform(get(\\\"/admin\\\"))\\n\\t\\t\\t.andExpect(status().isForbidden());\\n}\\n\\n@Test\\n@WithMockUser(roles = \\\"ADMIN\\\")\\npublic void loginWithRoleAdminThenExpectAdminContent() throws Exception {\\n\\tmockMvc.perform(get(\\\"/admin\\\"))\\n\\t\\t\\t.andExpect(status().isOk())\\n\\t\\t\\t.andExpect(content().string(containsString(\\\"Custom administrator page.\\\")));\\n}\\n\\n@Test\\npublic void loginWithRoleUserThenExpectIndexPageRedirect() throws Exception {\\n\\tFormLoginRequestBuilder login = formLogin()\\n\\t\\t\\t.user(\\\"user\\\")\\n\\t\\t\\t.password(\\\"pass\\\");\\n\\n\\tmockMvc.perform(login)\\n\\t\\t\\t.andExpect(authenticated().withUsername(\\\"user\\\"))\\n\\t\\t\\t.andExpect(redirectedUrl(\\\"/index\\\"));\\n}\\n\\n@Test\\npublic void loginWithRoleAdminThenExpectAdminPageRedirect() throws Exception {\\n\\tFormLoginRequestBuilder login = formLogin()\\n\\t\\t\\t.user(\\\"admin\\\")\\n\\t\\t\\t.password(\\\"pass\\\");\\n\\n\\tmockMvc.perform(login)\\n\\t\\t\\t.andExpect(authenticated().withUsername(\\\"admin\\\"))\\n\\t\\t\\t.andExpect(redirectedUrl(\\\"/admin\\\"));\\n}\",\"language\":\"java\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/test/java/com/codenerve/spring/sec/ApplicationTests.java\\\">ApplicationTests.java</a>\"}]],\"markups\":[[\"a\",[\"href\",\"https://www.codenerve.com/spring-security-basic-login-form/\"]],[\"a\",[\"href\",\"https://www.codenerve.com/spring-security-thymeleaf-extras/\",\"rel\",\"noopener noreferrer\"]],[\"strong\"],[\"em\"]],\"sections\":[[1,\"p\",[[0,[],0,\"So far we’ve built a basic spring boot application, enabled spring security and built a \"],[0,[0],1,\"basic login form\"],[0,[],0,\". In the last lesson, we expanded on the first lesson by adding different user roles and the ability to show and hide front-end content based on these roles \"],[0,[1],1,\"(User Roles and Thymeleaf Extras).\"]]],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Today, we’ll be looking at redirecting users with different roles to different pages after they log in.\"]]],[1,\"blockquote\",[[0,[2],1,\"Source code for this example can be found on github:\"]]],[10,0],[10,1],[1,\"p\",[[0,[],0,\"Some files are already set up for you from the previous lesson: \"],[0,[1],1,\"Spring Security – User Roles and Thymeleaf Extras\"],[0,[],0,\". Please start here or check out the complete code from the link above.\"]]],[1,\"h3\",[[0,[],0,\"Admin.html\"]]],[1,\"p\",[[0,[],0,\"Following on from our previous example, we have now created a new HTML file called Admin.html. This is the page we will redirect admins to when they log in.\"]]],[10,2],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"MvcConfig\"]]],[1,\"p\",[[0,[],0,\"Now, to serve the new \"],[0,[3],1,\"admin.html\"],[0,[],0,\" page, we must add this page to our \"],[0,[3],1,\"MvcConfig\"],[0,[],0,\".\"]]],[1,\"p\",[[0,[],0,\"As with the previous examples, this is done by creating a class, extending \"],[0,[3],1,\"WebMvcConfigurerAdapter\"],[0,[],0,\" and overriding the \"],[0,[3],1,\"addViewControllers\"],[0,[],0,\" method. This time adding all the earlier pages of our app and the new admin page:\"]]],[10,3],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"WebSecurityConfig\"]]],[1,\"p\",[[0,[2],1,\"The Constructor\"]]],[1,\"p\",[[0,[],0,\"In order to decide what to do when different user roles login. We have created a new field of type \"],[0,[3],1,\"AuthenticationSuccessHandler\"],[0,[],0,\". We’re setting this new configuration bean via constructor injection.\"]]],[1,\"p\",[[0,[2],1,\"configure method\"]]],[1,\"p\",[[0,[],0,\"This method is in charge of overriding and configuring \"],[0,[3],1,\"HttpSecurity\"],[0,[],0,\" explicitly. From the last example, we have added two lines.\"]]],[1,\"p\",[[0,[],0,\"First, we’ve added a new antMatcher under the \"],[0,[3],1,\"authorizeRequests\"],[0,[],0,\" section, and we’ve told spring security only to allow a user with the ‘ADMIN’ role access to all endpoints starting with ‘/admin’:\"]]],[10,4],[1,\"p\",[[0,[],0,\"Secondly, we’ve added our \"],[0,[3],1,\"CustomAuthenticationSuccessHandler\"],[0,[],0,\" under the formLogin section to tell spring security to ask this \"],[0,[3],1,\"CustomAuthenticationSuccessHandler\"],[0,[],0,\" what to do when a successful login occurs:\"]]],[10,5],[1,\"p\",[[0,[2],1,\"configureGlobal method\"]]],[1,\"p\",[[0,[],0,\"The \"],[0,[3],1,\"configureGlobal\"],[0,[],0,\" method is our in-memory registry of users. We’ve added two users. One with the primary ‘USER’ role and the other with the ‘ADMIN’ role.\"]]],[1,\"p\",[[0,[2],1,\"Full example:\"]]],[10,6],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"CustomAuthenticationSuccessHandler\"]]],[1,\"p\",[[0,[],0,\"As you can see from our sample code below this class implements springs \"],[0,[3],1,\"AuthenticationSuccessHandler\"],[0,[],0,\" class and overrides the \"],[0,[3],1,\"onAuthenticationSuccess\"],[0,[],0,\" method.\"]]],[1,\"p\",[[0,[],0,\"Once a user is successfully logged in, this method is called and within this method, the user’s role is checked. If the user’s role is admin we redirect to the ‘/admin’ HTTP endpoint otherwise we redirect them to the ‘/index’ endpoint.\"]]],[1,\"p\",[[0,[],0,\"At this point, our \"],[0,[3],1,\"MvcConfig\"],[0,[],0,\" takes over and serves the correct HTML page based on the viewController we created previously.\"]]],[10,7],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"Demo\"]]],[1,\"p\",[[0,[],0,\"To run the demo, open the \"],[0,[3],1,\"Application\"],[0,[],0,\" class and right-click run. To start the example, port 8080 will need to be available on your machine. If it is not, you can change this default in the application.properties file using:\"]]],[10,8],[1,\"p\",[[0,[],0,\"Set this to whatever value you wish.\"]]],[10,9],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"Testing\"]]],[1,\"p\",[[0,[],0,\"As always we have amended an added some additonal tests to conver a new functionality\"]]],[10,10],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"Next\"]]],[1,\"p\",[[0,[],0,\"Next up, we will be covering spring security’s Cross Site Request Forgery (CSRF) protection.\"]]]]}","html":"<p>So far we’ve built a basic spring boot application, enabled spring security and built a <a href=\"https://www.codenerve.com/spring-security-basic-login-form/\">basic login form</a>. In the last lesson, we expanded on the first lesson by adding different user roles and the ability to show and hide front-end content based on these roles <a href=\"https://www.codenerve.com/spring-security-thymeleaf-extras/\" rel=\"noopener noreferrer\">(User Roles and Thymeleaf Extras).</a></p><p></p><p>Today, we’ll be looking at redirecting users with different roles to different pages after they log in.</p><blockquote><strong>Source code for this example can be found on github:</strong></blockquote><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/codenerve-com/spring-security/tree/3.redirect-based-on-role\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">codenerve-com/spring-security</div><div class=\"kg-bookmark-description\">An introduction to spring security. Contribute to codenerve-com/spring-security development by creating an account on GitHub.</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicons/favicon.svg\"><span class=\"kg-bookmark-author\">codenerve-com</span><span class=\"kg-bookmark-publisher\">GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://avatars3.githubusercontent.com/u/58404900?s=400&amp;v=4\"></div></a></figure><hr><p>Some files are already set up for you from the previous lesson: <a href=\"https://www.codenerve.com/spring-security-thymeleaf-extras/\" rel=\"noopener noreferrer\">Spring Security – User Roles and Thymeleaf Extras</a>. Please start here or check out the complete code from the link above.</p><h3 id=\"admin-html\">Admin.html</h3><p>Following on from our previous example, we have now created a new HTML file called Admin.html. This is the page we will redirect admins to when they log in.</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-html\">&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\"\n      xmlns:sec=\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity4\"&gt;\n\n&lt;head&gt;\n    &lt;title&gt;codenerve.com - Welcome!&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Admin&lt;/title&gt;\n    &lt;link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\"&gt;\n    &lt;link rel=\"stylesheet\" href=\"css/style.css\"&gt;\n&lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1 th:inline=\"text\"&gt;Hello [[${#httpServletRequest.remoteUser}]]!&lt;/h1&gt;\n\n        &lt;div&gt;\n             Custom administrator page.\n        &lt;/div&gt;\n\n        &lt;br/&gt;\n        &lt;form th:action=\"@{/logout}\" method=\"post\"&gt;\n            &lt;input type=\"submit\" value=\"Sign Out\"/&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;</code></pre><figcaption><a href=\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/resources/templates/admin.html\">admin.html</a></figcaption></figure><p></p><h3 id=\"mvcconfig\">MvcConfig</h3><p>Now, to serve the new <em>admin.html</em> page, we must add this page to our <em>MvcConfig</em>.</p><p>As with the previous examples, this is done by creating a class, extending <em>WebMvcConfigurerAdapter</em> and overriding the <em>addViewControllers</em> method. This time adding all the earlier pages of our app and the new admin page:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Configuration\npublic class MvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"login\");\n        registry.addViewController(\"/index\").setViewName(\"index\");\n        registry.addViewController(\"/admin\").setViewName(\"admin\");\n        registry.addViewController(\"/login\").setViewName(\"login\");\n    }\n}</code></pre><figcaption><a href=\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/MvcConfig.java\">MvcConfig.java</a></figcaption></figure><p></p><h3 id=\"websecurityconfig\">WebSecurityConfig</h3><p><strong>The Constructor</strong></p><p>In order to decide what to do when different user roles login. We have created a new field of type <em>AuthenticationSuccessHandler</em>. We’re setting this new configuration bean via constructor injection.</p><p><strong>configure method</strong></p><p>This method is in charge of overriding and configuring <em>HttpSecurity</em> explicitly. From the last example, we have added two lines.</p><p>First, we’ve added a new antMatcher under the <em>authorizeRequests</em> section, and we’ve told spring security only to allow a user with the ‘ADMIN’ role access to all endpoints starting with ‘/admin’:</p><pre><code class=\"language-java\">.antMatchers(\"/admin\").hasRole(\"ADMIN\")</code></pre><p>Secondly, we’ve added our <em>CustomAuthenticationSuccessHandler</em> under the formLogin section to tell spring security to ask this <em>CustomAuthenticationSuccessHandler</em> what to do when a successful login occurs:</p><pre><code class=\"language-java\">.successHandler(authenticationSuccessHandler)</code></pre><p><strong>configureGlobal method</strong></p><p>The <em>configureGlobal</em> method is our in-memory registry of users. We’ve added two users. One with the primary ‘USER’ role and the other with the ‘ADMIN’ role.</p><p><strong>Full example:</strong></p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    private AuthenticationSuccessHandler authenticationSuccessHandler;\n\n    @Autowired\n    public WebSecurityConfig(AuthenticationSuccessHandler authenticationSuccessHandler) {\n        this.authenticationSuccessHandler = authenticationSuccessHandler;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                .antMatchers( \"/css/**\").permitAll()\n                .antMatchers(\"/admin\").hasRole(\"ADMIN\")\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginPage(\"/login\")\n                .successHandler(authenticationSuccessHandler)\n                .permitAll()\n                .and()\n                .logout()\n                .permitAll()\n                .and().csrf().disable(); // we'll enable this in a later blog post\n    }\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n                .inMemoryAuthentication()\n                .withUser(\"user\").password(\"pass\").roles(\"USER\")\n                .and()\n                .withUser(\"admin\").password(\"pass\").roles(\"ADMIN\");\n    }\n}</code></pre><figcaption><a href=\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/WebSecurityConfig.java\">WebSecurityConfig.java</a></figcaption></figure><p></p><h3 id=\"customauthenticationsuccesshandler\">CustomAuthenticationSuccessHandler</h3><p>As you can see from our sample code below this class implements springs <em>AuthenticationSuccessHandler</em> class and overrides the <em>onAuthenticationSuccess</em> method.</p><p>Once a user is successfully logged in, this method is called and within this method, the user’s role is checked. If the user’s role is admin we redirect to the ‘/admin’ HTTP endpoint otherwise we redirect them to the ‘/index’ endpoint.</p><p>At this point, our <em>MvcConfig</em> takes over and serves the correct HTML page based on the viewController we created previously.</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Configuration\npublic class CustomAuthenticationSuccessHandler implements AuthenticationSuccessHandler {\n\n\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {\n\n        Set&lt;String&gt; roles = AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n\n        if (roles.contains(\"ROLE_ADMIN\")) {\n            httpServletResponse.sendRedirect(\"/admin\");\n        } else {\n            httpServletResponse.sendRedirect(\"/index\");\n        }\n    }\n}</code></pre><figcaption><a href=\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/CustomAuthenticationSuccessHandler.java\">CustomAuthenticationSuccessHandler.java</a></figcaption></figure><p></p><h3 id=\"demo\">Demo</h3><p>To run the demo, open the <em>Application</em> class and right-click run. To start the example, port 8080 will need to be available on your machine. If it is not, you can change this default in the application.properties file using:</p><pre><code class=\"language-bash\">server.port=8081</code></pre><p>Set this to whatever value you wish.</p><figure class=\"kg-card kg-embed-card\"><iframe width=\"459\" height=\"344\" src=\"https://www.youtube.com/embed/jTku174kytg?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe></figure><p></p><h3 id=\"testing\">Testing</h3><p>As always we have amended an added some additonal tests to conver a new functionality</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">@Test\n@WithMockUser(roles = \"USER\")\npublic void loginWithRoleUserThenExpectAdminPageForbidden() throws Exception {\n\tmockMvc.perform(get(\"/admin\"))\n\t\t\t.andExpect(status().isForbidden());\n}\n\n@Test\n@WithMockUser(roles = \"ADMIN\")\npublic void loginWithRoleAdminThenExpectAdminContent() throws Exception {\n\tmockMvc.perform(get(\"/admin\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"Custom administrator page.\")));\n}\n\n@Test\npublic void loginWithRoleUserThenExpectIndexPageRedirect() throws Exception {\n\tFormLoginRequestBuilder login = formLogin()\n\t\t\t.user(\"user\")\n\t\t\t.password(\"pass\");\n\n\tmockMvc.perform(login)\n\t\t\t.andExpect(authenticated().withUsername(\"user\"))\n\t\t\t.andExpect(redirectedUrl(\"/index\"));\n}\n\n@Test\npublic void loginWithRoleAdminThenExpectAdminPageRedirect() throws Exception {\n\tFormLoginRequestBuilder login = formLogin()\n\t\t\t.user(\"admin\")\n\t\t\t.password(\"pass\");\n\n\tmockMvc.perform(login)\n\t\t\t.andExpect(authenticated().withUsername(\"admin\"))\n\t\t\t.andExpect(redirectedUrl(\"/admin\"));\n}</code></pre><figcaption><a href=\"https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/test/java/com/codenerve/spring/sec/ApplicationTests.java\">ApplicationTests.java</a></figcaption></figure><p></p><h3 id=\"next\">Next</h3><p>Next up, we will be covering spring security’s Cross Site Request Forgery (CSRF) protection.</p>","comment_id":"1543","plaintext":"So far we’ve built a basic spring boot application, enabled spring security and\nbuilt a basic login form\n[https://www.codenerve.com/spring-security-basic-login-form/]. In the last\nlesson, we expanded on the first lesson by adding different user roles and the\nability to show and hide front-end content based on these roles (User Roles and\nThymeleaf Extras). [https://www.codenerve.com/spring-security-thymeleaf-extras/]\n\n\n\nToday, we’ll be looking at redirecting users with different roles to different\npages after they log in.\n\n> Source code for this example can be found on github:\ncodenerve-com/spring-securityAn introduction to spring security. Contribute to\ncodenerve-com/spring-security development by creating an account on GitHub.\ncodenerve-comGitHub\n[https://github.com/codenerve-com/spring-security/tree/3.redirect-based-on-role]\n--------------------------------------------------------------------------------\n\nSome files are already set up for you from the previous lesson: Spring Security\n– User Roles and Thymeleaf Extras\n[https://www.codenerve.com/spring-security-thymeleaf-extras/]. Please start here\nor check out the complete code from the link above.\n\nAdmin.html\nFollowing on from our previous example, we have now created a new HTML file\ncalled Admin.html. This is the page we will redirect admins to when they log in.\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\"\n      xmlns:sec=\"http://www.thymeleaf.org/thymeleaf-extras-springsecurity4\">\n\n<head>\n    <title>codenerve.com - Welcome!</title>\n    <meta charset=\"UTF-8\">\n    <title>Admin</title>\n    <link href=\"https://fonts.googleapis.com/css?family=Open+Sans:400,700\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"css/style.css\">\n</head>\n    <body>\n        <h1 th:inline=\"text\">Hello [[${#httpServletRequest.remoteUser}]]!</h1>\n\n        <div>\n             Custom administrator page.\n        </div>\n\n        <br/>\n        <form th:action=\"@{/logout}\" method=\"post\">\n            <input type=\"submit\" value=\"Sign Out\"/>\n        </form>\n    </body>\n</html>\n\nadmin.html\n[https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/resources/templates/admin.html]\n\nMvcConfig\nNow, to serve the new admin.html page, we must add this page to our MvcConfig.\n\nAs with the previous examples, this is done by creating a class, extending \nWebMvcConfigurerAdapter and overriding the addViewControllers method. This time\nadding all the earlier pages of our app and the new admin page:\n\n@Configuration\npublic class MvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"login\");\n        registry.addViewController(\"/index\").setViewName(\"index\");\n        registry.addViewController(\"/admin\").setViewName(\"admin\");\n        registry.addViewController(\"/login\").setViewName(\"login\");\n    }\n}\n\nMvcConfig.java\n[https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/MvcConfig.java]\n\nWebSecurityConfig\nThe Constructor\n\nIn order to decide what to do when different user roles login. We have created a\nnew field of type AuthenticationSuccessHandler. We’re setting this new\nconfiguration bean via constructor injection.\n\nconfigure method\n\nThis method is in charge of overriding and configuring HttpSecurity explicitly.\nFrom the last example, we have added two lines.\n\nFirst, we’ve added a new antMatcher under the authorizeRequests section, and\nwe’ve told spring security only to allow a user with the ‘ADMIN’ role access to\nall endpoints starting with ‘/admin’:\n\n.antMatchers(\"/admin\").hasRole(\"ADMIN\")\n\nSecondly, we’ve added our CustomAuthenticationSuccessHandler under the formLogin\nsection to tell spring security to ask this CustomAuthenticationSuccessHandler \nwhat to do when a successful login occurs:\n\n.successHandler(authenticationSuccessHandler)\n\nconfigureGlobal method\n\nThe configureGlobal method is our in-memory registry of users. We’ve added two\nusers. One with the primary ‘USER’ role and the other with the ‘ADMIN’ role.\n\nFull example:\n\n@Configuration\n@EnableWebSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    private AuthenticationSuccessHandler authenticationSuccessHandler;\n\n    @Autowired\n    public WebSecurityConfig(AuthenticationSuccessHandler authenticationSuccessHandler) {\n        this.authenticationSuccessHandler = authenticationSuccessHandler;\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n                .authorizeRequests()\n                .antMatchers( \"/css/**\").permitAll()\n                .antMatchers(\"/admin\").hasRole(\"ADMIN\")\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginPage(\"/login\")\n                .successHandler(authenticationSuccessHandler)\n                .permitAll()\n                .and()\n                .logout()\n                .permitAll()\n                .and().csrf().disable(); // we'll enable this in a later blog post\n    }\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n                .inMemoryAuthentication()\n                .withUser(\"user\").password(\"pass\").roles(\"USER\")\n                .and()\n                .withUser(\"admin\").password(\"pass\").roles(\"ADMIN\");\n    }\n}\n\nWebSecurityConfig.java\n[https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/WebSecurityConfig.java]\n\nCustomAuthenticationSuccessHandler\nAs you can see from our sample code below this class implements springs \nAuthenticationSuccessHandler class and overrides the onAuthenticationSuccess \nmethod.\n\nOnce a user is successfully logged in, this method is called and within this\nmethod, the user’s role is checked. If the user’s role is admin we redirect to\nthe ‘/admin’ HTTP endpoint otherwise we redirect them to the ‘/index’ endpoint.\n\nAt this point, our MvcConfig takes over and serves the correct HTML page based\non the viewController we created previously.\n\n@Configuration\npublic class CustomAuthenticationSuccessHandler implements AuthenticationSuccessHandler {\n\n\n    @Override\n    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {\n\n        Set<String> roles = AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n\n        if (roles.contains(\"ROLE_ADMIN\")) {\n            httpServletResponse.sendRedirect(\"/admin\");\n        } else {\n            httpServletResponse.sendRedirect(\"/index\");\n        }\n    }\n}\n\nCustomAuthenticationSuccessHandler.java\n[https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/main/java/com/codenerve/spring/sec/config/CustomAuthenticationSuccessHandler.java]\n\nDemo\nTo run the demo, open the Application class and right-click run. To start the\nexample, port 8080 will need to be available on your machine. If it is not, you\ncan change this default in the application.properties file using:\n\nserver.port=8081\n\nSet this to whatever value you wish.\n\n\n\nTesting\nAs always we have amended an added some additonal tests to conver a new\nfunctionality\n\n@Test\n@WithMockUser(roles = \"USER\")\npublic void loginWithRoleUserThenExpectAdminPageForbidden() throws Exception {\n\tmockMvc.perform(get(\"/admin\"))\n\t\t\t.andExpect(status().isForbidden());\n}\n\n@Test\n@WithMockUser(roles = \"ADMIN\")\npublic void loginWithRoleAdminThenExpectAdminContent() throws Exception {\n\tmockMvc.perform(get(\"/admin\"))\n\t\t\t.andExpect(status().isOk())\n\t\t\t.andExpect(content().string(containsString(\"Custom administrator page.\")));\n}\n\n@Test\npublic void loginWithRoleUserThenExpectIndexPageRedirect() throws Exception {\n\tFormLoginRequestBuilder login = formLogin()\n\t\t\t.user(\"user\")\n\t\t\t.password(\"pass\");\n\n\tmockMvc.perform(login)\n\t\t\t.andExpect(authenticated().withUsername(\"user\"))\n\t\t\t.andExpect(redirectedUrl(\"/index\"));\n}\n\n@Test\npublic void loginWithRoleAdminThenExpectAdminPageRedirect() throws Exception {\n\tFormLoginRequestBuilder login = formLogin()\n\t\t\t.user(\"admin\")\n\t\t\t.password(\"pass\");\n\n\tmockMvc.perform(login)\n\t\t\t.andExpect(authenticated().withUsername(\"admin\"))\n\t\t\t.andExpect(redirectedUrl(\"/admin\"));\n}\n\nApplicationTests.java\n[https://github.com/codenerve-com/spring-security/blob/3.redirect-based-on-role/src/test/java/com/codenerve/spring/sec/ApplicationTests.java]\n\nNext\nNext up, we will be covering spring security’s Cross Site Request Forgery (CSRF)\nprotection.","feature_image":"https://images.unsplash.com/photo-1542850131-f8059d51b857?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"1","created_at":"2019-05-03 21:23:35","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-24 23:25:20","updated_by":"1","published_at":"2019-05-03 21:23:35","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aede","uuid":"e879d42a-71f1-443a-9be0-e9aaa1daf7f4","title":"Lesson 11 - Primitive types vs wrapper classes","slug":"lesson-11-primitive-types-vs-wrapper-classes","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_row_inner][vc_column_inner][us_socials gap=&#8221;0&#8243; css=&#8221;%7B%22default%22%3A%7B%22font-size%22%3A%2220px%22%7D%7D&#8221;][vc_column_text]Ok, In this lesson we will cover the differences between Primitive types and Object Types. And of course, first of all, learn what Object types are![/vc_column_text][us_separator size=&#8221;small&#8221; icon=&#8221;fas|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][us_iconbox icon=&#8221;fas|code&#8221; iconpos=&#8221;left&#8221; size=&#8221;48px&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can either use the basic <a href=\\\"/content/images/wordpress/2013/12/starter-project.zip\\\">starter project</a> or you can purchase the code examples for the entire lesson series <a title=\\\"Shop\\\" href=\\\"https://www.codenerve.com/shop/\\\">here</a>. If your using the starter project then just follow the steps to compile the code example for this lesson.[/us_iconbox][us_separator icon=&#8221;fas|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\\n<h4>Object Types</h4>\\n<p>So far in our lessons, we have been using mostly primitive types. But there is another type that is at the core of java called objects. Java is considered to be an object-oriented programming language. We&#8217;ll cover this in depth in the intermediate course, but for now all we need to know is that we can create files; called classes which are a blueprint that represent something in the real world. We can create instances of these classes which contain state and behaviours called objects.</p>\\n<p>An example could be a class called &#8216;Dog&#8217;. A dog has state such as a name, breed, colour etc. It also has behaviours such as barking, running, eating etc. These states and behaviours<span style=\\\"background-color: #f5f6f5;\\\"> </span>can all be represented in the blueprint (the class) but all Dogs are different, so we create instances of Dogs (A Dog Object) with the various states and behaviours.</p>\\n<p>In fact, in the last Date &amp; Time lesson we created an object using the keyword &#8216;new&#8217;:</p>\\n<pre class=\\\"lang:java decode:true\\\">new Date()</pre>\\n<p>Granted this one is pretty boring, but the concept is the same. One of the behaviours of a Date is that it contains a time. And we were able to get that using the &#8216;getTime()&#8217; method:</p>\\n<pre class=\\\"lang:java decode:true\\\">new Date().getTime()</pre>\\n<p>(If you are not sure what a method is. Have a look at <a href=\\\"https://www.codenerve.com/beginner-java/lesson-5-methods/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">lesson 5 on methods</a>)</p>\\n[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]\\n<h4>Wrapper Classes</h4>\\n<p>Simply put, wrapper classes in java provide a way for us to convert a primitive into an object and object back into a primitive.</p>\\n<p>Converting a primitive into an object unlocks a bunch of methods that we can use. Lets take a look:[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]\\n<table style=\\\"width: 100%;\\\">\\n<tbody>\\n<tr>\\n<th>Primitive Type</th>\\n<th>Wrapper Class</th>\\n</tr>\\n<tr>\\n<td>char</td>\\n<td>Character</td>\\n</tr>\\n<tr>\\n<td>byte</td>\\n<td>Byte</td>\\n</tr>\\n<tr>\\n<td>short</td>\\n<td>Short</td>\\n</tr>\\n<tr>\\n<td>int</td>\\n<td>Integer</td>\\n</tr>\\n<tr>\\n<td>long</td>\\n<td>Long</td>\\n</tr>\\n<tr>\\n<td>float</td>\\n<td>Float</td>\\n</tr>\\n<tr>\\n<td>double</td>\\n<td>Double</td>\\n</tr>\\n</tbody>\\n</table>\\n[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]converting from and to[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_sharing providers=&#8221;facebook,twitter,gplus,linkedin&#8221;][vc_column_text]\\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]<del>&#8211; what is a wrapper class?</del><br />\\n<del>&#8211; table of equivalent types: http://www.javatpoint.com/wrapper-class-in-java</del><br />\\n&#8211; converting from and to<br />\\n&#8211; autoboxing<br />\\n-pros and cons:</p>\\n<p>Pros</p>\\n<ul>\\n<li>can be used with generics</li>\\n<li>supports many additional methods.</li>\\n</ul>\\n<p>Cons</p>\\n<ul>\\n<li>uses more cpu</li>\\n<li>uses more memory</li>\\n<li>implies the value can be <code>null</code></li>\\n<li>is longer to type in some cases.</li>\\n</ul>\\n<p>&#8211; conclusions[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_row_inner][vc_column_inner][us_socials gap=&#8221;0&#8243; css=&#8221;%7B%22default%22%3A%7B%22font-size%22%3A%2220px%22%7D%7D&#8221;][vc_column_text]Ok, In this lesson we will cover the differences between Primitive types and Object Types. And of course, first of all, learn what Object types are![/vc_column_text][us_separator size=&#8221;small&#8221; icon=&#8221;fas|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][us_iconbox icon=&#8221;fas|code&#8221; iconpos=&#8221;left&#8221; size=&#8221;48px&#8221; title=&#8221;Downloads&#8221; alignment=&#8221;left&#8221;]To get started you can either use the basic <a href=\"/content/images/wordpress/2013/12/starter-project.zip\">starter project</a> or you can purchase the code examples for the entire lesson series <a title=\"Shop\" href=\"https://www.codenerve.com/shop/\">here</a>. If your using the starter project then just follow the steps to compile the code example for this lesson.[/us_iconbox][us_separator icon=&#8221;fas|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\n<h4>Object Types</h4>\n<p>So far in our lessons, we have been using mostly primitive types. But there is another type that is at the core of java called objects. Java is considered to be an object-oriented programming language. We&#8217;ll cover this in depth in the intermediate course, but for now all we need to know is that we can create files; called classes which are a blueprint that represent something in the real world. We can create instances of these classes which contain state and behaviours called objects.</p>\n<p>An example could be a class called &#8216;Dog&#8217;. A dog has state such as a name, breed, colour etc. It also has behaviours such as barking, running, eating etc. These states and behaviours<span style=\"background-color: #f5f6f5;\"> </span>can all be represented in the blueprint (the class) but all Dogs are different, so we create instances of Dogs (A Dog Object) with the various states and behaviours.</p>\n<p>In fact, in the last Date &amp; Time lesson we created an object using the keyword &#8216;new&#8217;:</p>\n<pre class=\"lang:java decode:true\">new Date()</pre>\n<p>Granted this one is pretty boring, but the concept is the same. One of the behaviours of a Date is that it contains a time. And we were able to get that using the &#8216;getTime()&#8217; method:</p>\n<pre class=\"lang:java decode:true\">new Date().getTime()</pre>\n<p>(If you are not sure what a method is. Have a look at <a href=\"https://www.codenerve.com/beginner-java/lesson-5-methods/\" target=\"_blank\" rel=\"noopener noreferrer\">lesson 5 on methods</a>)</p>\n[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]\n<h4>Wrapper Classes</h4>\n<p>Simply put, wrapper classes in java provide a way for us to convert a primitive into an object and object back into a primitive.</p>\n<p>Converting a primitive into an object unlocks a bunch of methods that we can use. Lets take a look:[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]\n<table style=\"width: 100%;\">\n<tbody>\n<tr>\n<th>Primitive Type</th>\n<th>Wrapper Class</th>\n</tr>\n<tr>\n<td>char</td>\n<td>Character</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>Byte</td>\n</tr>\n<tr>\n<td>short</td>\n<td>Short</td>\n</tr>\n<tr>\n<td>int</td>\n<td>Integer</td>\n</tr>\n<tr>\n<td>long</td>\n<td>Long</td>\n</tr>\n<tr>\n<td>float</td>\n<td>Float</td>\n</tr>\n<tr>\n<td>double</td>\n<td>Double</td>\n</tr>\n</tbody>\n</table>\n[/vc_column_text][us_separator icon=&#8221;material|code&#8221; show_line=&#8221;1&#8243; line_width=&#8221;default&#8221;][vc_column_text]converting from and to[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_sharing providers=&#8221;facebook,twitter,gplus,linkedin&#8221;][vc_column_text]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]<del>&#8211; what is a wrapper class?</del><br />\n<del>&#8211; table of equivalent types: http://www.javatpoint.com/wrapper-class-in-java</del><br />\n&#8211; converting from and to<br />\n&#8211; autoboxing<br />\n-pros and cons:</p>\n<p>Pros</p>\n<ul>\n<li>can be used with generics</li>\n<li>supports many additional methods.</li>\n</ul>\n<p>Cons</p>\n<ul>\n<li>uses more cpu</li>\n<li>uses more memory</li>\n<li>implies the value can be <code>null</code></li>\n<li>is longer to type in some cases.</li>\n</ul>\n<p>&#8211; conclusions[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"1084","plaintext":"[vc_row][vc_column][vc_row_inner][vc_column_inner][us_socials gap=”0″\ncss=”%7B%22default%22%3A%7B%22font-size%22%3A%2220px%22%7D%7D”][vc_column_text]Ok,\nIn this lesson we will cover the differences between Primitive types and Object\nTypes. And of course, first of all, learn what Object types\nare![/vc_column_text][us_separator size=”small” icon=”fas|code” show_line=”1″\nline_width=”default”][us_iconbox icon=”fas|code” iconpos=”left” size=”48px”\ntitle=”Downloads” alignment=”left”]To get started you can either use the basic \nstarter project [/content/images/wordpress/2013/12/starter-project.zip] or you\ncan purchase the code examples for the entire lesson series here\n[https://www.codenerve.com/shop/]. If your using the starter project then just\nfollow the steps to compile the code example for this\nlesson.[/us_iconbox][us_separator icon=”fas|code” show_line=”1″\nline_width=”default”][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][vc_column_text]\nObject Types\nSo far in our lessons, we have been using mostly primitive types. But there is\nanother type that is at the core of java called objects. Java is considered to\nbe an object-oriented programming language. We’ll cover this in depth in the\nintermediate course, but for now all we need to know is that we can create\nfiles; called classes which are a blueprint that represent something in the real\nworld. We can create instances of these classes which contain state and\nbehaviours called objects.\n\nAn example could be a class called ‘Dog’. A dog has state such as a name, breed,\ncolour etc. It also has behaviours such as barking, running, eating etc. These\nstates and behaviourscan all be represented in the blueprint (the class) but all\nDogs are different, so we create instances of Dogs (A Dog Object) with the\nvarious states and behaviours.\n\nIn fact, in the last Date & Time lesson we created an object using the keyword\n‘new’:\n\nnew Date()\n\nGranted this one is pretty boring, but the concept is the same. One of the\nbehaviours of a Date is that it contains a time. And we were able to get that\nusing the ‘getTime()’ method:\n\nnew Date().getTime()\n\n(If you are not sure what a method is. Have a look at lesson 5 on methods\n[https://www.codenerve.com/beginner-java/lesson-5-methods/])\n\n[/vc_column_text][us_separator icon=”material|code” show_line=”1″\nline_width=”default”][vc_column_text]Wrapper Classes\nSimply put, wrapper classes in java provide a way for us to convert a primitive\ninto an object and object back into a primitive.\n\nConverting a primitive into an object unlocks a bunch of methods that we can\nuse. Lets take a look:[/vc_column_text][us_separator icon=”material|code”\nshow_line=”1″ line_width=”default”][vc_column_text]Primitive TypeWrapper Class\ncharCharacterbyteByteshortShortintIntegerlongLongfloatFloatdoubleDouble\n[/vc_column_text][us_separator icon=”material|code” show_line=”1″\nline_width=”default”][vc_column_text]converting from and\nto[/vc_column_text][/vc_column_inner][/vc_row_inner][vc_row_inner][vc_column_inner][us_sharing\nproviders=”facebook,twitter,gplus,linkedin”][vc_column_text]\n[/vc_column_text][/vc_column_inner][/vc_row_inner][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\n– what is a wrapper class?\n– table of equivalent types: http://www.javatpoint.com/wrapper-class-in-java\n– converting from and to\n– autoboxing\n-pros and cons:\n\nPros\n\n * can be used with generics\n * supports many additional methods.\n\nCons\n\n * uses more cpu\n * uses more memory\n * implies the value can benull\n * is longer to type in some cases.\n\n–\nconclusions[/vc_column_text][/vc_column][/vc_row][vc_row][vc_column][/vc_column][/vc_row]","feature_image":null,"featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2020-01-18 22:49:49","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-01-18 22:49:49","updated_by":"5f1203ad07a62a995513aebd","published_at":"2020-07-17 20:01:49","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aee0","uuid":"e382d755-0821-4cd1-904f-1e3574cc9c78","title":"Tracing REST Services with Zipkin","slug":"spring-cloud-zipkin","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[[\"soft-return\",\"\",{}]],\"cards\":[[\"bookmark\",{\"url\":\"https://github.com/codenerve-com/tutorials/tree/master/kotlin/spring-cloud-zipkin\",\"metadata\":{\"url\":\"https://github.com/codenerve-com/tutorials\",\"title\":\"codenerve-com/tutorials\",\"description\":\"Example code for blog posts written over @ codenerve.com - codenerve-com/tutorials\",\"author\":\"codenerve-com\",\"publisher\":\"GitHub\",\"thumbnail\":\"https://avatars3.githubusercontent.com/u/58404900?s=400&v=4\",\"icon\":\"https://github.githubassets.com/favicons/favicon.svg\"}}],[\"hr\",{}],[\"code\",{\"code\":\"$ curl http://localhost:8080/tax\\\\?name\\\\=michael\\n$ 10000.0\",\"language\":\"bash\"}],[\"image\",{\"src\":\"/content/images/2020/07/diagram.jpg\",\"width\":3687,\"height\":1084,\"cardWidth\":\"\"}],[\"hr\",{}],[\"hr\",{}],[\"code\",{\"code\":\"version: '2.0'\\nservices:\\n  zipkin:\\n    container_name: zipkin\\n    image: openzipkin/zipkin\\n    ports:\\n      - 8081:9411\\n\\n  employee-service:\\n    container_name: employee-service\\n    image: mockserver/mockserver\\n    ports:\\n      - 8082:1080\\n    environment:\\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\\n    volumes:\\n    - ./dist/employee-service:/config\\n\\n  payroll-service:\\n    container_name: payroll-service\\n    image: mockserver/mockserver\\n    ports:\\n      - 8083:1080\\n    environment:\\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\\n    volumes:\\n      - ./dist/payroll-service:/config\\n\",\"language\":\"java\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/docker-compose.yml\\\">docker-compose.yml</a>\"}],[\"code\",{\"code\":\"docker-compose -f docker-compose.yml up\",\"language\":\"bash\"}],[\"code\",{\"code\":\"<dependency>\\n    <groupId>org.springframework.cloud</groupId>\\n    <artifactId>spring-cloud-starter-zipkin</artifactId>\\n    <version>2.2.0.RC1</version>\\n</dependency>\",\"language\":\"xml\",\"caption\":\"<a href=\\\"https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/pom.xml\\\">pom.xml</a>\"}],[\"html\",{\"html\":\"<table style=\\\"width:100%\\\">\\n  <tr>\\n    <td>Service</td>\\n    <td><a href=\\\"http://localhost:8080/tax?name=michael\\\">http://localhost:8080/tax?name=michael\\\"</a></td>\\n  </tr>\\n  <tr>\\n    <td>Zipkin UI</td>\\n    <td><a href=\\\"http://localhost:8081\\\">http://localhost:8081</a></td>\\n  </tr>\\n  <tr>\\n    <td>Mock Employee Service</td>\\n    <td><a href=\\\"http://localhost:8082/employeeService\\\">http://localhost:8082/employeeService</a></td>\\n  </tr>\\n  <tr>\\n    <td>Mock Payroll Service</td>\\n    <td><a href=\\\"http://localhost:8083/payrollService\\\">http://localhost:8083/payrollService</a></td>\\n  </tr>\\n</table>\"}],[\"image\",{\"src\":\"/content/images/2020/07/zipkin-ui-1-1.png\",\"width\":1656,\"height\":1018,\"caption\":\"zipkin ui\"}],[\"hr\",{}],[\"image\",{\"src\":\"/content/images/2020/07/zipkin-ui-2-1.png\",\"width\":2758,\"height\":1340,\"caption\":\"zipkin ui\"}],[\"code\",{\"code\":\"ab -n 500 -c 20 \\\"http://localhost:8080/tax?name=michael\\\"\",\"language\":\"html\"}]],\"markups\":[[\"a\",[\"href\",\"https://github.com/openzipkin/zipkin\"]],[\"strong\"],[\"a\",[\"href\",\"https://docs.docker.com/compose/install/\"]],[\"a\",[\"href\",\"https://www.mock-server.com/\"]],[\"em\"],[\"a\",[\"href\",\"https://cloud.spring.io/spring-cloud-sleuth/reference/html/appendix.html\"]],[\"a\",[\"href\",\"https://httpd.apache.org/docs/2.4/programs/ab.html\"]],[\"a\",[\"href\",\"https://docs.spring.io/spring-cloud-sleuth/docs/current-SNAPSHOT/reference/html/\"]],[\"a\",[\"href\",\"https://github.com/openzipkin/sleuth-webmvc-example\"]]],\"sections\":[[1,\"p\",[[0,[],0,\"Whether you deploy to the cloud or on-prem, one of the biggest challenges of a microservice or distributed architecture is monitoring.\"]]],[1,\"p\",[[0,[0],1,\"Zipkin\"],[0,[],0,\" is a distributed tracing system that can help to solve some of these problems. Specifically, it helps gather data needed to troubleshoot latency issues.\"]]],[1,\"p\",[[0,[],0,\"In this article, we look at \"],[0,[1],1,\"spring clouds support for Zipkin\"],[0,[],0,\" by setting up some spring boot REST services.\"]]],[1,\"p\",[[0,[],0,\"The example code is written in kotlin but can easily be ported over to java.\"]]],[1,\"p\",[]],[1,\"blockquote\",[[0,[1],1,\"Source code for this example can be found on github:\"]]],[10,0],[10,1],[1,\"h3\",[[0,[],0,\"Prerequisites\"]]],[1,\"p\",[[0,[],0,\"You'll need some things to follow along with the example:\"]]],[3,\"ul\",[[[0,[],0,\"Java\"]],[[0,[],0,\"Maven\"]],[[0,[],0,\"Docker (including \"],[0,[2],1,\"docker-compose\"],[0,[],0,\")\"]],[[0,[],0,\"The source code cloned and imported into your IDE\"]]]],[1,\"h3\",[[0,[],0,\"Setting the scene\"]]],[1,\"p\",[[0,[],0,\"To demonstrate Zipkin's tracing abilities, we are going to bring up some fictitious services that our service can make requests to.\"]]],[1,\"p\",[[1,[],0,0],[0,[],0,\"Our service will return the tax of an employee based on their name:\"]]],[10,2],[1,\"p\",[[0,[],0,\"To do this, it needs some help for other services:\"]]],[3,\"ul\",[[[0,[],0,\"An employee service which will return employee information by name\"]],[[0,[],0,\"A payroll service which will return the employees tax code by employee id.\"]]]],[1,\"p\",[[0,[],0,\"Finally, our service will calculate and return the tax to be paid.\"]]],[1,\"p\",[[0,[],0,\"Additionally, we will bring up a Zipkin server which our service will push trace data to.\"]]],[10,3],[10,4],[1,\"p\",[[0,[],0,\"The employee and payroll service will be mocked out using \"],[0,[3],1,\"mockserver\"],[0,[],0,\". We will not be covering mockserver in this post. \"]]],[1,\"p\",[[0,[],0,\"There are two json files under the dist directory that tell the mock services how to respond to requests, including some delays which will slow down there response times.\"]]],[10,5],[1,\"h3\",[[0,[],0,\"Compose\"]]],[1,\"p\",[[0,[],0,\"To manage all this, we will be using a docker compose yml file:\"]]],[10,6],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Let's start everything up now by running:\"]]],[10,7],[1,\"p\",[[0,[4],1,\"N.B you can optionally background the process by adding -d to the end of this command\"]]],[1,\"h3\",[[0,[],0,\"Creating a Basic Rest Service\"]]],[1,\"p\",[[0,[],0,\"Creating the service is very simple, and if you're happy with spring boots defaults then this only involves adding a jar to your maven pom!\"]]],[10,8],[1,\"p\",[[0,[],0,\"Default properties such as zipkin urls can be overidden under \"],[0,[4],1,\"src/main/resources/application.properties\"],[0,[],0,\" \"]]],[1,\"p\",[[0,[],0,\"A full list of properties are listed in the spring cloud \"],[0,[5],1,\"documentation\"]]],[1,\"h3\",[[0,[],0,\"Hitting the endpoint\"]]],[1,\"p\",[[0,[],0,\"Start the service in your IDE and navigate to it in your browser:\"]]],[10,9],[1,\"p\",[]],[1,\"p\",[[0,[],0,\"Now navigate to the Zipkin UI. Click on \"],[0,[4],1,\"Find Traces\"],[0,[],0,\" and you will see the trace you created by opening the service url. \"]]],[10,10],[10,11],[1,\"p\",[[0,[],0,\"Click on a span to expand it:\"]]],[10,12],[1,\"h3\",[[0,[],0,\"Apache Benchmark\"]]],[1,\"p\",[[0,[],0,\"Additionally you could use a tool like \"],[0,[6],1,\"apache benchmark\"],[0,[],0,\" to put the service under some load. This will create more traces that can be viewed in the zipkin ui:\"]]],[10,13],[1,\"p\",[]],[1,\"h3\",[[0,[],0,\"Conclusion \"]]],[1,\"p\",[[0,[],0,\"We've seen just how easy it is to add tracing to your spring cloud application. \"]]],[1,\"p\",[[0,[],0,\"For more info, see the \"],[0,[7],1,\"spring cloud docs\"],[0,[],0,\" or the \"],[0,[8],1,\"openzipkin examples\"],[0,[],0,\" on github. \"]]],[1,\"p\",[]],[1,\"p\",[]]]}","html":"<p>Whether you deploy to the cloud or on-prem, one of the biggest challenges of a microservice or distributed architecture is monitoring.</p><p><a href=\"https://github.com/openzipkin/zipkin\">Zipkin</a> is a distributed tracing system that can help to solve some of these problems. Specifically, it helps gather data needed to troubleshoot latency issues.</p><p>In this article, we look at <strong>spring clouds support for Zipkin</strong> by setting up some spring boot REST services.</p><p>The example code is written in kotlin but can easily be ported over to java.</p><p></p><blockquote><strong>Source code for this example can be found on github:</strong></blockquote><figure class=\"kg-card kg-bookmark-card\"><a class=\"kg-bookmark-container\" href=\"https://github.com/codenerve-com/tutorials/tree/master/kotlin/spring-cloud-zipkin\"><div class=\"kg-bookmark-content\"><div class=\"kg-bookmark-title\">codenerve-com/tutorials</div><div class=\"kg-bookmark-description\">Example code for blog posts written over @ codenerve.com - codenerve-com/tutorials</div><div class=\"kg-bookmark-metadata\"><img class=\"kg-bookmark-icon\" src=\"https://github.githubassets.com/favicons/favicon.svg\"><span class=\"kg-bookmark-author\">codenerve-com</span><span class=\"kg-bookmark-publisher\">GitHub</span></div></div><div class=\"kg-bookmark-thumbnail\"><img src=\"https://avatars3.githubusercontent.com/u/58404900?s=400&amp;v=4\"></div></a></figure><hr><h3 id=\"prerequisites\">Prerequisites</h3><p>You'll need some things to follow along with the example:</p><ul><li>Java</li><li>Maven</li><li>Docker (including <a href=\"https://docs.docker.com/compose/install/\">docker-compose</a>)</li><li>The source code cloned and imported into your IDE</li></ul><h3 id=\"setting-the-scene\">Setting the scene</h3><p>To demonstrate Zipkin's tracing abilities, we are going to bring up some fictitious services that our service can make requests to.</p><p><br>Our service will return the tax of an employee based on their name:</p><pre><code class=\"language-bash\">$ curl http://localhost:8080/tax\\?name\\=michael\n$ 10000.0</code></pre><p>To do this, it needs some help for other services:</p><ul><li>An employee service which will return employee information by name</li><li>A payroll service which will return the employees tax code by employee id.</li></ul><p>Finally, our service will calculate and return the tax to be paid.</p><p>Additionally, we will bring up a Zipkin server which our service will push trace data to.</p><figure class=\"kg-card kg-image-card\"><img src=\"/content/images/2020/07/diagram.jpg\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/07/diagram.jpg 600w, /content/images/size/w1000/2020/07/diagram.jpg 1000w, /content/images/size/w1600/2020/07/diagram.jpg 1600w, /content/images/size/w2400/2020/07/diagram.jpg 2400w\" sizes=\"(min-width: 720px) 720px\"></figure><hr><p>The employee and payroll service will be mocked out using <a href=\"https://www.mock-server.com/\">mockserver</a>. We will not be covering mockserver in this post. </p><p>There are two json files under the dist directory that tell the mock services how to respond to requests, including some delays which will slow down there response times.</p><hr><h3 id=\"compose\">Compose</h3><p>To manage all this, we will be using a docker compose yml file:</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-java\">version: '2.0'\nservices:\n  zipkin:\n    container_name: zipkin\n    image: openzipkin/zipkin\n    ports:\n      - 8081:9411\n\n  employee-service:\n    container_name: employee-service\n    image: mockserver/mockserver\n    ports:\n      - 8082:1080\n    environment:\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\n    volumes:\n    - ./dist/employee-service:/config\n\n  payroll-service:\n    container_name: payroll-service\n    image: mockserver/mockserver\n    ports:\n      - 8083:1080\n    environment:\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\n    volumes:\n      - ./dist/payroll-service:/config\n</code></pre><figcaption><a href=\"https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/docker-compose.yml\">docker-compose.yml</a></figcaption></figure><p></p><p>Let's start everything up now by running:</p><pre><code class=\"language-bash\">docker-compose -f docker-compose.yml up</code></pre><p><em>N.B you can optionally background the process by adding -d to the end of this command</em></p><h3 id=\"creating-a-basic-rest-service\">Creating a Basic Rest Service</h3><p>Creating the service is very simple, and if you're happy with spring boots defaults then this only involves adding a jar to your maven pom!</p><figure class=\"kg-card kg-code-card\"><pre><code class=\"language-xml\">&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-cloud-starter-zipkin&lt;/artifactId&gt;\n    &lt;version&gt;2.2.0.RC1&lt;/version&gt;\n&lt;/dependency&gt;</code></pre><figcaption><a href=\"https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/pom.xml\">pom.xml</a></figcaption></figure><p>Default properties such as zipkin urls can be overidden under <em>src/main/resources/application.properties</em> </p><p>A full list of properties are listed in the spring cloud <a href=\"https://cloud.spring.io/spring-cloud-sleuth/reference/html/appendix.html\">documentation</a></p><h3 id=\"hitting-the-endpoint\">Hitting the endpoint</h3><p>Start the service in your IDE and navigate to it in your browser:</p><!--kg-card-begin: html--><table style=\"width:100%\">\n  <tr>\n    <td>Service</td>\n    <td><a href=\"http://localhost:8080/tax?name=michael\">http://localhost:8080/tax?name=michael\"</a></td>\n  </tr>\n  <tr>\n    <td>Zipkin UI</td>\n    <td><a href=\"http://localhost:8081\">http://localhost:8081</a></td>\n  </tr>\n  <tr>\n    <td>Mock Employee Service</td>\n    <td><a href=\"http://localhost:8082/employeeService\">http://localhost:8082/employeeService</a></td>\n  </tr>\n  <tr>\n    <td>Mock Payroll Service</td>\n    <td><a href=\"http://localhost:8083/payrollService\">http://localhost:8083/payrollService</a></td>\n  </tr>\n</table><!--kg-card-end: html--><p></p><p>Now navigate to the Zipkin UI. Click on <em>Find Traces</em> and you will see the trace you created by opening the service url. </p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2020/07/zipkin-ui-1-1.png\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/07/zipkin-ui-1-1.png 600w, /content/images/size/w1000/2020/07/zipkin-ui-1-1.png 1000w, /content/images/size/w1600/2020/07/zipkin-ui-1-1.png 1600w, /content/images/2020/07/zipkin-ui-1-1.png 1656w\" sizes=\"(min-width: 720px) 720px\"><figcaption>zipkin ui</figcaption></figure><hr><p>Click on a span to expand it:</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"/content/images/2020/07/zipkin-ui-2-1.png\" class=\"kg-image\" alt srcset=\"/content/images/size/w600/2020/07/zipkin-ui-2-1.png 600w, /content/images/size/w1000/2020/07/zipkin-ui-2-1.png 1000w, /content/images/size/w1600/2020/07/zipkin-ui-2-1.png 1600w, /content/images/size/w2400/2020/07/zipkin-ui-2-1.png 2400w\" sizes=\"(min-width: 720px) 720px\"><figcaption>zipkin ui</figcaption></figure><h3 id=\"apache-benchmark\">Apache Benchmark</h3><p>Additionally you could use a tool like <a href=\"https://httpd.apache.org/docs/2.4/programs/ab.html\">apache benchmark</a> to put the service under some load. This will create more traces that can be viewed in the zipkin ui:</p><pre><code class=\"language-html\">ab -n 500 -c 20 \"http://localhost:8080/tax?name=michael\"</code></pre><p></p><h3 id=\"conclusion\">Conclusion </h3><p>We've seen just how easy it is to add tracing to your spring cloud application. </p><p>For more info, see the <a href=\"https://docs.spring.io/spring-cloud-sleuth/docs/current-SNAPSHOT/reference/html/\">spring cloud docs</a> or the <a href=\"https://github.com/openzipkin/sleuth-webmvc-example\">openzipkin examples</a> on github. </p><p></p>","comment_id":"2238","plaintext":"Whether you deploy to the cloud or on-prem, one of the biggest challenges of a\nmicroservice or distributed architecture is monitoring.\n\nZipkin [https://github.com/openzipkin/zipkin] is a distributed tracing system\nthat can help to solve some of these problems. Specifically, it helps gather\ndata needed to troubleshoot latency issues.\n\nIn this article, we look at spring clouds support for Zipkin by setting up some\nspring boot REST services.\n\nThe example code is written in kotlin but can easily be ported over to java.\n\n\n\n> Source code for this example can be found on github:\ncodenerve-com/tutorialsExample code for blog posts written over @ codenerve.com\n- codenerve-com/tutorialscodenerve-comGitHub\n[https://github.com/codenerve-com/tutorials/tree/master/kotlin/spring-cloud-zipkin]\n--------------------------------------------------------------------------------\n\nPrerequisites\nYou'll need some things to follow along with the example:\n\n * Java\n * Maven\n * Docker (including docker-compose [https://docs.docker.com/compose/install/])\n * The source code cloned and imported into your IDE\n\nSetting the scene\nTo demonstrate Zipkin's tracing abilities, we are going to bring up some\nfictitious services that our service can make requests to.\n\n\nOur service will return the tax of an employee based on their name:\n\n$ curl http://localhost:8080/tax\\?name\\=michael\n$ 10000.0\n\nTo do this, it needs some help for other services:\n\n * An employee service which will return employee information by name\n * A payroll service which will return the employees tax code by employee id.\n\nFinally, our service will calculate and return the tax to be paid.\n\nAdditionally, we will bring up a Zipkin server which our service will push trace\ndata to.\n\n\n--------------------------------------------------------------------------------\n\nThe employee and payroll service will be mocked out using mockserver\n[https://www.mock-server.com/]. We will not be covering mockserver in this post. \n\nThere are two json files under the dist directory that tell the mock services\nhow to respond to requests, including some delays which will slow down there\nresponse times.\n\n\n--------------------------------------------------------------------------------\n\nCompose\nTo manage all this, we will be using a docker compose yml file:\n\nversion: '2.0'\nservices:\n  zipkin:\n    container_name: zipkin\n    image: openzipkin/zipkin\n    ports:\n      - 8081:9411\n\n  employee-service:\n    container_name: employee-service\n    image: mockserver/mockserver\n    ports:\n      - 8082:1080\n    environment:\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\n    volumes:\n    - ./dist/employee-service:/config\n\n  payroll-service:\n    container_name: payroll-service\n    image: mockserver/mockserver\n    ports:\n      - 8083:1080\n    environment:\n      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json\n    volumes:\n      - ./dist/payroll-service:/config\n\n\ndocker-compose.yml\n[https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/docker-compose.yml]\n\nLet's start everything up now by running:\n\ndocker-compose -f docker-compose.yml up\n\nN.B you can optionally background the process by adding -d to the end of this\ncommand\n\nCreating a Basic Rest Service\nCreating the service is very simple, and if you're happy with spring boots\ndefaults then this only involves adding a jar to your maven pom!\n\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-zipkin</artifactId>\n    <version>2.2.0.RC1</version>\n</dependency>\n\npom.xml\n[https://github.com/codenerve-com/tutorials/blob/master/kotlin/spring-cloud-zipkin/pom.xml]\nDefault properties such as zipkin urls can be overidden under \nsrc/main/resources/application.properties \n\nA full list of properties are listed in the spring cloud documentation\n[https://cloud.spring.io/spring-cloud-sleuth/reference/html/appendix.html]\n\nHitting the endpoint\nStart the service in your IDE and navigate to it in your browser:\n\nService http://localhost:8080/tax?name=michael\"\n[http://localhost:8080/tax?name=michael] Zipkin UI http://localhost:8081 Mock\nEmployee Service http://localhost:8082/employeeService Mock Payroll Service \nhttp://localhost:8083/payrollService \n\nNow navigate to the Zipkin UI. Click on Find Traces and you will see the trace\nyou created by opening the service url. \n\nzipkin ui\n--------------------------------------------------------------------------------\n\nClick on a span to expand it:\n\nzipkin uiApache Benchmark\nAdditionally you could use a tool like apache benchmark\n[https://httpd.apache.org/docs/2.4/programs/ab.html] to put the service under\nsome load. This will create more traces that can be viewed in the zipkin ui:\n\nab -n 500 -c 20 \"http://localhost:8080/tax?name=michael\"\n\n\n\nConclusion \nWe've seen just how easy it is to add tracing to your spring cloud application. \n\nFor more info, see the spring cloud docs\n[https://docs.spring.io/spring-cloud-sleuth/docs/current-SNAPSHOT/reference/html/] \nor the openzipkin examples [https://github.com/openzipkin/sleuth-webmvc-example] \non github.","feature_image":"https://images.unsplash.com/photo-1475115996703-5200b5adbc09?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=2000&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","featured":1,"type":"post","status":"published","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"1","created_at":"2020-06-09 19:29:40","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-28 18:55:44","updated_by":"1","published_at":"2020-07-17 20:01:49","published_by":"1","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null},{"id":"5f1203ad07a62a995513aee2","uuid":"edf06ec2-0c14-4b90-8ae3-7ae3bd92432c","title":"Java Streams Cookbook","slug":"temp-slug-32","mobiledoc":"{\"version\":\"0.3.1\",\"atoms\":[],\"cards\":[[\"html\",{\"html\":\"[vc_row][vc_column][vc_column_text]\\n<h1>Introduction</h1>\\n<p>todo</p>\\n<ul>\\n<li>A brief history of streams API</li>\\n<li>Types of operations Aggregate/intermediate / terminal</li>\\n</ul>\\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_column][/vc_column][vc_row][vc_column][us_cta title=&#8221;Sample Code&#8221; color=&#8221;secondary&#8221; btn_label=&#8221;Code&#8221; btn_link=&#8221;url:https%3A%2F%2Fgithub.com%2Fcodenerve-com%2Ftutorials%2Ftree%2Fmaster%2Fjava-cookbook||target:%20_blank|&#8221; btn_style=&#8221;2&#8243; btn_size=&#8221;15px&#8221; btn_icon=&#8221;fab|github&#8221;]The code for this lesson is available on GitHub[/us_cta][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h2>Basic operations on Lists</h2>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_tta_tour switch_sections=&#8221;hover&#8221; layout=&#8221;trendy&#8221; title_font=&#8221;&#8221;][vc_tta_section icon=&#8221;fas|sort&#8221; tab_id=&#8221;1593167147786-cbc0cd2f-dca3&#8243; title=&#8221;Sort&#8221;][vc_column_text]\\n<h3>Input data</h3>\\n<p>The following examples will use a list of book titles (strings):</p>\\n<p><span style=\\\"color: #666d70;\\\">(These have been taken at random from <a style=\\\"color: #666d70;\\\" href=\\\"https://devconnected.com/the-10-best-software-engineering-books-in-2019/\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">devconnected.com&#8217;s best Software Engineering Books in 2019</a>)</span></p>\\n<pre class=\\\"lang:java decode:true\\\">    private final List&lt;String&gt; books = asList(\\r\\n            \\\"Clean Code\\\",\\r\\n            \\\"Design Patterns: Elements of Reusable Object-Oriented Software\\\",\\r\\n            \\\"Patterns of Enterprise Application Architecture\\\",\\r\\n            \\\"Enterprise Integration Patterns\\\",\\r\\n            \\\"The Mythical Man-Month\\\",\\r\\n            \\\"Code Complete\\\",\\r\\n            \\\"Git for Teams\\\",\\r\\n            \\\"Refactoring: Improving the Design of Existing Code\\\",\\r\\n            \\\"The Art of Unit Testing\\\",\\r\\n            \\\"Soft Skills: The Software Developer’s Life Manual\\\");\\r\\n</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\\n<h4>Sort strings in alphabetical order</h4>\\n<p>Sorting a list of books in alphabetical order using <em>sorted(</em>) i.e. <a href=\\\"https://docs.oracle.com/javase/tutorial/collections/interfaces/order.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">natural ordering</a>:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void sort_alphabetical() {\\r\\n        List&lt;Object&gt; sortedList =\\r\\n                books.stream()\\r\\n                        .sorted()\\r\\n                        .collect(toList());\\r\\n\\r\\n        assertThat(sortedList.get(0), is(equalTo(\\\"Clean Code\\\")));\\r\\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\\\"The Mythical Man-Month\\\")));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\\n<h4>Sort strings in reverse alphabetical order</h4>\\n<p>Sorting a list of books in reverse alphabetical order using <em>sorted(Comparator.reverseOrder())</em>:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void sort_reverse_alphabetical() {\\r\\n        List&lt;Object&gt; sortedList =\\r\\n                books.stream()\\r\\n                        .sorted(Comparator.reverseOrder())\\r\\n                        .collect(toList());\\r\\n\\r\\n        assertThat(sortedList.get(0), is(equalTo(\\\"The Mythical Man-Month\\\")));\\r\\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\\\"Clean Code\\\")));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\\n<h4>Sort by string length</h4>\\n<p>Sort the books in order of there title length using <em>sorted(Comparator.comparing(String::length)):</em></p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void sort_by_title_length() {\\r\\n        List&lt;Object&gt; sortedList =\\r\\n                books.stream()\\r\\n                        .sorted(Comparator.comparing(String::length))\\r\\n                        .collect(toList());\\r\\n\\r\\n        assertThat(sortedList.get(0), is(equalTo(\\\"Clean Code\\\"))); // the shortest title\\r\\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\\\"Design Patterns: Elements of Reusable Object-Oriented Software\\\"))); // the longest title\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\\n<h4>Sort string using a custom comparator</h4>\\n<p>Sort the number of books by the number of times a letter &#8216;e&#8217; occurs in there title:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void sort_by_custom_comparator() {\\r\\n        List&lt;Object&gt; sortedList =\\r\\n                books.stream()\\r\\n                        .sorted(new CustomComparator())\\r\\n                        .collect(toList());\\r\\n\\r\\n        // the letter 3 occurs the most in this book.\\r\\n        assertThat(sortedList.get(0), is(equalTo(\\\"Design Patterns: Elements of Reusable Object-Oriented Software\\\")));\\r\\n    }</pre>\\n<p>Where the custom comparator is:</p>\\n<pre class=\\\"lang:java decode:true \\\">import java.util.Comparator;\\r\\n\\r\\npublic class CustomComparator implements Comparator&lt;String&gt; {\\r\\n\\r\\n    /*\\r\\n        Sorts by the number of occurrences of the character 'e' in any given string\\r\\n     */\\r\\n    @Override\\r\\n    public int compare(String string, String string2) {\\r\\n        long stringCount = string.chars().filter(ch -&gt; ch == 'e').count();\\r\\n        long secondStringCount = string2.chars().filter(ch -&gt; ch == 'e').count();\\r\\n        return Long.compare(secondStringCount, stringCount);\\r\\n    }\\r\\n}</pre>\\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=&#8221;fas|filter&#8221; tab_id=&#8221;1593167147801-27a547cc-163a&#8221; title=&#8221;Filter&#8221;][vc_column_text]\\n<h3>Input data</h3>\\n<p>The following examples will use a list of book objects. Each book contains a title, an author and a rating out of 5:</p>\\n<p><span style=\\\"color: #666d70;\\\">N.B. these are all 5-star books but I have changed the ratings for the purpose of these examples.</span></p>\\n<pre class=\\\"lang:java decode:true\\\">    private final List&lt;Book&gt; books = asList(\\r\\n            new Book(\\\"Clean Code\\\", \\\"Robert Martin\\\", 5),\\r\\n            new Book(\\\"Design Patterns: Elements of Reusable Object-Oriented Software\\\", \\\"Eric Gamma\\\", 4),\\r\\n            new Book(\\\"Patterns of Enterprise Application Architecture\\\", \\\"Martin Fowler\\\", 3),\\r\\n            new Book(\\\"Enterprise Integration Patterns\\\", \\\"Gregor Hohpe\\\", 5),\\r\\n            new Book(\\\"The Mythical Man-Month\\\", \\\"Frederick Brooks\\\", 4),\\r\\n            new Book(\\\"Code Complete\\\", \\\"Steve McConnell\\\", 3),\\r\\n            new Book(\\\"Git for Teams\\\", \\\"Emma Hogbin Westby\\\", 5),\\r\\n            new Book(\\\"Refactoring: Improving the Design of Existing Code\\\", \\\"Martin Fowler\\\", 4),\\r\\n            new Book(\\\"The Art of Unit Testing\\\", \\\"Roy Osherove\\\", 3),\\r\\n            new Book(\\\"Soft Skills: The Software Developer’s Life Manual\\\", \\\"John Sonmez\\\", 5));\\r\\n</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Basic Filter</h3>\\n<p>Filter Book objects based on there rating:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void filter_five_star_books() {\\r\\n\\r\\n        List&lt;Book&gt; fiveStarBooks = books.stream()\\r\\n                .filter(book -&gt; book.getRating() == 5)\\r\\n                .collect(Collectors.toList());\\r\\n\\r\\n        assertThat(fiveStarBooks.size(), is(equalTo(4)));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Multiple Filters</h3>\\n<p>Since filter(&#8230;) is an intermediate operation you can call as many as you like. This example finds all five-star books with &#8220;Git&#8221; in their title:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void filter_five_star_git_books() {\\r\\n        List&lt;Book&gt; fiveStarGitBooks = books.stream()\\r\\n                .filter(book -&gt; book.getRating() == 5)\\r\\n                .filter(book -&gt; book.getTitle().contains(\\\"Git\\\"))\\r\\n                .collect(Collectors.toList());\\r\\n\\r\\n        assertThat(fiveStarGitBooks.size(), is(equalTo(1)));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Expanding Lambda Body</h3>\\n<p>More complicated predicate conditions can be created by expanding out the filters lambda body. This filters all boos with an even rating:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void filter_even_ratings() {\\r\\n        List&lt;Book&gt; bookILike = books.stream()\\r\\n                .filter(book -&gt; {\\r\\n                    return book.getRating() % 2 == 0;\\r\\n                })\\r\\n                .collect(Collectors.toList());\\r\\n\\r\\n        assertThat(bookILike.size(), is(equalTo(3)));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>Filtering on predicates</h3>\\n<p>Useful for code re-use you can declare Predicates elsewhere and use in your filters. This example finds all book titles with &#8220;Patterns&#8221; in the title:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void filter_pattern_books() {\\r\\n        List&lt;Book&gt; fiveStarBooks = books.stream()\\r\\n                .filter(patternBooks)\\r\\n                .collect(Collectors.toList());\\r\\n\\r\\n        assertThat(fiveStarBooks.size(), is(equalTo(3)));\\r\\n    }</pre>\\n<p>In this case the predicate is a field:</p>\\n<pre class=\\\"lang:java decode:true \\\">private final Predicate&lt;Book&gt; patternBooks = book -&gt; book.getTitle().contains(\\\"Patterns\\\");</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>findAny</h3>\\n<p>Used to find any item in the collection that matches the filter(s) conditions. Returns an optional which could be empty (see <a href=\\\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">optionals</a> for more info). It is also important to note that this method is non-deterministic and can return different results if run multiple times.</p>\\n<p>This example finds any Robert Martin book:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void find_a_robert_martin_book() {\\r\\n        Optional&lt;Book&gt; aRobertMartinBook = books.stream()\\r\\n                .filter(book -&gt; book.getAuthor().contains(\\\"Martin Fowler\\\"))\\r\\n                .findAny();\\r\\n\\r\\n        assertThat(aRobertMartinBook.get().getAuthor(), is(equalTo(\\\"Martin Fowler\\\")));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>orElse</h3>\\n<p>An alternative to returning an optional from a findAny() call is to use <em>orElse(&#8230;.). </em>This allows us to return a default value if there are no matches in the stream.</p>\\n<p>This example returns a Martin Fowler book if it exists in the collection or null if nothing is found:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void find_a_martin_fowler_book() {\\r\\n        Book aMartinFowlerBook = books.stream()\\r\\n                .filter(book -&gt; book.getAuthor().contains(\\\"Martin Fowler\\\"))\\r\\n                .findAny()\\r\\n                .orElse(null);\\r\\n\\r\\n        assertThat(aMartinFowlerBook.getAuthor(), is(equalTo(\\\"Martin Fowler\\\")));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>findFirst</h3>\\n<p>The findFirst() method finds the first element in a Stream. Unlike findAny(&#8230;) it is deterministic.</p>\\n<p>This example finds the first Marting Fowler book in the stream or returns null:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void find_the_first_martin_fowler_book() {\\r\\n        Book aMartinFowlerBook = books.stream()\\r\\n                .filter(book -&gt; book.getAuthor().contains(\\\"Martin Fowler\\\"))\\r\\n                .findFirst()\\r\\n                .orElse(null);\\r\\n\\r\\n        assertThat(aMartinFowlerBook.getTitle(), is(equalTo(\\\"Patterns of Enterprise Application Architecture\\\")));\\r\\n    }</pre>\\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h3>orElseThrow</h3>\\n<p>Similar to orElse but instead of returning a default value if nothing is found in the stream throw and exception.</p>\\n<p>This example looks a book written by codenerve and returns an exception if one does not exist:</p>\\n<pre class=\\\"lang:java decode:true \\\">    @Test\\r\\n    void find_codenerves_awesome_book() {\\r\\n        assertThrows(Exception.class, () -&gt;\\r\\n                books.stream()\\r\\n                        .filter(book -&gt; book.getAuthor().contains(\\\"Codenerve\\\"))\\r\\n                        .findFirst()\\r\\n                        .orElseThrow(() -&gt; new Exception(\\\"Codenerve hasn't written any good books yet :-(\\\")));\\r\\n    }</pre>\\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=&#8221;fas|map&#8221; tab_id=&#8221;1593167228716-e014acf1-3e5d&#8221; title=&#8221;Map&#8221;][/vc_tta_section][/vc_tta_tour][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\\n<h1>Basic Operations on Maps</h1>\\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h1>Streams on Arrays</h1>\\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h1>Streams on Files</h1>\\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\\n<h1>Stream Builders</h1>\\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][/vc_column][/vc_row]\\n\"}]],\"markups\":[],\"sections\":[[10,0],[1,\"p\",[]]]}","html":"<!--kg-card-begin: html-->[vc_row][vc_column][vc_column_text]\n<h1>Introduction</h1>\n<p>todo</p>\n<ul>\n<li>A brief history of streams API</li>\n<li>Types of operations Aggregate/intermediate / terminal</li>\n</ul>\n[/vc_column_text][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][/vc_column][/vc_row][vc_column][/vc_column][vc_row][vc_column][us_cta title=&#8221;Sample Code&#8221; color=&#8221;secondary&#8221; btn_label=&#8221;Code&#8221; btn_link=&#8221;url:https%3A%2F%2Fgithub.com%2Fcodenerve-com%2Ftutorials%2Ftree%2Fmaster%2Fjava-cookbook||target:%20_blank|&#8221; btn_style=&#8221;2&#8243; btn_size=&#8221;15px&#8221; btn_icon=&#8221;fab|github&#8221;]The code for this lesson is available on GitHub[/us_cta][us_separator show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h2>Basic operations on Lists</h2>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_tta_tour switch_sections=&#8221;hover&#8221; layout=&#8221;trendy&#8221; title_font=&#8221;&#8221;][vc_tta_section icon=&#8221;fas|sort&#8221; tab_id=&#8221;1593167147786-cbc0cd2f-dca3&#8243; title=&#8221;Sort&#8221;][vc_column_text]\n<h3>Input data</h3>\n<p>The following examples will use a list of book titles (strings):</p>\n<p><span style=\"color: #666d70;\">(These have been taken at random from <a style=\"color: #666d70;\" href=\"https://devconnected.com/the-10-best-software-engineering-books-in-2019/\" target=\"_blank\" rel=\"noopener noreferrer\">devconnected.com&#8217;s best Software Engineering Books in 2019</a>)</span></p>\n<pre class=\"lang:java decode:true\">    private final List&lt;String&gt; books = asList(\r\n            \"Clean Code\",\r\n            \"Design Patterns: Elements of Reusable Object-Oriented Software\",\r\n            \"Patterns of Enterprise Application Architecture\",\r\n            \"Enterprise Integration Patterns\",\r\n            \"The Mythical Man-Month\",\r\n            \"Code Complete\",\r\n            \"Git for Teams\",\r\n            \"Refactoring: Improving the Design of Existing Code\",\r\n            \"The Art of Unit Testing\",\r\n            \"Soft Skills: The Software Developer’s Life Manual\");\r\n</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\n<h4>Sort strings in alphabetical order</h4>\n<p>Sorting a list of books in alphabetical order using <em>sorted(</em>) i.e. <a href=\"https://docs.oracle.com/javase/tutorial/collections/interfaces/order.html\" target=\"_blank\" rel=\"noopener noreferrer\">natural ordering</a>:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void sort_alphabetical() {\r\n        List&lt;Object&gt; sortedList =\r\n                books.stream()\r\n                        .sorted()\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"Clean Code\")));\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"The Mythical Man-Month\")));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\n<h4>Sort strings in reverse alphabetical order</h4>\n<p>Sorting a list of books in reverse alphabetical order using <em>sorted(Comparator.reverseOrder())</em>:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void sort_reverse_alphabetical() {\r\n        List&lt;Object&gt; sortedList =\r\n                books.stream()\r\n                        .sorted(Comparator.reverseOrder())\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"The Mythical Man-Month\")));\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"Clean Code\")));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\n<h4>Sort by string length</h4>\n<p>Sort the books in order of there title length using <em>sorted(Comparator.comparing(String::length)):</em></p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void sort_by_title_length() {\r\n        List&lt;Object&gt; sortedList =\r\n                books.stream()\r\n                        .sorted(Comparator.comparing(String::length))\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"Clean Code\"))); // the shortest title\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"Design Patterns: Elements of Reusable Object-Oriented Software\"))); // the longest title\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221;][vc_column_text]\n<h4>Sort string using a custom comparator</h4>\n<p>Sort the number of books by the number of times a letter &#8216;e&#8217; occurs in there title:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void sort_by_custom_comparator() {\r\n        List&lt;Object&gt; sortedList =\r\n                books.stream()\r\n                        .sorted(new CustomComparator())\r\n                        .collect(toList());\r\n\r\n        // the letter 3 occurs the most in this book.\r\n        assertThat(sortedList.get(0), is(equalTo(\"Design Patterns: Elements of Reusable Object-Oriented Software\")));\r\n    }</pre>\n<p>Where the custom comparator is:</p>\n<pre class=\"lang:java decode:true \">import java.util.Comparator;\r\n\r\npublic class CustomComparator implements Comparator&lt;String&gt; {\r\n\r\n    /*\r\n        Sorts by the number of occurrences of the character 'e' in any given string\r\n     */\r\n    @Override\r\n    public int compare(String string, String string2) {\r\n        long stringCount = string.chars().filter(ch -&gt; ch == 'e').count();\r\n        long secondStringCount = string2.chars().filter(ch -&gt; ch == 'e').count();\r\n        return Long.compare(secondStringCount, stringCount);\r\n    }\r\n}</pre>\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=&#8221;fas|filter&#8221; tab_id=&#8221;1593167147801-27a547cc-163a&#8221; title=&#8221;Filter&#8221;][vc_column_text]\n<h3>Input data</h3>\n<p>The following examples will use a list of book objects. Each book contains a title, an author and a rating out of 5:</p>\n<p><span style=\"color: #666d70;\">N.B. these are all 5-star books but I have changed the ratings for the purpose of these examples.</span></p>\n<pre class=\"lang:java decode:true\">    private final List&lt;Book&gt; books = asList(\r\n            new Book(\"Clean Code\", \"Robert Martin\", 5),\r\n            new Book(\"Design Patterns: Elements of Reusable Object-Oriented Software\", \"Eric Gamma\", 4),\r\n            new Book(\"Patterns of Enterprise Application Architecture\", \"Martin Fowler\", 3),\r\n            new Book(\"Enterprise Integration Patterns\", \"Gregor Hohpe\", 5),\r\n            new Book(\"The Mythical Man-Month\", \"Frederick Brooks\", 4),\r\n            new Book(\"Code Complete\", \"Steve McConnell\", 3),\r\n            new Book(\"Git for Teams\", \"Emma Hogbin Westby\", 5),\r\n            new Book(\"Refactoring: Improving the Design of Existing Code\", \"Martin Fowler\", 4),\r\n            new Book(\"The Art of Unit Testing\", \"Roy Osherove\", 3),\r\n            new Book(\"Soft Skills: The Software Developer’s Life Manual\", \"John Sonmez\", 5));\r\n</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Basic Filter</h3>\n<p>Filter Book objects based on there rating:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void filter_five_star_books() {\r\n\r\n        List&lt;Book&gt; fiveStarBooks = books.stream()\r\n                .filter(book -&gt; book.getRating() == 5)\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarBooks.size(), is(equalTo(4)));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Multiple Filters</h3>\n<p>Since filter(&#8230;) is an intermediate operation you can call as many as you like. This example finds all five-star books with &#8220;Git&#8221; in their title:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void filter_five_star_git_books() {\r\n        List&lt;Book&gt; fiveStarGitBooks = books.stream()\r\n                .filter(book -&gt; book.getRating() == 5)\r\n                .filter(book -&gt; book.getTitle().contains(\"Git\"))\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarGitBooks.size(), is(equalTo(1)));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Expanding Lambda Body</h3>\n<p>More complicated predicate conditions can be created by expanding out the filters lambda body. This filters all boos with an even rating:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void filter_even_ratings() {\r\n        List&lt;Book&gt; bookILike = books.stream()\r\n                .filter(book -&gt; {\r\n                    return book.getRating() % 2 == 0;\r\n                })\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(bookILike.size(), is(equalTo(3)));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>Filtering on predicates</h3>\n<p>Useful for code re-use you can declare Predicates elsewhere and use in your filters. This example finds all book titles with &#8220;Patterns&#8221; in the title:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void filter_pattern_books() {\r\n        List&lt;Book&gt; fiveStarBooks = books.stream()\r\n                .filter(patternBooks)\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarBooks.size(), is(equalTo(3)));\r\n    }</pre>\n<p>In this case the predicate is a field:</p>\n<pre class=\"lang:java decode:true \">private final Predicate&lt;Book&gt; patternBooks = book -&gt; book.getTitle().contains(\"Patterns\");</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>findAny</h3>\n<p>Used to find any item in the collection that matches the filter(s) conditions. Returns an optional which could be empty (see <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html\" target=\"_blank\" rel=\"noopener noreferrer\">optionals</a> for more info). It is also important to note that this method is non-deterministic and can return different results if run multiple times.</p>\n<p>This example finds any Robert Martin book:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void find_a_robert_martin_book() {\r\n        Optional&lt;Book&gt; aRobertMartinBook = books.stream()\r\n                .filter(book -&gt; book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findAny();\r\n\r\n        assertThat(aRobertMartinBook.get().getAuthor(), is(equalTo(\"Martin Fowler\")));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>orElse</h3>\n<p>An alternative to returning an optional from a findAny() call is to use <em>orElse(&#8230;.). </em>This allows us to return a default value if there are no matches in the stream.</p>\n<p>This example returns a Martin Fowler book if it exists in the collection or null if nothing is found:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void find_a_martin_fowler_book() {\r\n        Book aMartinFowlerBook = books.stream()\r\n                .filter(book -&gt; book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findAny()\r\n                .orElse(null);\r\n\r\n        assertThat(aMartinFowlerBook.getAuthor(), is(equalTo(\"Martin Fowler\")));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>findFirst</h3>\n<p>The findFirst() method finds the first element in a Stream. Unlike findAny(&#8230;) it is deterministic.</p>\n<p>This example finds the first Marting Fowler book in the stream or returns null:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void find_the_first_martin_fowler_book() {\r\n        Book aMartinFowlerBook = books.stream()\r\n                .filter(book -&gt; book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findFirst()\r\n                .orElse(null);\r\n\r\n        assertThat(aMartinFowlerBook.getTitle(), is(equalTo(\"Patterns of Enterprise Application Architecture\")));\r\n    }</pre>\n[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h3>orElseThrow</h3>\n<p>Similar to orElse but instead of returning a default value if nothing is found in the stream throw and exception.</p>\n<p>This example looks a book written by codenerve and returns an exception if one does not exist:</p>\n<pre class=\"lang:java decode:true \">    @Test\r\n    void find_codenerves_awesome_book() {\r\n        assertThrows(Exception.class, () -&gt;\r\n                books.stream()\r\n                        .filter(book -&gt; book.getAuthor().contains(\"Codenerve\"))\r\n                        .findFirst()\r\n                        .orElseThrow(() -&gt; new Exception(\"Codenerve hasn't written any good books yet :-(\")));\r\n    }</pre>\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=&#8221;fas|map&#8221; tab_id=&#8221;1593167228716-e014acf1-3e5d&#8221; title=&#8221;Map&#8221;][/vc_tta_section][/vc_tta_tour][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\n<h1>Basic Operations on Maps</h1>\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h1>Streams on Arrays</h1>\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h1>Streams on Files</h1>\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=&#8221;small&#8221; show_line=&#8221;1&#8243; icon=&#8221;fas|code&#8221;][vc_column_text]\n<h1>Stream Builders</h1>\n<p>I am text block. Click edit button to change this text. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper mattis, pulvinar dapibus leo.[/vc_column_text][/vc_column][/vc_row]\n<!--kg-card-end: html-->","comment_id":"2357","plaintext":"[vc_row][vc_column][vc_column_text]Introduction\ntodo\n\n * A brief history of streams API\n * Types of operations Aggregate/intermediate / terminal\n\n[/vc_column_text][us_separator show_line=”1″\nicon=”fas|code”][/vc_column][/vc_row][vc_column][/vc_column][vc_row][vc_column][us_cta\ntitle=”Sample Code” color=”secondary” btn_label=”Code”\nbtn_link=”url:https%3A%2F%2Fgithub.com%2Fcodenerve-com%2Ftutorials%2Ftree%2Fmaster%2Fjava-cookbook||target:%20_blank|”\nbtn_style=”2″ btn_size=”15px” btn_icon=”fab|github”]The code for this lesson is\navailable on GitHub[/us_cta][us_separator show_line=”1″\nicon=”fas|code”][vc_column_text]Basic operations on Lists\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_tta_tour switch_sections=”hover” layout=”trendy”\ntitle_font=””][vc_tta_section icon=”fas|sort”\ntab_id=”1593167147786-cbc0cd2f-dca3″ title=”Sort”][vc_column_text]Input data\nThe following examples will use a list of book titles (strings):\n\n(These have been taken at random from devconnected.com’s best Software\nEngineering Books in 2019\n[https://devconnected.com/the-10-best-software-engineering-books-in-2019/])\n\n    private final List<String> books = asList(\r\n            \"Clean Code\",\r\n            \"Design Patterns: Elements of Reusable Object-Oriented Software\",\r\n            \"Patterns of Enterprise Application Architecture\",\r\n            \"Enterprise Integration Patterns\",\r\n            \"The Mythical Man-Month\",\r\n            \"Code Complete\",\r\n            \"Git for Teams\",\r\n            \"Refactoring: Improving the Design of Existing Code\",\r\n            \"The Art of Unit Testing\",\r\n            \"Soft Skills: The Software Developer’s Life Manual\");\r\n\n\n[/vc_column_text][us_separator size=”small”][vc_column_text]Sort strings in\nalphabetical order\nSorting a list of books in alphabetical order using sorted() i.e. natural\nordering\n[https://docs.oracle.com/javase/tutorial/collections/interfaces/order.html]:\n\n    @Test\r\n    void sort_alphabetical() {\r\n        List<Object> sortedList =\r\n                books.stream()\r\n                        .sorted()\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"Clean Code\")));\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"The Mythical Man-Month\")));\r\n    }\n\n[/vc_column_text][us_separator size=”small”][vc_column_text]Sort strings in\nreverse alphabetical order\nSorting a list of books in reverse alphabetical order using \nsorted(Comparator.reverseOrder()):\n\n    @Test\r\n    void sort_reverse_alphabetical() {\r\n        List<Object> sortedList =\r\n                books.stream()\r\n                        .sorted(Comparator.reverseOrder())\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"The Mythical Man-Month\")));\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"Clean Code\")));\r\n    }\n\n[/vc_column_text][us_separator size=”small”][vc_column_text]Sort by string\nlength\nSort the books in order of there title length using \nsorted(Comparator.comparing(String::length)):\n\n    @Test\r\n    void sort_by_title_length() {\r\n        List<Object> sortedList =\r\n                books.stream()\r\n                        .sorted(Comparator.comparing(String::length))\r\n                        .collect(toList());\r\n\r\n        assertThat(sortedList.get(0), is(equalTo(\"Clean Code\"))); // the shortest title\r\n        assertThat(sortedList.get(sortedList.size() -1), is(equalTo(\"Design Patterns: Elements of Reusable Object-Oriented Software\"))); // the longest title\r\n    }\n\n[/vc_column_text][us_separator size=”small”][vc_column_text]Sort string using a\ncustom comparator\nSort the number of books by the number of times a letter ‘e’ occurs in there\ntitle:\n\n    @Test\r\n    void sort_by_custom_comparator() {\r\n        List<Object> sortedList =\r\n                books.stream()\r\n                        .sorted(new CustomComparator())\r\n                        .collect(toList());\r\n\r\n        // the letter 3 occurs the most in this book.\r\n        assertThat(sortedList.get(0), is(equalTo(\"Design Patterns: Elements of Reusable Object-Oriented Software\")));\r\n    }\n\nWhere the custom comparator is:\n\nimport java.util.Comparator;\r\n\r\npublic class CustomComparator implements Comparator<String> {\r\n\r\n    /*\r\n        Sorts by the number of occurrences of the character 'e' in any given string\r\n     */\r\n    @Override\r\n    public int compare(String string, String string2) {\r\n        long stringCount = string.chars().filter(ch -> ch == 'e').count();\r\n        long secondStringCount = string2.chars().filter(ch -> ch == 'e').count();\r\n        return Long.compare(secondStringCount, stringCount);\r\n    }\r\n}\n\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=”fas|filter”\ntab_id=”1593167147801-27a547cc-163a” title=”Filter”][vc_column_text]Input data\nThe following examples will use a list of book objects. Each book contains a\ntitle, an author and a rating out of 5:\n\nN.B. these are all 5-star books but I have changed the ratings for the purpose\nof these examples.\n\n    private final List<Book> books = asList(\r\n            new Book(\"Clean Code\", \"Robert Martin\", 5),\r\n            new Book(\"Design Patterns: Elements of Reusable Object-Oriented Software\", \"Eric Gamma\", 4),\r\n            new Book(\"Patterns of Enterprise Application Architecture\", \"Martin Fowler\", 3),\r\n            new Book(\"Enterprise Integration Patterns\", \"Gregor Hohpe\", 5),\r\n            new Book(\"The Mythical Man-Month\", \"Frederick Brooks\", 4),\r\n            new Book(\"Code Complete\", \"Steve McConnell\", 3),\r\n            new Book(\"Git for Teams\", \"Emma Hogbin Westby\", 5),\r\n            new Book(\"Refactoring: Improving the Design of Existing Code\", \"Martin Fowler\", 4),\r\n            new Book(\"The Art of Unit Testing\", \"Roy Osherove\", 3),\r\n            new Book(\"Soft Skills: The Software Developer’s Life Manual\", \"John Sonmez\", 5));\r\n\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]Basic Filter\nFilter Book objects based on there rating:\n\n    @Test\r\n    void filter_five_star_books() {\r\n\r\n        List<Book> fiveStarBooks = books.stream()\r\n                .filter(book -> book.getRating() == 5)\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarBooks.size(), is(equalTo(4)));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]Multiple Filters\nSince filter(…) is an intermediate operation you can call as many as you like.\nThis example finds all five-star books with “Git” in their title:\n\n    @Test\r\n    void filter_five_star_git_books() {\r\n        List<Book> fiveStarGitBooks = books.stream()\r\n                .filter(book -> book.getRating() == 5)\r\n                .filter(book -> book.getTitle().contains(\"Git\"))\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarGitBooks.size(), is(equalTo(1)));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]Expanding Lambda Body\nMore complicated predicate conditions can be created by expanding out the\nfilters lambda body. This filters all boos with an even rating:\n\n    @Test\r\n    void filter_even_ratings() {\r\n        List<Book> bookILike = books.stream()\r\n                .filter(book -> {\r\n                    return book.getRating() % 2 == 0;\r\n                })\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(bookILike.size(), is(equalTo(3)));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]Filtering on predicates\nUseful for code re-use you can declare Predicates elsewhere and use in your\nfilters. This example finds all book titles with “Patterns” in the title:\n\n    @Test\r\n    void filter_pattern_books() {\r\n        List<Book> fiveStarBooks = books.stream()\r\n                .filter(patternBooks)\r\n                .collect(Collectors.toList());\r\n\r\n        assertThat(fiveStarBooks.size(), is(equalTo(3)));\r\n    }\n\nIn this case the predicate is a field:\n\nprivate final Predicate<Book> patternBooks = book -> book.getTitle().contains(\"Patterns\");\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]findAny\nUsed to find any item in the collection that matches the filter(s) conditions.\nReturns an optional which could be empty (see optionals\n[https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html] for more\ninfo). It is also important to note that this method is non-deterministic and\ncan return different results if run multiple times.\n\nThis example finds any Robert Martin book:\n\n    @Test\r\n    void find_a_robert_martin_book() {\r\n        Optional<Book> aRobertMartinBook = books.stream()\r\n                .filter(book -> book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findAny();\r\n\r\n        assertThat(aRobertMartinBook.get().getAuthor(), is(equalTo(\"Martin Fowler\")));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]orElse\nAn alternative to returning an optional from a findAny() call is to use \norElse(….). This allows us to return a default value if there are no matches in\nthe stream.\n\nThis example returns a Martin Fowler book if it exists in the collection or null\nif nothing is found:\n\n    @Test\r\n    void find_a_martin_fowler_book() {\r\n        Book aMartinFowlerBook = books.stream()\r\n                .filter(book -> book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findAny()\r\n                .orElse(null);\r\n\r\n        assertThat(aMartinFowlerBook.getAuthor(), is(equalTo(\"Martin Fowler\")));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]findFirst\nThe findFirst() method finds the first element in a Stream. Unlike findAny(…) it\nis deterministic.\n\nThis example finds the first Marting Fowler book in the stream or returns null:\n\n    @Test\r\n    void find_the_first_martin_fowler_book() {\r\n        Book aMartinFowlerBook = books.stream()\r\n                .filter(book -> book.getAuthor().contains(\"Martin Fowler\"))\r\n                .findFirst()\r\n                .orElse(null);\r\n\r\n        assertThat(aMartinFowlerBook.getTitle(), is(equalTo(\"Patterns of Enterprise Application Architecture\")));\r\n    }\n\n[/vc_column_text][us_separator size=”small” show_line=”1″\nicon=”fas|code”][vc_column_text]orElseThrow\nSimilar to orElse but instead of returning a default value if nothing is found\nin the stream throw and exception.\n\nThis example looks a book written by codenerve and returns an exception if one\ndoes not exist:\n\n    @Test\r\n    void find_codenerves_awesome_book() {\r\n        assertThrows(Exception.class, () ->\r\n                books.stream()\r\n                        .filter(book -> book.getAuthor().contains(\"Codenerve\"))\r\n                        .findFirst()\r\n                        .orElseThrow(() -> new Exception(\"Codenerve hasn't written any good books yet :-(\")));\r\n    }\n\n[/vc_column_text][/vc_tta_section][vc_tta_section icon=”fas|map”\ntab_id=”1593167228716-e014acf1-3e5d”\ntitle=”Map”][/vc_tta_section][/vc_tta_tour][/vc_column][/vc_row][vc_row][vc_column][vc_column_text]\nBasic Operations on Maps\nI am text block. Click edit button to change this text. Lorem ipsum dolor sit\namet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper\nmattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nStreams on Arrays\nI am text block. Click edit button to change this text. Lorem ipsum dolor sit\namet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper\nmattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nStreams on Files\nI am text block. Click edit button to change this text. Lorem ipsum dolor sit\namet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper\nmattis, pulvinar dapibus leo.[/vc_column_text][us_separator size=”small”\nshow_line=”1″ icon=”fas|code”][vc_column_text]\n\nStream Builders\nI am text block. Click edit button to change this text. Lorem ipsum dolor sit\namet, consectetur adipiscing elit. Ut elit tellus, luctus nec ullamcorper\nmattis, pulvinar dapibus leo.[/vc_column_text][/vc_column][/vc_row]","feature_image":null,"featured":0,"type":"post","status":"draft","locale":null,"visibility":"public","send_email_when_published":0,"author_id":"5f1203ad07a62a995513aebd","created_at":"2020-06-28 13:42:23","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-06-28 13:42:23","updated_by":"5f1203ad07a62a995513aebd","published_at":"2020-07-17 20:01:49","published_by":"5f1203ad07a62a995513aebd","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null}],"posts_meta":[{"id":"5f130129fea64da8810a2cd7","post_id":"5f1203ad07a62a995513aedb","og_image":null,"og_title":null,"og_description":"Free Spring Security Tutorials","twitter_image":null,"twitter_title":null,"twitter_description":"Free spring security tutorials","meta_title":null,"meta_description":null,"email_subject":null}],"users":[{"id":"1","name":"Michael Whyte","slug":"michael","password":"$2a$10$OYvCZ4O5eSintbtb4u/AKuPU8VisKZqYAogKiAPs6TQa76tVAiQ0m","email":"michael@codenerve.com","profile_image":"/content/images/2020/07/Photo-30-08-2015--16-16-43--1-.jpg","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":"@mwhyte_","accessibility":"{\"nightShift\":false,\"whatsNew\":{\"lastSeenDate\":\"2020-06-29T16:11:36.000+00:00\"}}","status":"active","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":"[\"getting-started\",\"upload-a-theme\",\"featured-post\"]","last_seen":"2020-08-11 12:45:46","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-08-11 12:45:46","updated_by":"1"},{"id":"5f1203ad07a62a995513aebd","name":"Michael W","slug":"mrwhyte","password":"$2a$10$rMhB1J5aQaPFq.1t716Ly.arg.jqrOaa.W8PCTcd1CSrKoSwyPvXC","email":"mrmwhyte@gmail.com","profile_image":"https://secure.gravatar.com/avatar/38fe2075db7c0586b2e0806c1d55d740?s=512&r=g","cover_image":null,"bio":null,"website":null,"location":null,"facebook":null,"twitter":"@mwhyte_","accessibility":null,"status":"inactive","locale":null,"visibility":"public","meta_title":null,"meta_description":null,"tour":null,"last_seen":null,"created_at":"2014-05-29 21:52:13","created_by":"5f1203ad07a62a995513aebd","updated_at":"2020-07-17 22:18:22","updated_by":"1"}],"posts_authors":[{"id":"5f1203ad07a62a995513aeed","post_id":"5f1203ad07a62a995513aec9","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef0","post_id":"5f1203ad07a62a995513aecc","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef1","post_id":"5f1203ad07a62a995513aecd","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef2","post_id":"5f1203ad07a62a995513aece","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef3","post_id":"5f1203ad07a62a995513aecf","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef4","post_id":"5f1203ad07a62a995513aed0","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef5","post_id":"5f1203ad07a62a995513aed1","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef6","post_id":"5f1203ad07a62a995513aed2","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aef9","post_id":"5f1203ad07a62a995513aed5","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aefa","post_id":"5f1203ad07a62a995513aed6","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aefb","post_id":"5f1203ad07a62a995513aed7","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aefc","post_id":"5f1203ad07a62a995513aed8","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513aefe","post_id":"5f1203ad07a62a995513aeda","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ad07a62a995513af02","post_id":"5f1203ad07a62a995513aede","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1203ae07a62a995513af06","post_id":"5f1203ad07a62a995513aee2","author_id":"5f1203ad07a62a995513aebd","sort_order":0},{"id":"5f1b6dc7f883d32764976eab","post_id":"5f1203ad07a62a995513aee0","author_id":"1","sort_order":0},{"id":"5f1b6ddef883d32764976eae","post_id":"5f1203ad07a62a995513aedd","author_id":"1","sort_order":0},{"id":"5f1b6de9f883d32764976eb1","post_id":"5f1203ad07a62a995513aedc","author_id":"1","sort_order":0},{"id":"5f1b6dfaf883d32764976eb4","post_id":"5f1203ad07a62a995513aedb","author_id":"1","sort_order":0}],"roles":[{"id":"5f12024507a62a995513ad45","name":"Administrator","description":"Administrators","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad46","name":"Editor","description":"Editors","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad47","name":"Author","description":"Authors","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad48","name":"Contributor","description":"Contributors","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad49","name":"Owner","description":"Blog Owner","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad4a","name":"Admin Integration","description":"External Apps","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad4b","name":"DB Backup Integration","description":"Internal DB Backup Client","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad4c","name":"Scheduler Integration","description":"Internal Scheduler Client","created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"}],"roles_users":[{"id":"5f12024607a62a995513ae7b","role_id":"5f12024507a62a995513ad49","user_id":"1"},{"id":"5f1203ad07a62a995513aebe","role_id":"5f12024507a62a995513ad47","user_id":"5f1203ad07a62a995513aebd"}],"permissions":[{"id":"5f12024507a62a995513ad4d","name":"Export database","object_type":"db","action_type":"exportContent","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad4e","name":"Import database","object_type":"db","action_type":"importContent","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad4f","name":"Delete all content","object_type":"db","action_type":"deleteAllContent","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad50","name":"Send mail","object_type":"mail","action_type":"send","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad51","name":"Browse notifications","object_type":"notification","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad52","name":"Add notifications","object_type":"notification","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad53","name":"Delete notifications","object_type":"notification","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad54","name":"Browse posts","object_type":"post","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad55","name":"Read posts","object_type":"post","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad56","name":"Edit posts","object_type":"post","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad57","name":"Add posts","object_type":"post","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad58","name":"Delete posts","object_type":"post","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad59","name":"Browse settings","object_type":"setting","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5a","name":"Read settings","object_type":"setting","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5b","name":"Edit settings","object_type":"setting","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5c","name":"Generate slugs","object_type":"slug","action_type":"generate","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5d","name":"Browse tags","object_type":"tag","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5e","name":"Read tags","object_type":"tag","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad5f","name":"Edit tags","object_type":"tag","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad60","name":"Add tags","object_type":"tag","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad61","name":"Delete tags","object_type":"tag","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad62","name":"Browse themes","object_type":"theme","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad63","name":"Edit themes","object_type":"theme","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad64","name":"Activate themes","object_type":"theme","action_type":"activate","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad65","name":"Upload themes","object_type":"theme","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad66","name":"Download themes","object_type":"theme","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad67","name":"Delete themes","object_type":"theme","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad68","name":"Browse users","object_type":"user","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad69","name":"Read users","object_type":"user","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6a","name":"Edit users","object_type":"user","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6b","name":"Add users","object_type":"user","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6c","name":"Delete users","object_type":"user","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6d","name":"Assign a role","object_type":"role","action_type":"assign","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6e","name":"Browse roles","object_type":"role","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad6f","name":"Browse invites","object_type":"invite","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad70","name":"Read invites","object_type":"invite","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad71","name":"Edit invites","object_type":"invite","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad72","name":"Add invites","object_type":"invite","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad73","name":"Delete invites","object_type":"invite","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad74","name":"Download redirects","object_type":"redirect","action_type":"download","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad75","name":"Upload redirects","object_type":"redirect","action_type":"upload","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad76","name":"Add webhooks","object_type":"webhook","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad77","name":"Edit webhooks","object_type":"webhook","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad78","name":"Delete webhooks","object_type":"webhook","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad79","name":"Browse integrations","object_type":"integration","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7a","name":"Read integrations","object_type":"integration","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7b","name":"Edit integrations","object_type":"integration","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7c","name":"Add integrations","object_type":"integration","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7d","name":"Delete integrations","object_type":"integration","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7e","name":"Browse API keys","object_type":"api_key","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad7f","name":"Read API keys","object_type":"api_key","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad80","name":"Edit API keys","object_type":"api_key","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad81","name":"Add API keys","object_type":"api_key","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad82","name":"Delete API keys","object_type":"api_key","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad83","name":"Browse Actions","object_type":"action","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad84","name":"Browse Members","object_type":"member","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad85","name":"Read Members","object_type":"member","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad86","name":"Edit Members","object_type":"member","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad87","name":"Add Members","object_type":"member","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad88","name":"Delete Members","object_type":"member","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad89","name":"Publish posts","object_type":"post","action_type":"publish","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8a","name":"Backup database","object_type":"db","action_type":"backupContent","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8b","name":"Email preview","object_type":"email_preview","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8c","name":"Send test email","object_type":"email_preview","action_type":"sendTestEmail","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8d","name":"Browse emails","object_type":"email","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8e","name":"Read emails","object_type":"email","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad8f","name":"Retry emails","object_type":"email","action_type":"retry","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad90","name":"Browse labels","object_type":"label","action_type":"browse","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad91","name":"Read labels","object_type":"label","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad92","name":"Edit labels","object_type":"label","action_type":"edit","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad93","name":"Add labels","object_type":"label","action_type":"add","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad94","name":"Delete labels","object_type":"label","action_type":"destroy","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad95","name":"Read member signin urls","object_type":"member_signin_url","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad96","name":"Read identities","object_type":"identity","action_type":"read","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"},{"id":"5f12024507a62a995513ad97","name":"Auth Stripe Connect for Members","object_type":"members_stripe_connect","action_type":"auth","object_id":null,"created_at":"2020-07-17 19:55:49","created_by":"1","updated_at":"2020-07-17 19:55:49","updated_by":"1"}],"permissions_users":[],"permissions_roles":[{"id":"5f12024607a62a995513adad","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad4d"},{"id":"5f12024607a62a995513adae","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad4e"},{"id":"5f12024607a62a995513adaf","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad4f"},{"id":"5f12024607a62a995513adb0","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8a"},{"id":"5f12024607a62a995513adb1","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad50"},{"id":"5f12024607a62a995513adb2","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad51"},{"id":"5f12024607a62a995513adb4","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad53"},{"id":"5f12024607a62a995513adb3","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad52"},{"id":"5f12024607a62a995513adb5","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad54"},{"id":"5f12024607a62a995513adb7","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad56"},{"id":"5f12024607a62a995513adb9","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad58"},{"id":"5f12024607a62a995513adb8","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad57"},{"id":"5f12024607a62a995513adb6","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad55"},{"id":"5f12024607a62a995513adba","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad89"},{"id":"5f12024607a62a995513adbb","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad59"},{"id":"5f12024607a62a995513adbd","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5b"},{"id":"5f12024607a62a995513adbc","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5a"},{"id":"5f12024607a62a995513adbe","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5c"},{"id":"5f12024607a62a995513adc0","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5e"},{"id":"5f12024607a62a995513adc1","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5f"},{"id":"5f12024607a62a995513adc2","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad60"},{"id":"5f12024607a62a995513adbf","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad5d"},{"id":"5f12024607a62a995513adc3","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad61"},{"id":"5f12024607a62a995513adc4","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad62"},{"id":"5f12024607a62a995513adc8","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad66"},{"id":"5f12024607a62a995513adc9","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad67"},{"id":"5f12024607a62a995513adc6","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad64"},{"id":"5f12024607a62a995513adc5","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad63"},{"id":"5f12024607a62a995513adc7","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad65"},{"id":"5f12024607a62a995513adcc","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6a"},{"id":"5f12024607a62a995513adca","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad68"},{"id":"5f12024607a62a995513adcd","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6b"},{"id":"5f12024607a62a995513adcb","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad69"},{"id":"5f12024607a62a995513adce","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6c"},{"id":"5f12024607a62a995513adcf","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6d"},{"id":"5f12024607a62a995513add0","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6e"},{"id":"5f12024607a62a995513add1","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad6f"},{"id":"5f12024607a62a995513add2","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad70"},{"id":"5f12024607a62a995513add4","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad72"},{"id":"5f12024607a62a995513add5","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad73"},{"id":"5f12024607a62a995513add3","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad71"},{"id":"5f12024607a62a995513add6","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad74"},{"id":"5f12024607a62a995513add7","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad75"},{"id":"5f12024607a62a995513add8","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad76"},{"id":"5f12024607a62a995513adda","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad78"},{"id":"5f12024607a62a995513add9","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad77"},{"id":"5f12024607a62a995513addb","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad79"},{"id":"5f12024607a62a995513addd","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7b"},{"id":"5f12024607a62a995513adde","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7c"},{"id":"5f12024607a62a995513addc","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7a"},{"id":"5f12024607a62a995513addf","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7d"},{"id":"5f12024607a62a995513ade0","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7e"},{"id":"5f12024607a62a995513ade2","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad80"},{"id":"5f12024607a62a995513ade3","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad81"},{"id":"5f12024607a62a995513ade4","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad82"},{"id":"5f12024607a62a995513ade1","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad7f"},{"id":"5f12024607a62a995513ade5","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad83"},{"id":"5f12024607a62a995513ade6","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad84"},{"id":"5f12024607a62a995513ade8","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad86"},{"id":"5f12024607a62a995513ade7","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad85"},{"id":"5f12024607a62a995513ade9","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad87"},{"id":"5f12024607a62a995513adea","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad88"},{"id":"5f12024607a62a995513adeb","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad90"},{"id":"5f12024607a62a995513aded","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad92"},{"id":"5f12024607a62a995513adef","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad94"},{"id":"5f12024607a62a995513adee","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad93"},{"id":"5f12024607a62a995513adec","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad91"},{"id":"5f12024607a62a995513adf0","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8b"},{"id":"5f12024607a62a995513adf1","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8c"},{"id":"5f12024607a62a995513adf2","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8d"},{"id":"5f12024607a62a995513adf3","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8e"},{"id":"5f12024607a62a995513adf4","role_id":"5f12024507a62a995513ad45","permission_id":"5f12024507a62a995513ad8f"},{"id":"5f12024607a62a995513adf5","role_id":"5f12024507a62a995513ad4b","permission_id":"5f12024507a62a995513ad4d"},{"id":"5f12024607a62a995513adf6","role_id":"5f12024507a62a995513ad4b","permission_id":"5f12024507a62a995513ad4e"},{"id":"5f12024607a62a995513adf7","role_id":"5f12024507a62a995513ad4b","permission_id":"5f12024507a62a995513ad4f"},{"id":"5f12024607a62a995513adf8","role_id":"5f12024507a62a995513ad4b","permission_id":"5f12024507a62a995513ad8a"},{"id":"5f12024607a62a995513adf9","role_id":"5f12024507a62a995513ad4c","permission_id":"5f12024507a62a995513ad89"},{"id":"5f12024607a62a995513adfa","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad50"},{"id":"5f12024607a62a995513adfb","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad51"},{"id":"5f12024607a62a995513adfd","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad53"},{"id":"5f12024607a62a995513adfc","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad52"},{"id":"5f12024607a62a995513adfe","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad54"},{"id":"5f12024607a62a995513ae01","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad57"},{"id":"5f12024607a62a995513ae02","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad58"},{"id":"5f12024607a62a995513adff","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad55"},{"id":"5f12024607a62a995513ae03","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad89"},{"id":"5f12024607a62a995513ae00","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad56"},{"id":"5f12024607a62a995513ae05","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5a"},{"id":"5f12024607a62a995513ae04","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad59"},{"id":"5f12024607a62a995513ae06","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5b"},{"id":"5f12024607a62a995513ae07","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5c"},{"id":"5f12024607a62a995513ae08","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5d"},{"id":"5f12024607a62a995513ae0a","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5f"},{"id":"5f12024607a62a995513ae09","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad5e"},{"id":"5f12024607a62a995513ae0b","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad60"},{"id":"5f12024607a62a995513ae0c","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad61"},{"id":"5f12024607a62a995513ae0d","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad62"},{"id":"5f12024607a62a995513ae0f","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad64"},{"id":"5f12024607a62a995513ae12","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad67"},{"id":"5f12024607a62a995513ae0e","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad63"},{"id":"5f12024607a62a995513ae10","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad65"},{"id":"5f12024607a62a995513ae11","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad66"},{"id":"5f12024607a62a995513ae13","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad68"},{"id":"5f12024607a62a995513ae17","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6c"},{"id":"5f12024607a62a995513ae15","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6a"},{"id":"5f12024607a62a995513ae16","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6b"},{"id":"5f12024607a62a995513ae14","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad69"},{"id":"5f12024607a62a995513ae18","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6d"},{"id":"5f12024607a62a995513ae19","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6e"},{"id":"5f12024607a62a995513ae1a","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad6f"},{"id":"5f12024607a62a995513ae1c","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad71"},{"id":"5f12024607a62a995513ae1b","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad70"},{"id":"5f12024607a62a995513ae1e","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad73"},{"id":"5f12024607a62a995513ae1d","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad72"},{"id":"5f12024607a62a995513ae1f","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad74"},{"id":"5f12024607a62a995513ae20","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad75"},{"id":"5f12024607a62a995513ae22","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad77"},{"id":"5f12024607a62a995513ae21","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad76"},{"id":"5f12024607a62a995513ae23","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad78"},{"id":"5f12024607a62a995513ae24","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad83"},{"id":"5f12024607a62a995513ae25","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad84"},{"id":"5f12024607a62a995513ae26","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad85"},{"id":"5f12024607a62a995513ae27","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad86"},{"id":"5f12024607a62a995513ae28","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad87"},{"id":"5f12024607a62a995513ae29","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad88"},{"id":"5f12024607a62a995513ae2a","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad90"},{"id":"5f12024607a62a995513ae2b","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad91"},{"id":"5f12024607a62a995513ae2c","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad92"},{"id":"5f12024607a62a995513ae2e","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad94"},{"id":"5f12024607a62a995513ae2d","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad93"},{"id":"5f12024607a62a995513ae2f","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad8b"},{"id":"5f12024607a62a995513ae30","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad8c"},{"id":"5f12024607a62a995513ae31","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad8d"},{"id":"5f12024607a62a995513ae33","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad8f"},{"id":"5f12024607a62a995513ae32","role_id":"5f12024507a62a995513ad4a","permission_id":"5f12024507a62a995513ad8e"},{"id":"5f12024607a62a995513ae34","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad51"},{"id":"5f12024607a62a995513ae35","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad52"},{"id":"5f12024607a62a995513ae36","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad53"},{"id":"5f12024607a62a995513ae37","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad54"},{"id":"5f12024607a62a995513ae3b","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad58"},{"id":"5f12024607a62a995513ae3c","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad89"},{"id":"5f12024607a62a995513ae39","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad56"},{"id":"5f12024607a62a995513ae38","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad55"},{"id":"5f12024607a62a995513ae3a","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad57"},{"id":"5f12024607a62a995513ae3d","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad59"},{"id":"5f12024607a62a995513ae3e","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad5a"},{"id":"5f12024607a62a995513ae3f","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad5c"},{"id":"5f12024607a62a995513ae40","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad5d"},{"id":"5f12024607a62a995513ae43","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad60"},{"id":"5f12024607a62a995513ae41","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad5e"},{"id":"5f12024607a62a995513ae44","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad61"},{"id":"5f12024607a62a995513ae42","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad5f"},{"id":"5f12024607a62a995513ae45","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad68"},{"id":"5f12024607a62a995513ae49","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6c"},{"id":"5f12024607a62a995513ae47","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6a"},{"id":"5f12024607a62a995513ae48","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6b"},{"id":"5f12024607a62a995513ae46","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad69"},{"id":"5f12024607a62a995513ae4a","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6d"},{"id":"5f12024607a62a995513ae4b","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6e"},{"id":"5f12024607a62a995513ae4c","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad6f"},{"id":"5f12024607a62a995513ae50","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad73"},{"id":"5f12024607a62a995513ae4e","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad71"},{"id":"5f12024607a62a995513ae4f","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad72"},{"id":"5f12024607a62a995513ae4d","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad70"},{"id":"5f12024607a62a995513ae51","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad62"},{"id":"5f12024607a62a995513ae52","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad8b"},{"id":"5f12024607a62a995513ae53","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad8c"},{"id":"5f12024607a62a995513ae54","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad8d"},{"id":"5f12024607a62a995513ae56","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad8f"},{"id":"5f12024607a62a995513ae55","role_id":"5f12024507a62a995513ad46","permission_id":"5f12024507a62a995513ad8e"},{"id":"5f12024607a62a995513ae58","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad55"},{"id":"5f12024607a62a995513ae57","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad54"},{"id":"5f12024607a62a995513ae59","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad57"},{"id":"5f12024607a62a995513ae5a","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad59"},{"id":"5f12024607a62a995513ae5b","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad5a"},{"id":"5f12024607a62a995513ae5c","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad5c"},{"id":"5f12024607a62a995513ae5d","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad5d"},{"id":"5f12024607a62a995513ae5e","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad5e"},{"id":"5f12024607a62a995513ae5f","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad60"},{"id":"5f12024607a62a995513ae60","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad68"},{"id":"5f12024607a62a995513ae61","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad69"},{"id":"5f12024607a62a995513ae62","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad6e"},{"id":"5f12024607a62a995513ae63","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad62"},{"id":"5f12024607a62a995513ae64","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad8b"},{"id":"5f12024607a62a995513ae65","role_id":"5f12024507a62a995513ad47","permission_id":"5f12024507a62a995513ad8e"},{"id":"5f12024607a62a995513ae66","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad54"},{"id":"5f12024607a62a995513ae67","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad55"},{"id":"5f12024607a62a995513ae68","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad57"},{"id":"5f12024607a62a995513ae69","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad59"},{"id":"5f12024607a62a995513ae6a","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad5a"},{"id":"5f12024607a62a995513ae6b","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad5c"},{"id":"5f12024607a62a995513ae6c","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad5d"},{"id":"5f12024607a62a995513ae6d","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad5e"},{"id":"5f12024607a62a995513ae6e","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad68"},{"id":"5f12024607a62a995513ae6f","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad69"},{"id":"5f12024607a62a995513ae70","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad6e"},{"id":"5f12024607a62a995513ae71","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad62"},{"id":"5f12024607a62a995513ae72","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad8b"},{"id":"5f12024607a62a995513ae73","role_id":"5f12024507a62a995513ad48","permission_id":"5f12024507a62a995513ad8e"}],"permissions_apps":[],"settings":[{"id":"5f12024607a62a995513ae7c","group":"core","key":"db_hash","value":"bfa342f0-cc4c-4b6f-a7b8-fd267e6daccb","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024607a62a995513ae7d","group":"core","key":"next_update_check","value":"1597236347","type":"number","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-08-11 12:45:46","updated_by":"1"},{"id":"5f12024607a62a995513ae7e","group":"core","key":"notifications","value":"[{\"dismissible\":true,\"location\":\"bottom\",\"status\":\"alert\",\"id\":\"77b45e80-dbbe-11ea-8ce3-afdfbdb6a3f3\",\"custom\":false,\"createdAt\":\"2020-08-11T09:36:08.000Z\",\"type\":\"info\",\"top\":false,\"message\":\"Ghost <a href=\\\"https://github.com/TryGhost/Ghost/releases\\\">3.29.1</a> has been released, <a href=\\\"https://ghost.org/update/?v=3.26.1\\\">click here</a> to upgrade.\",\"seen\":false,\"addedAt\":\"2020-08-11T12:45:46.618Z\"}]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-08-11 12:45:46","updated_by":"1"},{"id":"5f12024607a62a995513ae7f","group":"core","key":"session_secret","value":"cfc82a16886467e9bd2015d023ee3fac2cc1f9ab71df9dec881f987fcec15a20","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024607a62a995513ae80","group":"core","key":"theme_session_secret","value":"8a248d97c9b0db6b91a1bc7df15538ad774de8295f9921a4acf60d754024442a","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae81","group":"core","key":"ghost_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAIl7cX/gJCDZVlMmUp5oee+mhrDwTr5me7bBxcPCbiQWE8vht2vFrFxU4IfudM5u\nPYaQV1eikCPAplgJbHe97/ZQoOssuXHMUMt3CN0fuxsfi4j6j56XCK8NVOIup0x7wvwFPz/X\nzUFBMq18+DPZ7hFLi84yn95Bz9IQM8thEuzJAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae82","group":"core","key":"ghost_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQCJe3F/4CQg2VZTJlKeaHnvpoaw8E6+Znu2wcXDwm4kFhPL4bdrxaxcVOCH\n7nTObj2GkFdXopAjwKZYCWx3ve/2UKDrLLlxzFDLdwjdH7sbH4uI+o+elwivDVTiLqdMe8L8\nBT8/181BQTKtfPgz2e4RS4vOMp/eQc/SEDPLYRLsyQIDAQABAoGAViy5JPViz/BLCs2PpdlI\n7S2NaaUHRpNIYnKtOppJnXb1K6us4/HAqxNMtgeC0c4J5KnfBYBRJwfffHlTsu6sVOLOHUUS\n0Ec4ndUwTBsNNCvpPIrTeOpA5Z4H+TMwz42NG4U9LyFUxaTnHKO8vOuDOWqMtNu1H2Tz3lf0\njtDSynECQQDfP6euApAX7N2CuuyrVwjncjZF1WxMJli5sSDQ6XJBoVk3AiqxigEfZpM/TO69\n1CGX+1sa0L6GxO7Is+m1IbqdAkEAnaa8gTZ9bulfa20iYeYhIZ/JLIRHm3hNZZinpwDyVgVv\nqh7Rd8bH8hspxY8yiYOHrheF+rM0VTMDXLhBtYEdHQJAfmSbmnj4+5KvFoSd2aO89sxCzea3\nGaXcNcWCvsRsW5vt1qbzZPCtEgoQ85Wq1O501ocIXXYxaDu2tQqnFlWyQQJBAA4IDhUODYH2\noXiFQR8nhWFhwF0G9Pyga3sUaC+UBP2lBDhG/+vCNH+W7VPZF+1nWIclLtaOZqUColT5TVfj\nQv0CQFmp+iTGCYRMRQeG7YHBntvYhLOBpyBp0Va445vUWdUU9ODLO6cK0+F9w/z5mKaI2msN\nN4Vd5i4NJKPRQAzZ46c=\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae83","group":"core","key":"members_public_key","value":"-----BEGIN RSA PUBLIC KEY-----\nMIGJAoGBAI7I+xARL0QigQwrPft3ma0bgLTyu7E6ZErTTu+MBnzQxIgZpF+k8/ziUpTnTn/L\nXRcE7QxxY7/OMxOc/J10/tZ2J/0j+XBrR/IsmPm2i/7Wk0UJukTUCbAkoEj2kWN8HTcl/S5n\nCpCxttMjabpUaf35W+s5atFGR1gyugwcEO6DAgMBAAE=\n-----END RSA PUBLIC KEY-----\n","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae84","group":"core","key":"members_private_key","value":"-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQCOyPsQES9EIoEMKz37d5mtG4C08ruxOmRK007vjAZ80MSIGaRfpPP84lKU\n505/y10XBO0McWO/zjMTnPyddP7Wdif9I/lwa0fyLJj5tov+1pNFCbpE1AmwJKBI9pFjfB03\nJf0uZwqQsbbTI2m6VGn9+VvrOWrRRkdYMroMHBDugwIDAQABAoGAQTpZTz66fALTNy7t8tnx\nT154DrGwwsbtGC2uKsqqEA0DKzWjnLnraEQv+6wrdT/+98wdSojmS7I0LSqTUI8o9ztsdoVi\n7lCc8uM/tMS8N5OBYQ6qpPR/H+OoSUfoUApXA6JNq4j88QbVqWPUTtz33qvMuAUubKf+rAZp\nEEM9uQkCQQDDQnHQFl2E80iTdQUWbTtZmZDLSE5zCnGVQidDVkRp3nzUHXkKNaEqpZf5Ee0/\nN8S5qgRATwZ8+8HPNrjxiiclAkEAuzO3JJJvPiuFTHg5Bwc4iGZI7GdPu5L6/E1oLpqtFagD\nVxqzhMJy6Uz26vwWte9VnUd7ROGY6jilvr+X18gChwJAXMoum9yFBLE4RBrQGCBAnAvGK1Rp\nM3I7F9sgHXfZexYn7AU1iAyEUmfvGIXUYL531mNdMdJcGvjo2TgAG4izoQJBALQNZ6c7WNeZ\nEFqef2stHMjEaHtIWr30/oZRBVVd3AAqWxwaSHP2eoO+TPdyg311twjRSdTUjzkoRvKSYL9g\nVl0CQQCqowbzDrj83W8V5xgeINJK2bWVDBz9EunnzeG//RJybLI7s0XtFgUc579HF5MAHODL\n9qGt0561rjunmSg9so8z\n-----END RSA PRIVATE KEY-----\n","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae85","group":"core","key":"members_email_auth_secret","value":"8e8a9c5f9252821e9405affc97cdba1495f24e785c1236c73644478de9ddda2acab8ff6b4156601924fe18009429bc5918eb56bfa4706fea9780086ba4b54838","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae86","group":"core","key":"members_stripe_webhook_id","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae87","group":"core","key":"members_stripe_webhook_secret","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae88","group":"site","key":"title","value":"codenerve","type":"string","flags":"PUBLIC","created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 23:12:16","updated_by":"1"},{"id":"5f12024707a62a995513ae89","group":"site","key":"description","value":"Software Development Tutorials","type":"string","flags":"PUBLIC","created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:03:32","updated_by":"1"},{"id":"5f12024707a62a995513ae8a","group":"site","key":"logo","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 23:11:24","updated_by":"1"},{"id":"5f12024707a62a995513ae8b","group":"site","key":"cover_image","value":"/content/images/2020/07/twitter_cover.png","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:08:21","updated_by":"1"},{"id":"5f12024707a62a995513ae8c","group":"site","key":"icon","value":"/content/images/2020/07/favicon.png","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:08:21","updated_by":"1"},{"id":"5f12024707a62a995513ae8d","group":"site","key":"accent_color","value":null,"type":"string","flags":"PUBLIC","created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:02:25","updated_by":"1"},{"id":"5f12024707a62a995513ae8e","group":"site","key":"lang","value":"en","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae8f","group":"site","key":"timezone","value":"Etc/UTC","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae90","group":"site","key":"codeinjection_head","value":"<!-- Global site tag (gtag.js) - Google Analytics -->\n<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-51518117-1\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n\n  gtag('config', 'UA-51518117-1');\n</script>","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-18 23:35:00","updated_by":"1"},{"id":"5f12024707a62a995513ae91","group":"site","key":"codeinjection_foot","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-18 23:35:04","updated_by":"1"},{"id":"5f12024707a62a995513ae92","group":"site","key":"facebook","value":"codenerve/","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:11:48","updated_by":"1"},{"id":"5f12024707a62a995513ae93","group":"site","key":"twitter","value":"@codenerve","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:11:48","updated_by":"1"},{"id":"5f12024707a62a995513ae94","group":"site","key":"navigation","value":"[{\"label\":\"Spring\",\"url\":\"/tag/spring/\"},{\"label\":\"Kotlin\",\"url\":\"/tag/kotlin/\"},{\"label\":\"Java\",\"url\":\"/tag/java/\"}]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-23 20:23:14","updated_by":"1"},{"id":"5f12024707a62a995513ae95","group":"site","key":"secondary_navigation","value":"[]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-18 22:56:46","updated_by":"1"},{"id":"5f12024707a62a995513ae96","group":"site","key":"meta_title","value":"Codenerve Software Development Tutorials","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-23 22:50:29","updated_by":"1"},{"id":"5f12024707a62a995513ae97","group":"site","key":"meta_description","value":"Software Development Tutorials in spring, kotlin, java. and everything else in between","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-23 22:50:29","updated_by":"1"},{"id":"5f12024707a62a995513ae98","group":"site","key":"og_image","value":"http://localhost:2368/content/images/2020/07/youtube_cover.png","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:11:48","updated_by":"1"},{"id":"5f12024707a62a995513ae99","group":"site","key":"og_title","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae9a","group":"site","key":"og_description","value":"Free Software Development Tutorials in spring, kotlin, java and everything else in between.","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-23 22:50:29","updated_by":"1"},{"id":"5f12024707a62a995513ae9b","group":"site","key":"twitter_image","value":"http://localhost:2368/content/images/2020/07/twitter_cover-1.png","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:09:00","updated_by":"1"},{"id":"5f12024707a62a995513ae9c","group":"site","key":"twitter_title","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513ae9d","group":"site","key":"twitter_description","value":"Free Software Development Tutorials in spring, kotlin, java and everything else in between.","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-23 22:50:29","updated_by":"1"},{"id":"5f12024707a62a995513ae9e","group":"theme","key":"active_theme","value":"codenerve-theme","type":"string","flags":"RO","created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-26 22:26:00","updated_by":"1"},{"id":"5f12024707a62a995513ae9f","group":"private","key":"is_private","value":"false","type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea0","group":"private","key":"password","value":"","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea1","group":"private","key":"public_hash","value":"729262860ee8c209537d0ed92ab8d6","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea2","group":"members","key":"default_content_visibility","value":"public","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea3","group":"members","key":"members_allow_free_signup","value":"true","type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea4","group":"members","key":"members_from_address","value":"noreply","type":"string","flags":"RO","created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea5","group":"members","key":"stripe_product_name","value":"Ghost Subscription","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea6","group":"members","key":"stripe_secret_key","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea7","group":"members","key":"stripe_publishable_key","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea8","group":"members","key":"stripe_plans","value":"[{\"name\":\"Monthly\",\"currency\":\"usd\",\"interval\":\"month\",\"amount\":500},{\"name\":\"Yearly\",\"currency\":\"usd\",\"interval\":\"year\",\"amount\":5000}]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aea9","group":"members","key":"stripe_connect_publishable_key","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeaa","group":"members","key":"stripe_connect_secret_key","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeab","group":"members","key":"stripe_connect_livemode","value":null,"type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeac","group":"members","key":"stripe_connect_display_name","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aead","group":"members","key":"stripe_connect_account_id","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeae","group":"portal","key":"portal_name","value":"true","type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeaf","group":"portal","key":"portal_button","value":"true","type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb0","group":"portal","key":"portal_plans","value":"[\"free\",\"monthly\",\"yearly\"]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:02:25","updated_by":"1"},{"id":"5f12024707a62a995513aeb1","group":"portal","key":"portal_button_style","value":"icon-and-text","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb2","group":"portal","key":"portal_button_icon","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb3","group":"portal","key":"portal_button_signup_text","value":"Subscribe","type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb4","group":"email","key":"mailgun_domain","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb5","group":"email","key":"mailgun_api_key","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb6","group":"email","key":"mailgun_base_url","value":null,"type":"string","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb7","group":"amp","key":"amp","value":"true","type":"boolean","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f12024707a62a995513aeb8","group":"labs","key":"labs","value":"{\"members\":false}","type":"object","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-19 08:55:21","updated_by":"1"},{"id":"5f12024707a62a995513aeb9","group":"slack","key":"slack","value":"[]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:02:25","updated_by":"1"},{"id":"5f12024707a62a995513aeba","group":"unsplash","key":"unsplash","value":"{\"isActive\":true}","type":"object","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 22:02:25","updated_by":"1"},{"id":"5f12024707a62a995513aebb","group":"views","key":"shared_views","value":"[]","type":"array","flags":null,"created_at":"2020-07-17 19:55:51","created_by":"1","updated_at":"2020-07-17 19:55:51","updated_by":"1"},{"id":"5f1a12c9efa2ee25a830b280","group":"amp","key":"amp_gtag_id","value":null,"type":"string","flags":null,"created_at":"2020-07-23 22:44:25","created_by":"1","updated_at":"2020-07-23 22:44:25","updated_by":"1"},{"id":"5f5779b8c74bc8e6484b70fe","group":"core","key":"routes_hash","value":null,"type":"string","flags":null,"created_at":"2020-09-08 12:31:52","created_by":"1","updated_at":"2020-09-08 12:31:52","updated_by":"1"},{"id":"5f5779b8c74bc8e6484b70ff","group":"members","key":"members_support_address","value":"noreply","type":"string","flags":"PUBLIC,RO","created_at":"2020-09-08 12:31:52","created_by":"1","updated_at":"2020-09-08 12:31:52","updated_by":"1"},{"id":"5f5779b8c74bc8e6484b7100","group":"members","key":"members_reply_address","value":"newsletter","type":"string","flags":null,"created_at":"2020-09-08 12:31:52","created_by":"1","updated_at":"2020-09-08 12:31:52","updated_by":"1"}],"tags":[{"id":"5f1203ad07a62a995513aebf","name":"java","slug":"java","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-17 20:01:49","created_by":"1","updated_at":"2020-07-23 20:24:54","updated_by":"1"},{"id":"5f1203ad07a62a995513aec0","name":"OCJA","slug":"ocja","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-17 20:01:49","created_by":"1","updated_at":"2020-07-17 20:01:49","updated_by":null},{"id":"5f1203ad07a62a995513aec1","name":"Oracle Exams","slug":"oracle-exams","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-17 20:01:49","created_by":"1","updated_at":"2020-07-17 20:01:49","updated_by":null},{"id":"5f1300f6fea64da8810a2cd2","name":"spring","slug":"spring","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-18 14:02:30","created_by":"1","updated_at":"2020-07-18 14:02:30","updated_by":"1"},{"id":"5f19e8511dfe3a0c1ca351dd","name":"spring-cloud","slug":"spring-cloud","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-23 19:43:13","created_by":"1","updated_at":"2020-07-23 19:43:13","updated_by":"1"},{"id":"5f19e8511dfe3a0c1ca351de","name":"kotlin","slug":"kotlin","description":null,"feature_image":null,"parent_id":null,"visibility":"public","og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"codeinjection_head":null,"codeinjection_foot":null,"canonical_url":null,"accent_color":null,"created_at":"2020-07-23 19:43:13","created_by":"1","updated_at":"2020-07-23 19:43:13","updated_by":"1"}],"posts_tags":[{"id":"5f1203ad07a62a995513aeea","post_id":"5f1203ad07a62a995513aec9","tag_id":"5f1203ad07a62a995513aebf","sort_order":0},{"id":"5f1203ad07a62a995513aeeb","post_id":"5f1203ad07a62a995513aec9","tag_id":"5f1203ad07a62a995513aec0","sort_order":1},{"id":"5f1203ad07a62a995513aeec","post_id":"5f1203ad07a62a995513aec9","tag_id":"5f1203ad07a62a995513aec1","sort_order":2},{"id":"5f1300f6fea64da8810a2cd3","post_id":"5f1203ad07a62a995513aedb","tag_id":"5f1300f6fea64da8810a2cd2","sort_order":0},{"id":"5f14136b967871c7e895cffe","post_id":"5f1203ad07a62a995513aedc","tag_id":"5f1300f6fea64da8810a2cd2","sort_order":0},{"id":"5f173596b51733dcfb279b76","post_id":"5f1203ad07a62a995513aedd","tag_id":"5f1300f6fea64da8810a2cd2","sort_order":0},{"id":"5f19e8511dfe3a0c1ca351df","post_id":"5f1203ad07a62a995513aee0","tag_id":"5f19e8511dfe3a0c1ca351dd","sort_order":0},{"id":"5f19e8511dfe3a0c1ca351e0","post_id":"5f1203ad07a62a995513aee0","tag_id":"5f19e8511dfe3a0c1ca351de","sort_order":1},{"id":"5f19f1c619d1371edcd15ed6","post_id":"5f1203ad07a62a995513aedb","tag_id":"5f1203ad07a62a995513aebf","sort_order":1},{"id":"5f19f1d619d1371edcd15ed8","post_id":"5f1203ad07a62a995513aedc","tag_id":"5f1203ad07a62a995513aebf","sort_order":1},{"id":"5f19f1ef19d1371edcd15eda","post_id":"5f1203ad07a62a995513aedd","tag_id":"5f1203ad07a62a995513aebf","sort_order":1},{"id":"5f1a16ecf883d32764976ea9","post_id":"5f1203ad07a62a995513aee0","tag_id":"5f1300f6fea64da8810a2cd2","sort_order":2}],"apps":[],"app_settings":[],"app_fields":[],"invites":[],"brute":[{"key":"oHUubZQTM66eOWJCFaoi+8dO/eXPG5zwBOW8P5YAuKM=","firstRequest":1595015830894,"lastRequest":1595015830894,"lifetime":1595019430897,"count":1}],"webhooks":[],"integrations":[{"id":"5f12024607a62a995513ada7","type":"builtin","name":"Zapier","slug":"zapier","icon_image":null,"description":"Built-in Zapier integration","created_at":"2020-07-17 19:55:50","created_by":"1","updated_at":"2020-07-17 19:55:50","updated_by":"1"},{"id":"5f12024607a62a995513ada9","type":"internal","name":"Ghost Backup","slug":"ghost-backup","icon_image":null,"description":"Internal DB Backup integration","created_at":"2020-07-17 19:55:50","created_by":"1","updated_at":"2020-07-17 19:55:50","updated_by":"1"},{"id":"5f12024607a62a995513adab","type":"internal","name":"Ghost Scheduler","slug":"ghost-scheduler","icon_image":null,"description":"Internal Scheduler integration","created_at":"2020-07-17 19:55:50","created_by":"1","updated_at":"2020-07-17 19:55:50","updated_by":"1"}],"api_keys":[{"id":"5f12024607a62a995513ada8","type":"admin","secret":"d260bae68f9ad9077dd48529269a0dea5729b3c18ea0573dff7a1142713d8a5c","role_id":"5f12024507a62a995513ad4a","integration_id":"5f12024607a62a995513ada7","last_seen_at":null,"last_seen_version":null,"created_at":1595015750277,"created_by":"1","updated_at":1595015750277,"updated_by":"1"},{"id":"5f12024607a62a995513adaa","type":"admin","secret":"90df5556f258c99b2358010b2d9ce3812f6bb6431b8379fbbd2d8ba0d2b89b4e","role_id":"5f12024507a62a995513ad4b","integration_id":"5f12024607a62a995513ada9","last_seen_at":null,"last_seen_version":null,"created_at":1595015750284,"created_by":"1","updated_at":1595015750284,"updated_by":"1"},{"id":"5f12024607a62a995513adac","type":"admin","secret":"64b51c796f87d0c33a98fe565ecef7d9352a1b69e570c44ad3f699aeff1a2f7c","role_id":"5f12024507a62a995513ad4c","integration_id":"5f12024607a62a995513adab","last_seen_at":null,"last_seen_version":null,"created_at":1595015750289,"created_by":"1","updated_at":1595015750289,"updated_by":"1"}],"members":[],"labels":[],"members_labels":[],"members_stripe_customers":[],"members_stripe_customers_subscriptions":[],"actions":[{"id":"5f1203b807a62a995513af07","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 20:02:00"},{"id":"5f1203e507a62a995513af08","resource_id":"5f1203ad07a62a995513aeca","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 20:02:45"},{"id":"5f120e1907a62a995513af09","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 20:46:17"},{"id":"5f12109a07a62a995513af0a","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 20:56:58"},{"id":"5f121f0407a62a995513af0c","resource_id":"5f12024607a62a995513ad9f","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af0d","resource_id":"5f12024607a62a995513ada1","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af0e","resource_id":"5f12024607a62a995513ada3","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af0f","resource_id":"5f12024607a62a995513ada5","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af10","resource_id":"5f12024607a62a995513ad9d","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af11","resource_id":"5f12024607a62a995513ad9b","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af12","resource_id":"5f12024607a62a995513ad99","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f0407a62a995513af13","resource_id":"5951f5fca366002ebd5dbef7","resource_type":"user","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 21:58:28"},{"id":"5f121f4d07a62a995513af14","resource_id":"5f1203ad07a62a995513aebd","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 21:59:41"},{"id":"5f1222f207a62a995513af15","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:15:14"},{"id":"5f1223ae07a62a995513af16","resource_id":"5f1203ad07a62a995513aebd","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:18:22"},{"id":"5f1223db07a62a995513af17","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:07"},{"id":"5f1223e107a62a995513af18","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:13"},{"id":"5f1223ed07a62a995513af19","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:25"},{"id":"5f1223f207a62a995513af1a","resource_id":"5f1203ad07a62a995513aeda","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:30"},{"id":"5f1223f607a62a995513af1b","resource_id":"5f1203ad07a62a995513aed8","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:34"},{"id":"5f1223fc07a62a995513af1c","resource_id":"5f1203ad07a62a995513aed7","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:40"},{"id":"5f12240007a62a995513af1d","resource_id":"5f1203ad07a62a995513aed5","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:44"},{"id":"5f12240407a62a995513af1e","resource_id":"5f1203ad07a62a995513aed2","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:48"},{"id":"5f12240907a62a995513af1f","resource_id":"5f1203ad07a62a995513aed1","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:53"},{"id":"5f12240d07a62a995513af20","resource_id":"5f1203ad07a62a995513aed0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:19:57"},{"id":"5f12241107a62a995513af21","resource_id":"5f1203ad07a62a995513aecf","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:20:01"},{"id":"5f12241507a62a995513af22","resource_id":"5f1203ad07a62a995513aece","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:20:05"},{"id":"5f12241a07a62a995513af23","resource_id":"5f1203ad07a62a995513aecd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:20:10"},{"id":"5f12241e07a62a995513af24","resource_id":"5f1203ad07a62a995513aecc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:20:14"},{"id":"5f12242107a62a995513af25","resource_id":"5f1203ad07a62a995513aec9","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:20:17"},{"id":"5f1228a507a62a995513af26","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:39:33"},{"id":"5f1228bf07a62a995513af27","resource_id":"5f1203ad07a62a995513aec6","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:39:59"},{"id":"5f1228c607a62a995513af28","resource_id":"5f1203ad07a62a995513aec6","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:06"},{"id":"5f1228cf07a62a995513af29","resource_id":"5f1203ad07a62a995513aee1","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:15"},{"id":"5f1228d707a62a995513af2a","resource_id":"5f1203ad07a62a995513aedf","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:23"},{"id":"5f1228de07a62a995513af2b","resource_id":"5f1203ad07a62a995513aed9","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:30"},{"id":"5f1228e807a62a995513af2c","resource_id":"5f1203ad07a62a995513aec2","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:40"},{"id":"5f1228ed07a62a995513af2d","resource_id":"5f1203ad07a62a995513aed4","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:40:45"},{"id":"5f12290107a62a995513af2e","resource_id":"5f1203ad07a62a995513aed3","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:05"},{"id":"5f12290707a62a995513af2f","resource_id":"5f1203ad07a62a995513aecb","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:11"},{"id":"5f12290c07a62a995513af30","resource_id":"5f1203ad07a62a995513aec8","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:16"},{"id":"5f12291107a62a995513af31","resource_id":"5f1203ad07a62a995513aec7","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:21"},{"id":"5f12291707a62a995513af32","resource_id":"5f1203ad07a62a995513aec5","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:27"},{"id":"5f12291b07a62a995513af33","resource_id":"5f1203ad07a62a995513aec4","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:31"},{"id":"5f12292107a62a995513af34","resource_id":"5f1203ad07a62a995513aec3","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:41:37"},{"id":"5f12293407a62a995513af38","resource_id":"5f12293407a62a995513af35","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2020-07-17 22:41:56"},{"id":"5f12293b07a62a995513af3a","resource_id":"5f12293407a62a995513af35","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 22:42:03"},{"id":"5f12294007a62a995513af3b","resource_id":"5f12293407a62a995513af35","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-17 22:42:08"},{"id":"5f122f66fea64da8810a2c2a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 23:08:22"},{"id":"5f123009fea64da8810a2c2b","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 23:11:05"},{"id":"5f1232c5fea64da8810a2c2c","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-17 23:22:45"},{"id":"5f12c19efea64da8810a2c30","resource_id":"5f12c19dfea64da8810a2c2d","resource_type":"post","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2020-07-18 09:32:14"},{"id":"5f12c1b4fea64da8810a2c32","resource_id":"5f12c19dfea64da8810a2c2d","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 09:32:36"},{"id":"5f12c36dfea64da8810a2c33","resource_id":"5f12c19dfea64da8810a2c2d","resource_type":"post","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-18 09:39:57"},{"id":"5f12c88afea64da8810a2c36","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:01:46"},{"id":"5f12c894fea64da8810a2c38","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:01:56"},{"id":"5f12c8a1fea64da8810a2c3a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:02:09"},{"id":"5f12d409fea64da8810a2c3c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:50:49"},{"id":"5f12d418fea64da8810a2c3e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:51:04"},{"id":"5f12d442fea64da8810a2c40","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 10:51:46"},{"id":"5f12d66dfea64da8810a2c42","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:01:01"},{"id":"5f12d687fea64da8810a2c44","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:01:27"},{"id":"5f12d694fea64da8810a2c46","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:01:40"},{"id":"5f12d69efea64da8810a2c48","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:01:50"},{"id":"5f12d707fea64da8810a2c4a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:03:35"},{"id":"5f12d70ffea64da8810a2c4c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:03:43"},{"id":"5f12d724fea64da8810a2c4e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:04:04"},{"id":"5f12d793fea64da8810a2c50","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:05:55"},{"id":"5f12d796fea64da8810a2c52","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:05:58"},{"id":"5f12d7a6fea64da8810a2c54","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:06:14"},{"id":"5f12d7b5fea64da8810a2c56","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:06:29"},{"id":"5f12d7b8fea64da8810a2c58","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:06:32"},{"id":"5f12d7c9fea64da8810a2c5a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:06:49"},{"id":"5f12d7cdfea64da8810a2c5c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:06:53"},{"id":"5f12d7dcfea64da8810a2c5e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:07:08"},{"id":"5f12d7e2fea64da8810a2c60","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:07:14"},{"id":"5f12d852fea64da8810a2c62","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:06"},{"id":"5f12d857fea64da8810a2c64","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:11"},{"id":"5f12d860fea64da8810a2c66","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:20"},{"id":"5f12d868fea64da8810a2c68","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:28"},{"id":"5f12d875fea64da8810a2c6a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:41"},{"id":"5f12d879fea64da8810a2c6c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:45"},{"id":"5f12d880fea64da8810a2c6e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 11:09:52"},{"id":"5f12fd11fea64da8810a2c70","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:45:53"},{"id":"5f12fd17fea64da8810a2c72","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:45:59"},{"id":"5f12fd1afea64da8810a2c74","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:46:02"},{"id":"5f12fd46fea64da8810a2c76","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:46:46"},{"id":"5f12fdd6fea64da8810a2c78","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:10"},{"id":"5f12fdddfea64da8810a2c7a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:17"},{"id":"5f12fde1fea64da8810a2c7c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:21"},{"id":"5f12fde8fea64da8810a2c7e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:28"},{"id":"5f12fdf2fea64da8810a2c80","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:38"},{"id":"5f12fdfefea64da8810a2c82","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:50"},{"id":"5f12fe02fea64da8810a2c84","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:49:54"},{"id":"5f12fe09fea64da8810a2c86","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:50:01"},{"id":"5f12fe45fea64da8810a2c88","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:51:01"},{"id":"5f12fe72fea64da8810a2c8a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:51:46"},{"id":"5f12fe7ffea64da8810a2c8c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:51:59"},{"id":"5f12fe84fea64da8810a2c8e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:04"},{"id":"5f12fe90fea64da8810a2c90","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:16"},{"id":"5f12fea0fea64da8810a2c92","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:32"},{"id":"5f12fea9fea64da8810a2c94","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:41"},{"id":"5f12feb2fea64da8810a2c96","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:50"},{"id":"5f12feb6fea64da8810a2c98","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:52:54"},{"id":"5f12fec1fea64da8810a2c9a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:53:05"},{"id":"5f12feccfea64da8810a2c9c","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:53:16"},{"id":"5f12feddfea64da8810a2c9e","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:53:33"},{"id":"5f12fef7fea64da8810a2ca0","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:53:59"},{"id":"5f12ff03fea64da8810a2ca2","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:11"},{"id":"5f12ff0bfea64da8810a2ca4","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:19"},{"id":"5f12ff12fea64da8810a2ca6","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:26"},{"id":"5f12ff20fea64da8810a2ca8","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:40"},{"id":"5f12ff28fea64da8810a2caa","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:48"},{"id":"5f12ff30fea64da8810a2cac","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:54:56"},{"id":"5f12ff3dfea64da8810a2cae","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:09"},{"id":"5f12ff4cfea64da8810a2cb0","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:24"},{"id":"5f12ff57fea64da8810a2cb2","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:35"},{"id":"5f12ff62fea64da8810a2cb4","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:46"},{"id":"5f12ff68fea64da8810a2cb6","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:52"},{"id":"5f12ff6efea64da8810a2cb8","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:55:58"},{"id":"5f12ff72fea64da8810a2cba","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:56:02"},{"id":"5f12ff82fea64da8810a2cbc","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:56:18"},{"id":"5f12ff8ffea64da8810a2cbe","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:56:31"},{"id":"5f12ffa1fea64da8810a2cc0","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:56:49"},{"id":"5f12ffa4fea64da8810a2cc2","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:56:52"},{"id":"5f12ffb2fea64da8810a2cc4","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:57:06"},{"id":"5f12ffc7fea64da8810a2cc6","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:57:27"},{"id":"5f12ffcdfea64da8810a2cc8","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:57:33"},{"id":"5f12ffd2fea64da8810a2cc9","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:57:38"},{"id":"5f12ffd4fea64da8810a2cca","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:57:40"},{"id":"5f12fffafea64da8810a2ccb","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:58:18"},{"id":"5f130017fea64da8810a2ccd","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 13:58:47"},{"id":"5f130089fea64da8810a2cce","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:00:41"},{"id":"5f13009afea64da8810a2ccf","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:00:58"},{"id":"5f1300a7fea64da8810a2cd1","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:01:11"},{"id":"5f1300f6fea64da8810a2cd4","resource_id":"5f1300f6fea64da8810a2cd2","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2020-07-18 14:02:30"},{"id":"5f1300f6fea64da8810a2cd5","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:02:30"},{"id":"5f1300f9fea64da8810a2cd6","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:02:33"},{"id":"5f130160fea64da8810a2cd9","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:04:16"},{"id":"5f1301ccfea64da8810a2cdb","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:06:04"},{"id":"5f1308a4fea64da8810a2cdd","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 14:35:16"},{"id":"5f134126fea64da8810a2cdf","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 18:36:22"},{"id":"5f13501efea64da8810a2ce0","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 19:40:14"},{"id":"5f1358ef984492c2104eaa98","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 20:17:51"},{"id":"5f1359aa984492c2104eaa9a","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 20:20:58"},{"id":"5f137ca9b3336bc38c4d9239","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 22:50:17"},{"id":"5f137d6fb3336bc38c4d923b","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 22:53:35"},{"id":"5f137de9b3336bc38c4d923d","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 22:55:37"},{"id":"5f137e7cb3336bc38c4d923f","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 22:58:04"},{"id":"5f137ef6b3336bc38c4d9241","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 23:00:06"},{"id":"5f137f21b3336bc38c4d9243","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 23:00:49"},{"id":"5f13800fb89ef9c415b11544","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 23:04:47"},{"id":"5f1380662c5f97c448d112ca","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-18 23:06:14"},{"id":"5f14095e967871c7e895cf93","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 08:50:38"},{"id":"5f140e01967871c7e895cf96","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:10:25"},{"id":"5f140e0e967871c7e895cf98","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:10:38"},{"id":"5f140e1a967871c7e895cf9a","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:10:50"},{"id":"5f140e24967871c7e895cf9c","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:00"},{"id":"5f140e34967871c7e895cf9e","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:16"},{"id":"5f140e43967871c7e895cfa0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:31"},{"id":"5f140e51967871c7e895cfa2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:45"},{"id":"5f140e58967871c7e895cfa4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:52"},{"id":"5f140e5e967871c7e895cfa6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:11:58"},{"id":"5f140e8b967871c7e895cfa8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:12:43"},{"id":"5f140e9d967871c7e895cfaa","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:13:01"},{"id":"5f140ea8967871c7e895cfac","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:13:12"},{"id":"5f140eb1967871c7e895cfae","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:13:21"},{"id":"5f140eb7967871c7e895cfb0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:13:27"},{"id":"5f140eda967871c7e895cfb2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:14:02"},{"id":"5f140eed967871c7e895cfb4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:14:21"},{"id":"5f140ef1967871c7e895cfb6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:14:25"},{"id":"5f140eff967871c7e895cfb8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:14:39"},{"id":"5f140f06967871c7e895cfba","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:14:46"},{"id":"5f140f16967871c7e895cfbc","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:15:02"},{"id":"5f140f1e967871c7e895cfbe","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:15:10"},{"id":"5f140f27967871c7e895cfc0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:15:19"},{"id":"5f140f39967871c7e895cfc2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:15:37"},{"id":"5f140f42967871c7e895cfc4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:15:46"},{"id":"5f140f50967871c7e895cfc6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:00"},{"id":"5f140f5b967871c7e895cfc8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:11"},{"id":"5f140f5f967871c7e895cfca","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:15"},{"id":"5f140f71967871c7e895cfcc","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:33"},{"id":"5f140f7e967871c7e895cfce","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:46"},{"id":"5f140f89967871c7e895cfd0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:16:57"},{"id":"5f140f95967871c7e895cfd2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:17:09"},{"id":"5f140fd2967871c7e895cfd4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:10"},{"id":"5f140fe1967871c7e895cfd6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:25"},{"id":"5f140fe5967871c7e895cfd8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:29"},{"id":"5f140fe8967871c7e895cfda","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:32"},{"id":"5f140ff7967871c7e895cfdc","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:47"},{"id":"5f140ffc967871c7e895cfde","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:52"},{"id":"5f141003967871c7e895cfe0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:18:59"},{"id":"5f14100e967871c7e895cfe2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:19:10"},{"id":"5f141015967871c7e895cfe4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:19:17"},{"id":"5f141018967871c7e895cfe6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:19:20"},{"id":"5f141033967871c7e895cfe8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:19:47"},{"id":"5f14103b967871c7e895cfea","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:19:55"},{"id":"5f141045967871c7e895cfec","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:20:05"},{"id":"5f14104f967871c7e895cfee","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:20:15"},{"id":"5f141057967871c7e895cff0","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:20:23"},{"id":"5f14105f967871c7e895cff2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:20:31"},{"id":"5f141098967871c7e895cff4","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:21:28"},{"id":"5f14109e967871c7e895cff6","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:21:34"},{"id":"5f1410a4967871c7e895cff8","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:21:40"},{"id":"5f1410a6967871c7e895cff9","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:21:42"},{"id":"5f141332967871c7e895cffb","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:32:34"},{"id":"5f14135e967871c7e895cffd","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:33:18"},{"id":"5f14136b967871c7e895cfff","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:33:31"},{"id":"5f14136f967871c7e895d000","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:33:35"},{"id":"5f141389967871c7e895d001","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 09:34:01"},{"id":"5f143500b7d616d0276f5ae1","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-19 11:56:48"},{"id":"5f173554b51733dcfb279b73","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:35:00"},{"id":"5f173555b51733dcfb279b74","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:35:01"},{"id":"5f173585b51733dcfb279b75","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:35:49"},{"id":"5f173596b51733dcfb279b78","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:36:06"},{"id":"5f17359fb51733dcfb279b79","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:36:15"},{"id":"5f173701b51733dcfb279b7b","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:42:09"},{"id":"5f173716b51733dcfb279b7d","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:42:30"},{"id":"5f17393eb51733dcfb279b7f","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:51:42"},{"id":"5f173ab2b51733dcfb279b81","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:57:54"},{"id":"5f173af9b51733dcfb279b83","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 18:59:05"},{"id":"5f173b35b51733dcfb279b85","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:00:05"},{"id":"5f173c3ab51733dcfb279b87","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:04:26"},{"id":"5f173d08b51733dcfb279b89","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:07:52"},{"id":"5f173d1fb51733dcfb279b8b","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:08:15"},{"id":"5f173d7eb51733dcfb279b8d","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:09:50"},{"id":"5f17419cb51733dcfb279b8f","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:27:24"},{"id":"5f1743b1b51733dcfb279b90","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:36:17"},{"id":"5f1743ddb51733dcfb279b91","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:37:01"},{"id":"5f174468b51733dcfb279b92","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-21 19:39:20"},{"id":"5f1892cbb51733dcfb279b96","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:26:03"},{"id":"5f1897151dfe3a0c1ca351a5","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:44:21"},{"id":"5f18972b1dfe3a0c1ca351a7","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:44:43"},{"id":"5f18973e1dfe3a0c1ca351a9","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:45:02"},{"id":"5f1898aa1dfe3a0c1ca351ab","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:06"},{"id":"5f1898bc1dfe3a0c1ca351ad","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:24"},{"id":"5f1898c21dfe3a0c1ca351af","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:30"},{"id":"5f1898ce1dfe3a0c1ca351b1","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:42"},{"id":"5f1898d51dfe3a0c1ca351b3","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:49"},{"id":"5f1898dc1dfe3a0c1ca351b5","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:51:56"},{"id":"5f1898e31dfe3a0c1ca351b7","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:52:03"},{"id":"5f189a7c1dfe3a0c1ca351b9","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:58:52"},{"id":"5f189a921dfe3a0c1ca351bb","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:59:14"},{"id":"5f189a961dfe3a0c1ca351bd","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:59:18"},{"id":"5f189ab21dfe3a0c1ca351bf","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 19:59:46"},{"id":"5f189ada1dfe3a0c1ca351c1","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:00:26"},{"id":"5f189b081dfe3a0c1ca351c3","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:01:12"},{"id":"5f189b261dfe3a0c1ca351c5","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:01:42"},{"id":"5f189b2a1dfe3a0c1ca351c7","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:01:46"},{"id":"5f189b2d1dfe3a0c1ca351c8","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:01:49"},{"id":"5f189b761dfe3a0c1ca351ca","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:03:02"},{"id":"5f18a6801dfe3a0c1ca351cc","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:50:08"},{"id":"5f18a6a01dfe3a0c1ca351ce","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:50:40"},{"id":"5f18a6b21dfe3a0c1ca351d0","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:50:58"},{"id":"5f18a6c61dfe3a0c1ca351d2","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 20:51:18"},{"id":"5f18c14a1dfe3a0c1ca351d4","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 22:44:26"},{"id":"5f18c2881dfe3a0c1ca351d6","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-22 22:49:44"},{"id":"5f19de2a1dfe3a0c1ca351d7","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 18:59:54"},{"id":"5f19e0a61dfe3a0c1ca351d9","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 19:10:30"},{"id":"5f19e8021dfe3a0c1ca351db","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 19:41:54"},{"id":"5f19e8511dfe3a0c1ca351e1","resource_id":"5f19e8511dfe3a0c1ca351dd","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2020-07-23 19:43:13"},{"id":"5f19e8511dfe3a0c1ca351e2","resource_id":"5f19e8511dfe3a0c1ca351de","resource_type":"tag","actor_id":"1","actor_type":"user","event":"added","context":null,"created_at":"2020-07-23 19:43:13"},{"id":"5f19e8511dfe3a0c1ca351e3","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 19:43:13"},{"id":"5f19e9c21dfe3a0c1ca351e5","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 19:49:22"},{"id":"5f19eb0a1dfe3a0c1ca351e7","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 19:54:50"},{"id":"5f19ecb71dfe3a0c1ca351e9","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:01:59"},{"id":"5f19ef701dfe3a0c1ca351eb","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:13:36"},{"id":"5f19f0b61dfe3a0c1ca351ed","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:19:02"},{"id":"5f19f0f61dfe3a0c1ca351ee","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:20:06"},{"id":"5f19f1051dfe3a0c1ca351ef","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:20:21"},{"id":"5f19f1c619d1371edcd15ed7","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:23:34"},{"id":"5f19f1d619d1371edcd15ed9","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:23:50"},{"id":"5f19f1ef19d1371edcd15edb","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:24:15"},{"id":"5f19f21619d1371edcd15edc","resource_id":"5f1203ad07a62a995513aebf","resource_type":"tag","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:24:54"},{"id":"5f19f21e19d1371edcd15edd","resource_id":"5f12024507a62a995513ad44","resource_type":"tag","actor_id":"1","actor_type":"user","event":"deleted","context":null,"created_at":"2020-07-23 20:25:02"},{"id":"5f19f3b419d1371edcd15edf","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 20:31:48"},{"id":"5f1a16ecf883d32764976eaa","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-23 23:02:04"},{"id":"5f1b6dc7f883d32764976eac","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:24:55"},{"id":"5f1b6dcaf883d32764976ead","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:24:58"},{"id":"5f1b6ddef883d32764976eaf","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:18"},{"id":"5f1b6de0f883d32764976eb0","resource_id":"5f1203ad07a62a995513aedd","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:20"},{"id":"5f1b6de9f883d32764976eb2","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:29"},{"id":"5f1b6dedf883d32764976eb3","resource_id":"5f1203ad07a62a995513aedc","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:33"},{"id":"5f1b6dfaf883d32764976eb5","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:46"},{"id":"5f1b6dfaf883d32764976eb6","resource_id":"5f1203ad07a62a995513aedb","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:25:46"},{"id":"5f1b6e51f883d32764976eb7","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:27:13"},{"id":"5f1b6e6bf883d32764976eb8","resource_id":"1","resource_type":"user","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-24 23:27:39"},{"id":"5f1c780bf883d32764976eba","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-25 18:20:59"},{"id":"5f1df72df883d32764976ebc","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-26 21:35:41"},{"id":"5f1df94ef883d32764976ebe","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-26 21:44:46"},{"id":"5f1df95bf883d32764976ec0","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-26 21:44:59"},{"id":"5f2074b28405cd7cabe17f2d","resource_id":"5f1203ad07a62a995513aee0","resource_type":"post","actor_id":"1","actor_type":"user","event":"edited","context":null,"created_at":"2020-07-28 18:55:46"}],"emails":[]}}